{"version":3,"sources":["hooks/fileSubtitle.js","component/FileManager/Sort.tsx","component/Placeholder/TextLoading.js","middleware/Api.ts","redux/explorer/reducer.ts","component/Dial/AutoHidden.js","services/navigate.ts","services/file.ts","redux/explorer/async.ts","utils/page.ts","middleware/Auth.ts","redux/explorer/index.ts","i18n.ts","component/Uploader/core/utils/pool.ts","component/Uploader/core/utils/validator.ts","component/Uploader/core/utils/request.ts","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Modals/CreateShare.js","component/Modals/OptionSelector.js","component/Dial/Save.js","utils/index.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/DirectoryDownload.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/Modals/RemoteDownload.js","component/Modals/Delete.js","component/FileManager/Modals.js","component/Viewer/Text.js","component/Viewer/Code.js","component/Uploader/core/errors/index.ts","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Uploader/core/utils/helper.ts","component/Uploader/core/utils/index.ts","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","utils/zip.js","utils/api.ts","utils/filesystem.ts","redux/explorer/action.ts","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","component/Uploader/core/types.ts","component/Uploader/core/uploader/base.ts","component/Uploader/core/logger.ts","component/Uploader/core/api/index.ts","component/Uploader/core/index.ts","component/Uploader/core/uploader/chunk.ts","component/Uploader/core/uploader/local.ts","component/Uploader/core/uploader/remote.ts","component/Uploader/core/uploader/onedrive.ts","component/Uploader/core/uploader/oss.ts","component/Uploader/core/uploader/qiniu.ts","component/Uploader/core/uploader/cos.ts","component/Uploader/core/uploader/upyun.ts","component/Uploader/core/uploader/s3.ts","component/Uploader/core/uploader/placeholder.ts","component/Dial/Create.js","component/Uploader/Popup/TaskDetail.js","component/Uploader/Popup/UploadTask.js","component/Uploader/UseUpload.js","component/Modals/ConcurrentOption.js","component/Uploader/Popup/MoreActions.js","component/Uploader/Popup/TaskList.js","component/Placeholder/DropFile.js","component/Uploader/Uploader.js","config.ts","redux/viewUpdate/action.ts","utils/datetime.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","middleware/NoAuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/FileName.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/DnD/Scrolling.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","hooks/pagination.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/PaginationItem.js","component/FileManager/Pagination.js","component/FileManager/FileManager.js","component/Viewer/SelectMenu.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/AppQRCode.js","component/Setting/AppPromotion.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/FileManager/MusicPlayer.js","component/Viewer/Epub.js","App.js","middleware/Init.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","component/Placeholder/Nothing.js","component/FileManager/PathSelector.js"],"names":["UseFileSubTitle","query","math","location","dispatch","useDispatch","useState","title","setTitle","path","setPath","SetSubTitle","useCallback","changeSubTitle","useEffect","pathHelper","isSharePage","pathname","get","split","length","params","SORT_OPTIONS","value","label","Sort","onChange","isSmall","inherit","className","t","useTranslation","keyPrefix","anchorSort","setAnchorSort","sortBy","setSortBy","onClick","e","currentTarget","color","fontSize","id","anchorEl","open","Boolean","onClose","map","option","index","key","selected","onChangeSort","sortMethodFuncs","sizePos","a","b","size","sizeRes","namePos","name","localeCompare","navigator","languages","language","numeric","ignorePunctuation","nameRev","timePos","Date","parse","create_date","timeRev","modifyTimePos","date","modifyTimeRev","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","TextLoading","useTheme","classes","palette","type","baseURL","getBaseURL","getPreviewURL","isShare","shareID","fileID","encodeURIComponent","instance","axios","create","withCredentials","AppError","message","code","error","i18next","exists","ns","includes","stack","Error","interceptors","response","use","rawData","data","undefined","Auth","signout","window","href","search","msg","Promise","reject","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selectProps","isMultiple","withFolder","withFile","withSourceEnabled","lastSelect","file","shiftSelectedIds","imgPreview","first","other","audioPreview","playingName","paused","isOpen","fileSave","sideBarOpen","checkSelectedProps","forEach","source_enabled","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","keywords","searchPath","currentPolicy","policy","AutoHidden","children","enable","hide","element","hidden","setHidden","prev","scrollY","lastUpdate","addEventListener","current","scrollTop","handleNavigation","in","share","apiURL","API","getDownloadURL","reqURL","downloadPath","put","askForOption","options","getState","resolve","dialog","setOptionModal","callback","statusHelper","isHomePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","SetPreference","preference","GetPreference","GetPreferenceWithDefault","defaultVal","actions","reducers","setNavigator","navigatorLoading","navigateTo","setPagination","viewUpdate","pagination","page","navigateUp","pathSplit","pop","newPath","join","drawerToggleAction","dragAndDrop","changeViewMethod","method","toggleDaylightMode","changeContextMenu","menuType","setNavigatorLoadingStatus","status","setNavigatorError","openCreateFolderDialog","openCreateFileDialog","setUserPopover","anchor","setShareUserPopover","openRenameDialog","openResaveDialog","openMoveDialog","openRemoveDialog","openShareDialog","applyThemes","setSessionStatus","openMusicDialog","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","openLoadingDialog","text","closeAllModals","toggleSnackbar","vertical","horizontal","setModalsLoading","refreshFileList","searchMyFile","showImgPreivew","showAudioPreview","audioPreviewSetIsOpen","audioPreviewSetPlaying","refreshStorage","saveFile","setSiteConfig","config","openDirectoryDownloadDialog","downloading","log","done","i18n","ChainedBackend","LanguageDetector","initReactI18next","init","fallbackLng","debug","load","defaultNS","interpolation","escapeValue","backend","backends","LocalStorageBackend","Backend","backendOptions","expirationTime","queryStringParams","v","ASSETS_VERSION","loadPath","on","lng","document","documentElement","setAttribute","displayName","Pool","limit","queue","processing","uploader","push","check","item","this","findIndex","task","dst","ProcessingTaskDuplicatedError","release","run","then","err","processingNum","availableNum","Math","max","slice","checkers","allowedSuffix","ext","FileValidateError","maxSize","validate","c","CancelToken","baseConfig","transformResponse","TransformResponseError","cdBackendConfig","request","url","catch","isCancel","RequestCanceledError","HTTPError","requestAPI","icon","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","ToggleThemeMode","isDayLight","isDark","placement","classNames","sideButton","marginRight","paginationOption","SubActions","viewMethod","explorerViewMethod","shareInfo","pageSize","OpenLoadingDialog","ChangeSortMethod","changeSortMethod","SetShareUserPopover","StartBatchDownloadAll","startBatchDownload","ChangePageSize","changePageSize","anchorPagination","setAnchorPagination","handlePaginationChange","s","toggleViewMethod","newMethod","toString","parseInt","nick","creator","style","height","src","widthAnimation","shareUrl","minWidth","wrapper","margin","spacing","buttonProgress","secondary","light","top","left","flexCenter","alignItems","noFlex","display","scoreCalc","marginTop","expireLabel","whiteSpace","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","ToggleSnackbar","lastSubmit","useRef","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","customExpires","setCustomExpires","customDownloads","setCustomDownloads","handleChange","prop","event","handleExpand","panel","isExpanded","handleCheck","setTimeout","aria-labelledby","maxWidth","fullWidth","aria-controls","button","primary","checked","variant","htmlFor","endAdornment","aria-label","random","substr","edge","onMouseDown","preventDefault","onIcon","offIcon","labelWidth","labelId","num","inputProps","min","marginLeft","onFocus","select","autoFocus","readonly","link","clipboard","writeText","submitFormBody","is_dir","post","disabled","modalsLoading","OptionSelector","modals","dividers","component","o","description","fab","right","bottom","zIndex","badge","fabProgress","green","buttonSuccess","SaveButton","buttonClassname","clsx","sizeToString","bytes","i","floor","pow","toFixed","fixUrlHash","setGetParameter","paramName","paramValue","indexOf","prefix","substring","suffix","history","pushState","changeThemeColor","querySelector","bufferDecode","Uint8Array","from","atob","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","filePath","hex2bin","hex","padStart","basename","pathList","filename","fileNameNoExt","lastIndexOf","randomStr","result","characters","charactersLength","charAt","getNumber","base","conditions","isMac","platform","toUpperCase","isMobileSafari","ua","userAgent","iOS","match","webkit","vhCheck","vh","innerHeight","setProperty","removeI18nCache","keys","removeItem","getSelectItemStyles","personName","fontWeight","typography","fontWeightRegular","fontWeightMedium","avatar","blue","loadingContainer","loading","LoadingDialog","loadingText","Dialog","DialogContent","DialogContentText","CircularProgress","contentFix","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","SetModalsLoading","RefreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","Trans","i18nKey","components","DialogActions","Button","dirs","items","src_dir","DirectoryDownloadDialog","logRef","autoScroll","setAutoScroll","previousLog","usePrevious","next","timer","setTimer","useInterval","scrollIntoView","behavior","block","TextField","ref","multiline","FormControlLabel","control","Checkbox","previous","cancelDirectoryDownload","DecompressDialog","SubmitDecompressTask","submitDecompressTask","CompressDialog","fileName","setFileName","SubmitCompressTask","submitCompressTask","formGroup","marginBottom","forumInput","flexGrow","RemoteDownload","selectPathOpen","setSelectPathOpen","downloadTo","setDownloadTo","setUrl","useMediaQuery","torrent","placeholder","InputProps","startAdornment","InputAdornment","input","FolderOpenOutlined","failed","r","details","form","Delete","user","force","setForce","unlink","setUnlink","group","advanceDelete","FormControl","FormLabel","FormGroup","Tooltip","delete","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","purchaseCallback","handleInputChange","setState","newNameSuffix","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","dragMove","scoreHandler","Download","downloaded","submitMove","patch","DragSelectedPath","doMove","submitRename","new_name","submitCreateNewFolder","submitCreateNewFile","setMoveTarget","copySource","getSource","createNewFolder","onSubmit","createNewFile","copy","move","remove","remoteDownload","remoteDownloadTorrent","decompress","compress","directoryDownloading","directoryDownloadDone","directoryDownloadLog","Component","Modals","connect","withRouter","withTranslation","layout","up","player","borderRadius","shape","overflowX","TextViewer","setContent","setStatus","setLoading","useRouteMatch","$vm","createRef","useLocation","URLSearchParams","useParams","requestURL","responseType","textdata","Buffer","toBase64","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","$img2Url","console","elevation","onSave","toolbar","h1","h2","h3","h4","img","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","wordWrap","setWordWrap","extension","codePreviewSuffix","Array","Set","k","fallback","readOnly","extraEditorClassName","UploaderErrorName","RETRY_ERROR_LIST","FailedCreateUploadSession","HTTPRequestFailed","LocalChunkUploadFailed","SlaveChunkUploadFailed","RequestCanceled","ProcessingTaskDuplicated","FailedTransformResponse","RETRY_CODE_LIST","UploaderError","field","InvalidFile","supported","UnknownPolicyError","UnknownPolicyType","APIError","appError","CreateUploadSessionError","DeleteUploadSessionError","FailedDeleteUploadSession","axiosErr","LocalChunkUploadError","chunkIndex","SlaveChunkUploadError","OneDriveChunkError","OneDriveChunkUploadFailed","retryAfterSeconds","retryAfter","OneDriveEmptyFileSelected","OneDriveEmptyFile","OneDriveFinishUploadError","FailedFinishOneDriveUpload","S3LikeChunkError","S3LikeChunkUploadFailed","getElementsByTagName","innerHTML","S3LikeFinishUploadError","QiniuChunkError","QiniuChunkUploadFailed","QiniuFinishUploadError","FailedFinishQiniuUpload","COSUploadError","COSPostUploadFailed","COSUploadCallbackError","COSUploadCallbackFailed","UpyunUploadError","UpyunPostUploadFailed","S3LikeUploadCallbackError","S3LikeUploadCallbackFailed","parseError","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","openURL","sigOut","reload","Popover","transformOrigin","visitorMenu","Divider","MenuItem","ListItemIcon","registerEnabled","header","largeAvatarContainer","Avatar","largeAvatar","Typography","noWrap","nickname","user_name","Chip","UserAvatarPopover","userPopoverAnchorEl","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","IconButton","Home","UserAvatar","ListItem","MuiListItem","NavbarCompoment","handleDrawerToggle","mobileOpen","openDownload","startDownload","openDirectoryDownload","startDirectoryDownload","archiveDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","paddingList","iconFix","allowRemoteDownload","webdav","process","browser","test","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","cursor","subTitle","grow","sectionForFile","isPreviewable","openPreview","showDirectoryPicker","isSecureContext","disableClickAway","audioPreviewPlayingName","audioPreviewOpen","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","loadUploader","audioPreviewIsOpen","withTheme","flexShrink","drawerDesktop","mixins","flexDirection","justifyContent","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","nested","paddingLeft","extendedIcon","addButton","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","getChunks","chunkByteSize","chunks","count","ceil","chunk","sumChunk","reduce","loaded","getResumeCtxKey","setResumeCtx","logger","ctxKey","warn","WriteCtxFailed","removeResumeCtx","RemoveCtxFailed","cleanupResumeCtx","getResumeCtx","localInfoString","ReadCtxFailed","localInfo","InvalidCtxData","session","now","CtxExpired","listResumeCtx","res","len","OBJtoXML","obj","xml","isArray","array","getFileInput","isFolder","createElement","multiple","body","appendChild","pathJoin","parts","sep","part","RegExp","trimPrefix","getDirectoryUploadDst","relPath","webkitRelativePath","fsPath","readEntriesPromise","directoryReader","readEntries","readFilePromise","fileReader","readAllDirectoryEntries","entries","getAllFileEntries","dataTransferItemList","fileEntries","webkitGetAsEntry","getAsFile","entry","shift","isFile","fullPath","isDirectory","createReader","isFileDrop","dataTransfer","types","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","fade","common","white","pointerEvents","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","Crc32","crc","table","offset","prototype","j","getDataHelper","byteLength","uint8","view","DataView","buffer","ZIP","underlyingSource","ctrl","activeZipObject","closed","files","filenames","encoder","TextEncoder","activeZipIndex","processNextChunk","closeZip","zipWriter","enqueue","fileLike","TypeError","trim","lastModified","directory","endsWith","nameBuf","encode","zipObject","level","comment","compressedLength","uncompressedLength","writeHeader","setUint16","setUint32","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","set","writeFooter","footer","indexFilename","setUint8","zipObj","read","outputData","append","stream","getReader","ReadableStream","start","pull","getPreviewPath","walk","f","objects","subs","getFileSystemDirectoryPaths","handle","parent","paths","fileSystemHandle","FileSystemFileHandle","createFileSystemDirectory","cur","getDirectoryHandle","saveFileToFileSystemDirectory","dir","getFileHandle","createWritable","writable","write","verifyFileSystemRWPermission","fileHandle","opts","mode","queryPermission","requestPermission","directoryDownloadAbortController","setFileList","setDirList","setSortMethod","setSideBar","setCurrentPolicy","removeSelectedTargets","addSelectedTargets","setLastSelect","setShiftSelectedIds","selectAll","updateFileList","sortMethod","x","sortFunc","sort","toggleObjectInfoSidebar","closeContextMenu","serverSideBatchDownload","router","fileSources","postBody","shareDownload","allowArchiveDownload","walkSources","fileStream","streamSaver","createWriteStream","readableZipStream","previewPath","fetch","cache","WritableStream","pipeTo","abort","AbortController","startIn","fsPaths","duplicates","updateLog","signal","blob","getViewerURL","viewer","openViewer","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","all","begin","end","newShiftSelected","encodings","encoding","encodingRequired","allOptions","batchGetSource","sourceBatch","openTorrentDownload","openParentFolder","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","minHeight","transform","hiddenButton","subMenu","overFlow","paddingSummary","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","p","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","PolicyType","TaskType","Status","Logger","allowLevel","args","getPrintPrefix","createUploadSession","req","cancel","cancelToken","localUploadChunk","sessionID","onProgress","headers","onUploadProgress","progressEvent","slaveUploadChunk","credential","Authorization","oneDriveUploadChunk","range","finishOneDriveUpload","s3LikeUploadChunk","etag","s3LikeFinishUpload","isOss","PartNumber","ETag","validateStatus","qiniuDriveUploadChunk","upToken","authorization","qiniuFinishUpload","partNumber","cosFormUploadChunk","keyTime","ak","bodyFormData","FormData","cosUploadCallback","upyunFormUploadChunk","s3LikeUploadCallback","resumePolicy","local","remote","qiniu","oss","onedrive","s3","Base","manager","child","added","subscriber","progress","lastTime","startTime","subscribe","transit","initialized","setError","queued","pool","preparing","cachedInfo","utils","policy_id","last_modified","mime_type","token","resumed","chunkProgress","upload","afterUpload","finished","cancelUploadSession","canceled","reset","deleteUploadSession","onTransition","newStatus","onError","onMsg","Retryable","fromCache","SelectType","Chunk","initBeforeUploadChunks","updateLocalCache","uploadChunk","chunkSize","notifyResumeProgress","getProgressInfoItem","Local","chunkInfo","updateChunkProgress","Remote","uploadURLs","OneDrive","rangeEnd","sendRange","innererror","alignChunkOffset","chunkOffset","rangeStatus","expectedStart","nextExpectedRanges","newChunkOffset","finishing","OSS","completeURL","Qiniu","chunkRes","COS","Upyun","ResumeHint","resumable","UploadManager","fileInput","directoryInput","currentPath","changeConcurrentLimit","newLimit","File","NoPolicySelected","onchange","ev","fileSelectCallback","click","resumeTasks","tasks","dispatchUploader","resumeHint","cleanupSessions","Event","onFileDroppedIn","onDropLeave","uploaders","onDropFileAdded","logLevel","concurrentLimit","dropZone","onDropOver","cos","upyun","S3","acceptVal","removeAttribute","UploadButton","setOpen","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","uploadClicked","openFileList","circularProgress","useMemo","totalSize","processedSize","taskListOpen","Badge","badgeContent","invisible","Backdrop","SpeedDial","tooltipTitle","SpeedDialIcon","openIcon","FabProps","ariaLabel","SpeedDialAction","tooltipOpen","Directory","infoTitle","infoValue","wordBreak","TaskDetail","navigateToDst","Link","datetime","locale","Grid","xs","progressContent","progressContainer","listAction","successStatus","errorStatus","disabledBadge","dstLink","fileNameContainer","getSpeedText","speed","speedAvg","useSpeedAvg","displayedSpeed","getErrMsg","errMsg","Message","UploadTask","useAvgSpeed","onCancel","onRefresh","taskHover","setTaskHover","startLoadedRef","setProgress","durationTotal","resAvg","retry","useUpload","fullScreen","statusText","uploaded","percentage","resumeLabel","continueLabel","progressBar","lighten","darken","taskDetail","u","stopRipple","stopPropagation","secondaryAction","show","onTouchStart","fileIcon","TypeIcon","isUpload","newExpanded","onMouseOver","ListItemText","ConcurrentOptionDialog","setCount","InputLabel","Input","step","MoreActions","uploadManager","deleteTask","setUseAvgSpeed","setFilter","sorter","setSorter","cleanFinished","retryFailed","concurrentDialog","setConcurrentDialog","RefreshStorage","listItems","tooltip","divider","Replay","ClearAll","Menu","enterNextDelay","dense","val","Transition","forwardRef","Slide","direction","rootOverwrite","flex","popup","inset","paddingZero","dialogContent","maxHeight","virtualList","expandIcon","shortest","expandIconExpanded","sorters","reverse","filters","ongoing","TaskList","taskList","setUploaders","setAnchorEl","refreshList","setRefreshList","reason","Fade","currentList","Nothing","increaseViewportBy","itemContent","classnames","TransitionComponent","disableEnforceFocus","hideBackdrop","disableBackdropClick","disableScrollLock","Accordion","AppBar","Toolbar","disableGutters","MoreHoriz","AccordionDetails","createStyles","backdrop","DropFileBackground","totalProgressCollector","lastProgressStart","Uploader","setTaskListOpen","dropBgOpen","setDropBgOpen","processed","totalProgress","setTotalProgress","fileSelectCounter","openFileSelector","folderSelectCounter","openFolderSelector","enableUploader","taskAdded","original","onToast","setPolicy","unfinished","setInterval","msDocPreviewSuffix","subtitleSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","epubSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","zip","excute","android","python","epub","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","setWopiExts","exts","setSubtitle","setShareInfo","selectLanguage","changeLanguage","dayjs","extend","utc","timezone","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","preferTimeZone","refreshTimeZone","formatLocalTime","time","tz","toDate","formatParams","year","month","day","hour","minute","second","validateTimeZone","format","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","MenuBook","fileSuffix","getColor","getColorValue","iconClassName","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","AuthRoute","rest","render","to","NoAuthRoute","emptyContainer","emptyInfoBig","Notice","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaInputContainer","required","autoComplete","captchaImageContainer","captchaImage","alt","ReCAPTCHA","handleExpired","bind","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","onExpired","onErrored","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","removeChild","elem","childProps","defaultProps","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","captchaContainer","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","ret","ticket","randstr","isValidate","submit","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","normal","captchaParamsRef","CaptchaRender","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","Paper","login","userName","Password","EmailOutlined","VpnKeyOutlined","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","RouterLink","Fingerprint","VpnKey","highlight","FileName","highlightClassName","searchWords","autoEscape","textToHighlight","SmallIconCompoment","nextState","nextContext","isSelectedCurrent","isSelectedNext","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","Folder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","boxSizing","FileIconCompoment","showPicIcon","thumb","picPreview","noDrag","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","userDrag","active","isActive","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","renderMenuItems","visibleCount","condition","menuOpen","anchorReference","anchorPosition","Unarchive","Archive","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","hover","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","useDragScrolling","isScrolling","goDown","isScrollEnd","offsetHeight","scrollHeight","requestAnimationFrame","goUp","throttleOnDragOver","throttle","isMouseOnTop","isMouseOnDown","addEventListenerForWindow","removeEventListenerForWindow","removeEventListener","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","StartDownload","SelectFile","handleIconClick","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","rootTable","typeHeader","errorBox","errorMsg","flexFix","upButton","clickAway","rootShare","visuallyHidden","clip","gridContainer","gridTemplateColumns","gridItem","DELETE_FILE","SELECT_ALL_SHOWED","SELECT_ALL","DESELECT_ALL","Explorer","navigatorErrorMsg","navigatorError","OpenRemoveDialog","ChangeContextMenu","SelectAll","page_size","page_number","startIndex","usePagination","showView","listView","TableHead","TableSortLabel","TableBody","normalView","data-clickAway","dataset","clickaway","allowChanges","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","clearTimeout","shouldClose","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","navigateToPath","max_size","file_type","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","drawerDesktopOpen","overflowInitLock","hasOverflowingChildren","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","setDetails","propsItem","d","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","query_date","Hidden","Clear","Drawer","gutterBottom","CustomPaginationItem","PaginationItem","PaginationFooter","SetPagination","setKeywords","Pagination","renderItem","FileManager","DndProvider","HTML5Backend","DragLayer","SelectMenu","showIcon","Artplayer","externalPlayers","actionButton","VideoViewer","art","setArt","setFiles","subtitles","setSubtitles","playlist","setPlaylist","subtitleOpen","setSubtitleOpen","subtitleSelected","setSubtitleSelected","playlistOpen","setPlaylistOpen","externalPlayerOpen","setExternalPlayerOpen","selectedIndex","setSelectedIndex","totalPage","setTotalPage","setPage","pageArray","setPageArray","endIndex","imageStyle","detailsStyle","autoHeight","pictureInPictureEnabled","playing","pip","pause","newURL","subtitle","switchUrl","switchSubtitle","switch","fileNameMatch","switchVideo","flip","setting","playbackRate","aspectRatio","hotkey","fullscreen","fullscreenWeb","whitelist","moreVideoAttr","playsInline","lang","getInstance","startIcon","Subtitles","PlaylistPlay","Launch","gotoPreVideo","gotoNextVideo","sub","jumpTo","gap","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","cardAction","SearchResult","tGlobal","setTotal","shareList","setShareList","orderBy","setOrderBy","order","sm","Select","Card","CardHeader","subheader","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","md","CardActions","disableActionSpacing","VisibilityOff","MyShare","scroll","SelectFileDialog","filesCopy","row","iconContainer","borderInlineStart","contentSide","iconMultiple","subFile","subFileName","subFileIcon","subFileSize","subFilePercent","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","context","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","subFileList","processStyle","completedLength","subFileCell","newIndex","newFiles","gid","indexes","deleteFile","HighlightOff","Table","TableRow","CardContent","LinearProgress","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","node","FinishedCard","getTaskError","task_status","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","previousDownloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","ignore","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","iframe","DocViewer","setSession","setFile","shareOpened","modalLoading","CloseAllModals","OpenShareDialog","access_token","replaceAll","resolvedLanguage","handlePostMessage","origin","MessageId","frameholder","getElementById","office_frame","access_token_ttl","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","qrcode","AppQRCode","clearInterval","Box","PhoneSkeleton","xmlns","enableBackground","viewBox","fill","strokeMiterlimit","strokeWidth","cx","cy","phoneContainer","marginX","perspective","transformStyle","perspectiveOrigin","phoneFrame","phoneImage","bold","frameContainer","grid","ol","paddingInlineStart","li","AppPromotion","effect","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","appPromotion","app_promotion","account","ID","CreatedAt","Name","Root","Readonly","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","TableContainer","align","accountCopy","toggleAccountReadonly","allowWebDAVProxy","UseProxy","use_proxy","toggleAccountUseProxy","CloudOff","Cloud","deleteAccount","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","List","fingerprint","ListItemSecondaryAction","credentialCreationOptions","excludeCredentials","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","uid","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","themes","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","newMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","Translate","GitHub","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","MusicPlayerComponent","currentIndex","currentTime","progressText","looptype","myAudioRef","newItem","handleItemClick","backgroundPlay","bindEvents","ele","readyPlay","loopnext","timeUpdate","unbindEvents","play","formatTime","isNaN","playOrPaues","isPlay","changeLoopType","lt","handleProgress","idx","Slider","slider_root","justify","Repeat","RepeatOne","Shuffle","MusicPlayer","ReactReader","m","EpubViewer","currentLocation","setLocation","fileUrl","locationChanged","epubcifi","epubInitOptions","openAs","showToc","PDFViewer","App","themeConfig","prefersDarkMode","prefer","createMuiTheme","overrides","MuiButton","MuiTab","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","initUserConfig","store","defaultTheme","wopi_exts","preferListMethod","share_view_method","home_view_method","music","resave","doNavigate","currntPath","defaultStatus","rawStore","configCache","InitSiteConfig","siteICPId","QQLogin","black","contrastText","hint","bgSelected","emptyIcon","ErrorBoundary","hasError","errorInfo","componentStack","Admin","hash","contentType","ready","unregister","checkValidServiceWorker","alert","waiting","postMessage","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","thunk","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","emptyInfoSmall","PathSelectorCompoment","selectedTarget","sourceDirList","toBeLoad","back","api","updateDirList","handleSelect","unshift","displayNames","sortWrapper","sortButton","selector","primaryTypographyProps","showActionIcon","buttonIcon","iconWhite","actionIcon"],"mappings":"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","file":"static/js/main.42b819de.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { changeSubTitle } from \"../redux/viewUpdate/action\";\nimport pathHelper from \"../utils/page\";\n\nexport default function UseFileSubTitle(query, math, location) {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState(\"\");\n    const [path, setPath] = useState(\"\");\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            setPath(query.get(\"p\"));\n            SetSubTitle(path[path.length - 1]);\n            setTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n            setTitle(query.get(\"name\"));\n            setPath(query.get(\"share_path\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    return { title, path };\n}\n","import React, { MouseEventHandler, useState } from \"react\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport { useTranslation } from \"react-i18next\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\n\nconst SORT_OPTIONS: {\n    value: SortMethod;\n    label: string;\n}[] = [\n    { value: \"namePos\", label: \"A-Z\" },\n    { value: \"nameRev\", label: \"Z-A\" },\n    { value: \"timePos\", label: \"oldestUploaded\" },\n    { value: \"timeRev\", label: \"newestUploaded\" },\n    { value: \"modifyTimePos\", label: \"oldestModified\" },\n    { value: \"modifyTimeRev\", label: \"newestModified\" },\n    { value: \"sizePos\", label: \"smallest\" },\n    { value: \"sizeRes\", label: \"largest\" },\n]\n\nexport default function Sort({ value, onChange, isSmall, inherit, className }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager.sortMethods\" });\n\n    const [anchorSort, setAnchorSort] = useState<Element | null>(null);\n    const showSortOptions: MouseEventHandler<HTMLButtonElement> = (e) => {\n        setAnchorSort(e.currentTarget);\n    }\n    \n    const [sortBy, setSortBy] = useState<SortMethod>(value || '')\n    function onChangeSort(value: SortMethod) {\n        setSortBy(value)\n        onChange(value)\n        setAnchorSort(null);\n    }\n    return (\n        <>\n            <IconButton\n                title={t(\"sortMethod\")}\n                className={className}\n                onClick={showSortOptions}\n                color={inherit ? \"inherit\" : \"default\"}\n            >\n                <TextTotateVerticalIcon\n                    fontSize={isSmall ? \"small\" : \"default\"}\n                />\n            </IconButton>\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorSort}\n                open={Boolean(anchorSort)}\n                onClose={() => setAnchorSort(null)}\n            >\n                {\n                    SORT_OPTIONS.map((option, index) => (\n                        <MenuItem\n                            key={index}\n                            selected={option.value === sortBy}\n                            onClick={() => onChangeSort(option.value)}\n                        >\n                            {t(option.label)}\n                        </MenuItem>\n                    ))\n                }\n            </Menu>\n        </>\n    )\n}\n\n\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\n\nexport const sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.create_date) - Date.parse(b.create_date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.create_date) - Date.parse(a.create_date);\n    },\n    modifyTimePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    modifyTimeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    },\n};\n","import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10,\n        },\n    },\n}));\n\nconst MyLoader = (props) => (\n    <Code\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction TextLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","import axios from \"axios\";\nimport Auth from \"./Auth\";\nimport i18next from \"../i18n\";\n\nexport const baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nexport const getPreviewURL = (\n    isShare: boolean,\n    shareID: any,\n    fileID: any,\n    path: any\n): string => {\n    return (\n        getBaseURL() +\n        (isShare\n            ? \"/share/preview/\" +\n              shareID +\n              (path !== \"\" ? \"?path=\" + encodeURIComponent(path) : \"\")\n            : \"/file/preview/\" + fileID)\n    );\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n});\n\nexport class AppError extends Error {\n    constructor(message: string | undefined, public code: any, error: any) {\n        super(message);\n        this.code = code;\n        if (i18next.exists(`errors.${code}`, { ns: \"common\" })) {\n            this.message = i18next.t(`errors.${code}`, {\n                ns: \"common\",\n                message,\n            });\n        } else if (i18next.exists(`errors.${code}`, { ns: \"dashboard\" })) {\n            this.message = i18next.t(`errors.${code}`, {\n                ns: \"dashboard\",\n                message,\n            });\n        } else {\n            this.message =\n                message || i18next.t(\"unknownError\", { ns: \"common\" });\n        }\n\n        this.message +=\n            error && !this.message.includes(error) ? ` (${error})` : \"\";\n        this.stack = new Error().stack;\n    }\n}\n\ninstance.interceptors.response.use(\n    function (response: any) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // Login expired\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href =\n                    \"/login?redirect=\" +\n                    encodeURIComponent(\n                        window.location.pathname + window.location.search\n                    );\n            }\n\n            // Non-admin\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\nimport { Policy } from \"../../component/Uploader/core/types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n    withSourceEnabled: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    audioPreview: {\n        first: CloudreveFile;\n        other: [];\n        playingName: any;\n        paused: boolean;\n        isOpen: boolean;\n    };\n    search?: {\n        keywords: string;\n        searchPath: string;\n    };\n    fileSave: boolean;\n    sideBarOpen: boolean;\n    currentPolicy?: Policy;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false,\n        withSourceEnabled: false,\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        index: -1,\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n    },\n    audioPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n        playingName: null,\n        paused: false,\n        isOpen: false,\n    },\n    fileSave: false,\n    sideBarOpen: false,\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    let withSourceEnabled = false;\n    selected.forEach((value) => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n            withSourceEnabled = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n            if (value.source_enabled) {\n                withSourceEnabled = true;\n            }\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile,\n        withSourceEnabled,\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source,\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list,\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list,\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected),\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected),\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter((file) => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected),\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n                search: {\n                    keywords: action.keywords,\n                    searchPath: action.path,\n                },\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"SHOW_AUDIO_PREVIEW\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_IS_OPEN\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    isOpen: action.isOpen,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_PLAYING\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    playingName: action.playingName,\n                    paused: action.paused,\n                },\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave,\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index,\n                },\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n                search: undefined,\n            };\n        case \"SET_SIDE_BAR\":\n            return {\n                ...state,\n                sideBarOpen: action.open,\n            };\n        case \"SET_CURRENT_POLICY\":\n            return {\n                ...state,\n                currentPolicy: action.policy,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","import React, { useEffect, useState } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable, hide = false, element = null }) {\n    const [hidden, setHidden] = useState(false);\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = (e) => {\n            const window = e.currentTarget;\n            const current = element ? element.scrollTop : window.scrollY;\n\n            if (prev > current) {\n                if (lastUpdate - current > show) {\n                    lastUpdate = current;\n                    setHidden(false);\n                }\n            } else if (prev < current) {\n                if (current - lastUpdate > show) {\n                    lastUpdate = current;\n                    setHidden(true);\n                }\n            }\n            prev = current;\n        };\n        if (enable) {\n            const target = element ? element : window;\n            target.addEventListener(\"scroll\", (e) => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden && !hide}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","import API from \"../middleware/Api\";\n\nexport async function list(\n    path: string,\n    share: any,\n    keywords: string,\n    searchPath: string\n): Promise<any> {\n    let apiURL = \"\";\n    if (share) {\n        if (keywords === \"\") {\n            apiURL = \"/share/list/\" + share.key;\n        } else {\n            apiURL = `/share/search/${share.key}/`;\n        }\n    } else {\n        if (keywords === \"\") {\n            apiURL = \"/directory\";\n        } else {\n            apiURL = \"/file/search/\";\n        }\n    }\n\n    path = keywords === \"\" ? path : keywords;\n    apiURL = apiURL + encodeURIComponent(path);\n    if (searchPath) {\n        apiURL = `${apiURL}?path=${encodeURIComponent(searchPath)}`;\n    }\n    return API.get(apiURL);\n}\n","import API from \"../middleware/Api\";\n\nexport async function getDownloadURL(file: any): Promise<any> {\n    let reqURL = \"\";\n    if (file.key) {\n        const downloadPath =\n            file.path === \"/\"\n                ? file.path + file.name\n                : file.path + \"/\" + file.name;\n        reqURL =\n            \"/share/download/\" +\n            file.key +\n            \"?path=\" +\n            encodeURIComponent(downloadPath);\n    } else {\n        reqURL = \"/file/download/\" + file.id;\n    }\n\n    return API.put(reqURL);\n}\n","import { ThunkAction } from \"redux-thunk\";\nimport { setOptionModal } from \"../viewUpdate/action\";\nimport i18next from \"../../i18n\";\n\nexport const askForOption = (\n    options: any,\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        return new Promise<void>((resolve, reject) => {\n            const dialog = {\n                open: true,\n                title: title,\n                options: options,\n            };\n            dispatch(\n                setOptionModal({\n                    ...dialog,\n                    onClose: () => {\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                        reject(i18next.t(\"fileManager.userDenied\"));\n                    },\n                    callback: (option: any) => {\n                        resolve(option);\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                    },\n                })\n            );\n        });\n    };\n};\n","const statusHelper = {\n    isHomePage(path: string) {\n        return path === \"/home\";\n    },\n    isSharePage(path: string) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path: string) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path: string) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    },\n};\nexport default statusHelper;\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key] !== undefined) {\n            return preference[key];\n        }\n        return null;\n    },\n    GetPreferenceWithDefault(key: string, defaultVal: any): any {\n        return Auth.GetPreference(key) !== null\n            ? Auth.GetPreference(key)\n            : defaultVal;\n    },\n};\n\nexport default Auth;\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\nimport { setPagination } from \"../viewUpdate/action\";\n\nexport default {\n    actions,\n    reducers,\n};\nexport { selectFile } from \"./action\";\nexport { openPreview } from \"./action\";\nexport { setShiftSelectedIds } from \"./action\";\nexport { setLastSelect } from \"./action\";\nexport { setSelectedTarget } from \"./action\";\nexport { addSelectedTargets } from \"./action\";\nexport { removeSelectedTargets } from \"./action\";\nexport const setNavigator = (path: any, navigatorLoading: any) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading,\n    };\n};\nexport const navigateTo = (path: any) => {\n    return (dispatch: any, getState: any) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        if (navigatorLoading) {\n            dispatch(\n                setPagination({\n                    ...state.viewUpdate.pagination,\n                    page: 1,\n                })\n            );\n        }\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        if (navigatorLoading) {\n            dispatch(\n                setPagination({\n                    ...state.viewUpdate.pagination,\n                    page: 1,\n                })\n            );\n        }\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\nexport const drawerToggleAction = (open) => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open,\n    };\n};\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target,\n    };\n};\nexport const changeViewMethod = (method) => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method,\n    };\n};\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\",\n    };\n};\n// Deprecated\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\nexport const setNavigatorLoadingStatus = (status) => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status,\n    };\n};\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg,\n    };\n};\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\n    };\n};\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\",\n    };\n};\nexport const setUserPopover = (anchor) => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const setShareUserPopover = (anchor) => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\",\n    };\n};\nexport const openResaveDialog = (key) => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key,\n    };\n};\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\",\n    };\n};\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\",\n    };\n};\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\",\n    };\n};\nexport const applyThemes = (theme) => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme,\n    };\n};\nexport const setSessionStatus = (status) => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status,\n    };\n};\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\",\n    };\n};\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\n    };\n};\nexport const openTorrentDownloadDialog = (selected) => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\n        selected:selected,\n    };\n};\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\",\n    };\n};\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\",\n    };\n};\nexport const openRelocateDialog = () => {\n    return {\n        type: \"OPEN_RELOCATE_DIALOG\",\n    };\n};\nexport const openGetSourceDialog = (source) => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\",\n        source,\n    };\n};\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\",\n    };\n};\n// Deprecated\nexport const openLoadingDialog = (text) => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text,\n    };\n};\n// Deprecated\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\",\n    };\n};\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color,\n    };\n};\nexport const setModalsLoading = (status) => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status,\n    };\n};\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\",\n    };\n};\nexport const searchMyFile = (keywords, path) => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords,\n        path: path,\n    };\n};\nexport const showImgPreivew = (first) => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first,\n    };\n};\nexport const showAudioPreview = (first) => {\n    return {\n        type: \"SHOW_AUDIO_PREVIEW\",\n        first: first,\n    };\n};\nexport const audioPreviewSetIsOpen = (isOpen) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_IS_OPEN\",\n        isOpen,\n    };\n};\nexport const audioPreviewSetPlaying = (playingName, paused) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_PLAYING\",\n        playingName, //the playing content name\n        paused,\n    };\n};\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\",\n    };\n};\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\",\n    };\n};\n\nexport const setSiteConfig = (config) => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config,\n    };\n};\n\nexport const openDirectoryDownloadDialog = (downloading, log, done) => {\n    return {\n        type: \"OPEN_DIRECTORY_DOWNLOAD_DIALOG\",\n        downloading,\n        log,\n        done,\n    };\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport Backend from \"i18next-http-backend\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport ChainedBackend, { ChainedBackendOptions } from \"i18next-chained-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport LocalStorageBackend from \"i18next-localstorage-backend\";\n\ndeclare let ASSETS_VERSION: string;\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\ni18n.use(ChainedBackend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: \"en-US\",\n        debug: true,\n        ns: [\"common\", \"application\"],\n        load: \"currentOnly\",\n        defaultNS: \"application\",\n        interpolation: {\n            escapeValue: false,\n        },\n        backend: {\n            backends:\n                process.env.NODE_ENV === \"development\"\n                    ? [Backend]\n                    : [LocalStorageBackend, Backend],\n            backendOptions: [\n                {\n                    expirationTime: 7 * 24 * 60 * 60 * 1000, // 7 days\n                },\n                {\n                    queryStringParams: { v: ASSETS_VERSION },\n                    loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n                },\n            ],\n        },\n    });\n\ni18n.on(\"languageChanged\", (lng) => {\n    document.documentElement.setAttribute(\"lang\", lng);\n});\n\nexport const languages = [\n    {\n        code: \"en-US\",\n        displayName: \"English\",\n    },\n    {\n        code: \"zh-CN\",\n        displayName: \"简体中文\",\n    },\n    {\n        code: \"zh-TW\",\n        displayName: \"繁體中文\",\n    },\n];\n\nexport default i18n;\n","import Base from \"../uploader/base\";\nimport { ProcessingTaskDuplicatedError } from \"../errors\";\n\nexport interface QueueContent {\n    uploader: Base;\n    resolve: () => void;\n    reject: (err?: any) => void;\n}\n\nexport class Pool {\n    queue: Array<QueueContent> = [];\n    processing: Array<QueueContent> = [];\n\n    constructor(public limit: number) {}\n\n    enqueue(uploader: Base) {\n        return new Promise<void>((resolve, reject) => {\n            this.queue.push({\n                uploader,\n                resolve,\n                reject,\n            });\n            this.check();\n        });\n    }\n\n    release(item: QueueContent) {\n        this.processing = this.processing.filter((v) => v !== item);\n        this.check();\n    }\n\n    run(item: QueueContent) {\n        this.queue = this.queue.filter((v) => v !== item);\n        if (\n            this.processing.findIndex(\n                (v) =>\n                    v.uploader.task.dst == item.uploader.task.dst &&\n                    v.uploader.task.file.name == item.uploader.task.name\n            ) > -1\n        ) {\n            // 找到重名任务\n            item.reject(new ProcessingTaskDuplicatedError());\n            this.release(item);\n            return;\n        }\n\n        this.processing.push(item);\n        item.uploader.run().then(\n            () => {\n                item.resolve();\n                this.release(item);\n            },\n            (err) => {\n                item.reject(err);\n                this.release(item);\n            }\n        );\n    }\n\n    check() {\n        const processingNum = this.processing.length;\n        const availableNum = Math.max(0, this.limit - processingNum);\n        this.queue.slice(0, availableNum).forEach((item) => {\n            this.run(item);\n        });\n    }\n}\n","import { Policy } from \"../types\";\nimport { FileValidateError } from \"../errors\";\n\ninterface Validator {\n    (file: File, policy: Policy): void;\n}\n\n// validators\nconst checkers: Array<Validator> = [\n    function checkExt(file: File, policy: Policy) {\n        if (\n            policy.allowedSuffix != undefined &&\n            policy.allowedSuffix.length > 0\n        ) {\n            const ext = file?.name.split(\".\").pop();\n            if (ext === null || !ext || !policy.allowedSuffix.includes(ext))\n                throw new FileValidateError(\n                    \"File suffix not allowed in policy.\",\n                    \"suffix\",\n                    policy\n                );\n        }\n    },\n\n    function checkSize(file: File, policy: Policy) {\n        if (policy.maxSize > 0) {\n            if (file.size > policy.maxSize) {\n                throw new FileValidateError(\n                    \"File size exceeds maximum limit.\",\n                    \"size\",\n                    policy\n                );\n            }\n        }\n    },\n];\n\n/* 将每个 Validator 执行\n   失败返回 Error\n */\nexport function validate(file: File, policy: Policy) {\n    checkers.forEach((c) => c(file, policy));\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { Response } from \"../types\";\nimport {\n    HTTPError,\n    RequestCanceledError,\n    TransformResponseError,\n} from \"../errors\";\n\nexport const { CancelToken } = axios;\nexport { CancelTokenSource } from \"axios\";\n\nconst baseConfig = {\n    transformResponse: [\n        (response: any) => {\n            try {\n                return JSON.parse(response);\n            } catch (e) {\n                throw new TransformResponseError(response, e);\n            }\n        },\n    ],\n};\n\nconst cdBackendConfig = {\n    ...baseConfig,\n    baseURL: \"/api/v3\",\n    withCredentials: true,\n};\n\nexport function request<T = any>(url: string, config?: AxiosRequestConfig) {\n    return axios\n        .request<T>({ ...baseConfig, ...config, url })\n        .catch((err) => {\n            if (axios.isCancel(err)) {\n                throw new RequestCanceledError();\n            }\n\n            if (err instanceof TransformResponseError) {\n                throw err;\n            }\n\n            throw new HTTPError(err, url);\n        });\n}\n\nexport function requestAPI<T = any>(url: string, config?: AxiosRequestConfig) {\n    return request<Response<T>>(url, { ...cdBackendConfig, ...config });\n}\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\nimport { toggleDaylightMode } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\",\n    },\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const { t } = useTranslation();\n    const ThemeType = useSelector(\n        (state) => state.siteConfig.theme.palette.type,\n    );\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(\n        () => dispatch(toggleDaylightMode()),\n        [dispatch],\n    );\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={\n                isDayLight ? t(\"navbar.toDarkMode\") : t(\"navbar.toLightMode\")\n            }\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position,\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React, { useCallback, useState } from \"react\";\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"../../../middleware/Auth\";\nimport { changeViewMethod, setShareUserPopover } from \"../../../redux/explorer\";\nimport {\n    changeSortMethod,\n    startBatchDownload,\n} from \"../../../redux/explorer/action\";\nimport { FormatPageBreak } from \"mdi-material-ui\";\nimport pathHelper from \"../../../utils/page\";\nimport { changePageSize } from \"../../../redux/viewUpdate/action\";\nimport { useTranslation } from \"react-i18next\";\nimport Sort from \"../Sort\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\",\n    },\n}));\n\nconst paginationOption = [\"50\", \"100\", \"200\", \"500\", \"1000\"];\n\nexport default function SubActions({ isSmall, inherit }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const { t: vasT } = useTranslation(\"application\", { keyPrefix: \"vas\" });\n    const dispatch = useDispatch();\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod,\n    );\n    const share = useSelector((state) => state.viewUpdate.shareInfo);\n    const pageSize = useSelector((state) => state.viewUpdate.pagination.size);\n    const OpenLoadingDialog = useCallback(\n        (method) => dispatch(changeViewMethod(method)),\n        [dispatch],\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(changeSortMethod(method)),\n        [dispatch],\n    );\n    const SetShareUserPopover = useCallback(\n        (e) => dispatch(setShareUserPopover(e)),\n        [dispatch],\n    );\n    const StartBatchDownloadAll = useCallback(\n        () => dispatch(startBatchDownload(share)),\n        [dispatch, share],\n    );\n    const ChangePageSize = useCallback(\n        (e) => dispatch(changePageSize(e)),\n        [dispatch],\n    );\n    const [anchorPagination, setAnchorPagination] = useState(null);\n    const showPaginationOptions = (e) => {\n        setAnchorPagination(e.currentTarget);\n    };\n\n    /** change sort */\n    const onChangeSort = (value) => {\n        ChangeSortMethod(value);\n    };\n    const handlePaginationChange = (s) => {\n        ChangePageSize(s);\n        setAnchorPagination(null);\n    };\n\n    const toggleViewMethod = () => {\n        const newMethod =\n            viewMethod === \"icon\"\n                ? \"list\"\n                : viewMethod === \"list\"\n                  ? \"smallIcon\"\n                  : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        OpenLoadingDialog(newMethod);\n    };\n    const isMobile = pathHelper.isMobile();\n\n    const classes = useStyles();\n    return (\n        <>\n            <IconButton\n                title={t(\"batchDownload\")}\n                className={classes.sideButton}\n                onClick={StartBatchDownloadAll}\n                color={inherit ? \"inherit\" : \"default\"}\n            >\n                <DownloadIcon fontSize={isSmall ? \"small\" : \"default\"} />\n            </IconButton>\n\n            {viewMethod === \"icon\" && (\n                <IconButton\n                    title={t(\"listView\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            {viewMethod === \"list\" && (\n                <IconButton\n                    title={t(\"gridViewSmall\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {viewMethod === \"smallIcon\" && (\n                <IconButton\n                    title={t(\"gridViewLarge\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {!isMobile && (\n                <IconButton\n                    title={t(\"paginationSize\")}\n                    className={classes.sideButton}\n                    onClick={showPaginationOptions}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <FormatPageBreak fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorPagination}\n                open={Boolean(anchorPagination)}\n                onClose={() => setAnchorPagination(null)}\n            >\n                {paginationOption.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={option === pageSize.toString()}\n                        onClick={() => handlePaginationChange(parseInt(option))}\n                    >\n                        {t(\"paginationOption\", { option })}\n                    </MenuItem>\n                ))}\n                <MenuItem\n                    selected={pageSize === -1}\n                    onClick={() => handlePaginationChange(-1)}\n                >\n                    {t(\"noPagination\")}\n                </MenuItem>\n            </Menu>\n\n            <Sort\n                isSmall={isSmall}\n                inherit={inherit}\n                className={classes.sideButton}\n                onChange={onChangeSort}\n            />\n            {share && (\n                <IconButton\n                    title={t(\"shareCreateBy\", { nick: share.creator.nick })}\n                    className={classes.sideButton}\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\n                    style={{ padding: 5 }}\n                >\n                    <Avatar\n                        style={{ height: 23, width: 23 }}\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\n                    />\n                </IconButton>\n            )}\n        </>\n    );\n}\n","import React, { useCallback, useRef } from \"react\";\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    Input,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n    },\n    flexCenter: {\n        alignItems: \"center\",\n    },\n    noFlex: {\n        display: \"block\",\n    },\n    scoreCalc: {\n        marginTop: 10,\n    },\n    expireLabel: {\n        whiteSpace: \"nowrap\",\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: \"auto\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const lastSubmit = useRef(null);\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false,\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true,\n    });\n    const [customExpires, setCustomExpires] = React.useState(3600);\n    const [customDownloads, setCustomDownloads] = React.useState(10);\n\n    const handleChange = (prop) => (event) => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random().toString(36).substr(2).slice(2, 8),\n            showPassword: true,\n        });\n    };\n\n    const handleExpand = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = (prop) => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\",\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const senLink = () => {\n        if (navigator.share) {\n            let text = t(\"modals.shareLinkShareContent\", {\n                name: props.selected[0].name,\n                link: shareURL,\n            });\n            if (lastSubmit.current && lastSubmit.current.password) {\n                text += t(\"modals.shareLinkPasswordInfo\", {\n                    password: lastSubmit.current.password,\n                });\n            }\n            navigator.share({ text });\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareURL);\n            ToggleSnackbar(\"top\", \"right\", t(\"modals.linkCopied\"), \"info\");\n        }\n    };\n\n    const submitShare = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire\n                ? values.downloads === -1\n                    ? parseInt(customDownloads)\n                    : values.downloads\n                : -1,\n            expire:\n                values.expires === -1\n                    ? parseInt(customExpires)\n                    : values.expires,\n            preview: shareOption.preview,\n        };\n        lastSubmit.current = submitFormBody;\n\n        API.post(\"/share\", submitFormBody)\n            .then((response) => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false,\n                });\n                setShareOption({\n                    password: false,\n                    expire: false,\n                });\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = (event) => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.createShareLink\")}\n            </DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\n                                            \"modals.usePasswordProtection\",\n                                        )}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        {t(\"modals.sharePassword\")}\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip\n                                                    title={t(\n                                                        \"modals.randomlyGenerate\",\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    <ToggleIcon\n                                                        on={values.showPassword}\n                                                        onIcon={<Visibility />}\n                                                        offIcon={\n                                                            <VisibilityOff />\n                                                        }\n                                                    />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\n                                            \"modals.expireAutomatically\",\n                                        )}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                    }}\n                                >\n                                    {values.downloads >= 0 && (\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.downloads}\n                                            onChange={handleChange(\"downloads\")}\n                                        >\n                                            {[1, 2, 3, 4, 5, 20, 50, 100].map(\n                                                (v) => (\n                                                    <MenuItem value={v} key={v}>\n                                                        {t(\n                                                            \"modals.downloadLimitOptions\",\n                                                            { num: v },\n                                                        )}\n                                                    </MenuItem>\n                                                ),\n                                            )}\n                                            <MenuItem value={-1}>\n                                                <em>{t(\"modals.custom\")}</em>\n                                            </MenuItem>\n                                        </Select>\n                                    )}\n                                    {values.downloads === -1 && (\n                                        <Input\n                                            id=\"outlined-basic\"\n                                            type=\"number\"\n                                            inputProps={{\n                                                min: 1,\n                                            }}\n                                            value={customDownloads}\n                                            onChange={(e) =>\n                                                setCustomDownloads(\n                                                    e.target.value,\n                                                )\n                                            }\n                                            endAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    {t(\"modals.downloads\")}\n                                                </InputAdornment>\n                                            }\n                                        />\n                                    )}\n                                </FormControl>\n                                <Typography className={classes.expireLabel}>\n                                    {t(\"modals.or\")}\n                                </Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10,\n                                    }}\n                                >\n                                    {values.expires >= 0 && (\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.expires}\n                                            onChange={handleChange(\"expires\")}\n                                        >\n                                            <MenuItem value={300}>\n                                                {t(\"modals.5minutes\")}\n                                            </MenuItem>\n                                            <MenuItem value={3600}>\n                                                {t(\"modals.1hour\")}\n                                            </MenuItem>\n                                            <MenuItem value={24 * 3600}>\n                                                {t(\"modals.1day\")}\n                                            </MenuItem>\n                                            <MenuItem value={7 * 24 * 3600}>\n                                                {t(\"modals.7days\")}\n                                            </MenuItem>\n                                            <MenuItem value={30 * 24 * 3600}>\n                                                {t(\"modals.30days\")}\n                                            </MenuItem>\n                                            <MenuItem value={-1}>\n                                                <em>{t(\"modals.custom\")}</em>\n                                            </MenuItem>\n                                        </Select>\n                                    )}\n                                    {values.expires === -1 && (\n                                        <Input\n                                            id=\"outlined-basic\"\n                                            type=\"number\"\n                                            inputProps={{\n                                                min: 1,\n                                            }}\n                                            value={customExpires}\n                                            onChange={(e) =>\n                                                setCustomExpires(e.target.value)\n                                            }\n                                            endAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    {t(\"modals.seconds\")}\n                                                </InputAdornment>\n                                            }\n                                        />\n                                    )}\n                                </FormControl>\n                                <Typography className={classes.expireLabel}>\n                                    {t(\"modals.downloadSuffix\")}\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"modals.allowPreview\")}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    {t(\"modals.allowPreviewDescription\")}\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label={t(\"modals.shareLink\")}\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                {shareURL !== \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button onClick={senLink} color=\"secondary\">\n                            {t(\"modals.sendLink\")}\n                        </Button>\n                    </div>\n                )}\n                <Button onClick={onClose}>\n                    {t(\"close\", { ns: \"common\" })}\n                </Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            {t(\"modals.createShareLink\")}\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        minWidth: 250,\n    },\n}));\n\nexport default function OptionSelector() {\n    const { t } = useTranslation(\"common\");\n    const classes = useStyles();\n    const option = useSelector((state) => state.viewUpdate.modals.option);\n\n    return (\n        <Dialog\n            open={option && option.open}\n            onClose={option && option.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {option && option.title}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    {option &&\n                        option.options.map((o) => (\n                            <ListItem\n                                key={o.key}\n                                onClick={() => option && option.callback(o)}\n                                button\n                            >\n                                <ListItemText\n                                    primary={o.name}\n                                    secondary={o.description}\n                                />\n                            </ListItem>\n                        ))}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={option && option.onClose}>\n                    {t(\"cancel\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\",\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","export const sizeToString = (bytes) => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = (path) => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const checkGetParameters = (field) => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = (color) => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\",\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    if (!path) {\n        return \"\";\n    }\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function filename(path) {\n    const pathList = path.split(\"/\");\n    return pathList.pop();\n}\n\nexport function fileNameNoExt(filename) {\n    return filename.substring(0, filename.lastIndexOf(\".\")) || filename;\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength),\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach((v) => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport const isMobileSafari = () => {\n    const ua = window.navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    return iOS && webkit && !ua.match(/CriOS/i);\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n\nexport const removeI18nCache = () => {\n    Object.keys(localStorage).forEach(function (key) {\n        if (key && key.startsWith(\"i18next_res_\")) {\n            localStorage.removeItem(key);\n        }\n    });\n};\n\nexport const getSelectItemStyles = (name, personName, theme) => {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    loadingContainer: {\n        display: \"flex\",\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20,\n    },\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport {\n    refreshFileList,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CopyDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch],\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"fileManager.copyTo\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <Trans\n                            i18nKey={\"fileManager.copyToDst\"}\n                            values={{\n                                dst: selectedPathName,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    FormControlLabel,\n    Checkbox,\n} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useTranslation } from \"react-i18next\";\nimport { useInterval, usePrevious, useGetState } from \"ahooks\";\nimport { cancelDirectoryDownload } from \"../../redux/explorer/action\";\nimport Auth from \"../../middleware/Auth\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DirectoryDownloadDialog(props) {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n\n    const logRef = useRef();\n    const [autoScroll, setAutoScroll] = useState(\n        Auth.GetPreferenceWithDefault(\"autoScroll\", true),\n    );\n    const previousLog = usePrevious(props.log, (prev, next) => true);\n    const [timer, setTimer] = useState(-1);\n\n    useInterval(() => {\n        if (autoScroll && logRef.current && previousLog !== props.log) {\n            logRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n        }\n    }, timer);\n\n    useEffect(() => {\n        if (props.done) {\n            setTimer(-1);\n        } else if (props.open) {\n            setTimer(1000);\n        }\n    }, [props.done, props.open]);\n\n    return (\n        <Dialog\n            open={props.open}\n            // open\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.directoryDownloadTitle\")}\n            </DialogTitle>\n\n            <DialogContent className={classes.contentFix}>\n                <TextField\n                    value={props.log}\n                    ref={logRef}\n                    multiline\n                    fullWidth\n                    id=\"standard-basic\"\n                />\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={<Checkbox />}\n                    checked={autoScroll}\n                    onChange={() =>\n                        setAutoScroll((previous) => {\n                            Auth.SetPreference(\"autoScroll\", !previous);\n                            return !previous;\n                        })\n                    }\n                    label={t(\"modals.directoryDownloadAutoscroll\")}\n                />\n                <Button\n                    onClick={\n                        props.done ? props.onClose : cancelDirectoryDownload\n                    }\n                >\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={!props.done}\n                        onClick={props.onClose}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {!props.done && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\nimport { submitDecompressTask } from \"../../redux/explorer/action\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DecompressDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch],\n    );\n    const SubmitDecompressTask = useCallback(\n        (path) => dispatch(submitDecompressTask(path)),\n        [dispatch],\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        SubmitDecompressTask(selectedPath)\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\",\n                );\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.decompressTo\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <Trans\n                            i18nKey=\"modals.decompressToDst\"\n                            values={{\n                                name: selectedPathName,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\nimport { submitCompressTask } from \"../../redux/explorer/action\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CompressDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch],\n    );\n\n    const SubmitCompressTask = useCallback(\n        (name, path) => dispatch(submitCompressTask(name, path)),\n        [dispatch],\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        SubmitCompressTask(fileName, selectedPath)\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\",\n                );\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.saveToTitle\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={(e) => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label={t(\"modals.zipFileName\")}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API, { AppError } from \"../../middleware/Api\";\nimport {\n    refreshFileList,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { FolderOpenOutlined } from \"@material-ui/icons\";\nimport { pathBack } from \"../../utils\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    formGroup: {\n        display: \"flex\",\n        marginBottom: theme.spacing(3),\n    },\n    forumInput: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function RemoteDownload(props) {\n    const { t } = useTranslation();\n    const [selectPathOpen, setSelectPathOpen] = useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const [downloadTo, setDownloadTo] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    useEffect(() => {\n        if (props.open) {\n            setDownloadTo(props.presentPath);\n        }\n    }, [props.open]);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch],\n    );\n\n    const setDownloadToPath = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const selectPath = () => {\n        setDownloadTo(selectedPath === \"//\" ? \"/\" : selectedPath);\n        setSelectPathOpen(false);\n    };\n\n    const submitTorrentDownload = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + props.torrent.id, {\n            dst: downloadTo === \"//\" ? \"/\" : downloadTo,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\",\n                );\n                props.onClose();\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const submitDownload = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        API.post(\"/aria2/url\", {\n            url: url.split(\"\\n\"),\n            dst: downloadTo === \"//\" ? \"/\" : downloadTo,\n        })\n            .then((response) => {\n                const failed = response.data\n                    .filter((r) => r.code !== 0)\n                    .map((r) => new AppError(r.msg, r.code, r.error).message);\n                if (failed.length > 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"modals.taskCreateFailed\", {\n                            failed: failed.length,\n                            details: failed.join(\",\"),\n                        }),\n                        \"warning\",\n                    );\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"modals.taskCreated\"),\n                        \"success\",\n                    );\n                }\n\n                props.onClose();\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Dialog\n                open={props.open}\n                onClose={props.onClose}\n                aria-labelledby=\"form-dialog-title\"\n                fullWidth\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"modals.newRemoteDownloadTitle\")}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <div className={classes.formGroup}>\n                            <div className={classes.forumInput}>\n                                <TextField\n                                    variant={\"outlined\"}\n                                    label={t(\"modals.remoteDownloadURL\")}\n                                    autoFocus\n                                    fullWidth\n                                    disabled={props.torrent}\n                                    multiline\n                                    value={\n                                        props.torrent ? props.torrent.name : url\n                                    }\n                                    onChange={(e) => setUrl(e.target.value)}\n                                    placeholder={t(\n                                        \"modals.remoteDownloadURLDescription\",\n                                    )}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <LinkIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className={classes.formGroup}>\n                            <div className={classes.forumInput}>\n                                <TextField\n                                    variant={\"outlined\"}\n                                    fullWidth\n                                    value={downloadTo}\n                                    onChange={(e) =>\n                                        setDownloadTo(e.target.value)\n                                    }\n                                    className={classes.input}\n                                    label={t(\"modals.remoteDownloadDst\")}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <FolderOpenOutlined />\n                                            </InputAdornment>\n                                        ),\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Button\n                                                    className={classes.button}\n                                                    color=\"primary\"\n                                                    onClick={() =>\n                                                        setSelectPathOpen(true)\n                                                    }\n                                                >\n                                                    {t(\n                                                        \"navbar.addTagDialog.selectFolder\",\n                                                    )}\n                                                </Button>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <br />\n                            </div>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.onClose}>\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={\n                                props.torrent\n                                    ? submitTorrentDownload\n                                    : submitDownload\n                            }\n                            color=\"primary\"\n                            disabled={\n                                (url === \"\" && props.torrent === null) ||\n                                downloadTo === \"\" ||\n                                props.modalsLoading\n                            }\n                        >\n                            {t(\"modals.createTask\")}\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={selectPathOpen}\n                onClose={() => setSelectPathOpen(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"modals.remoteDownloadDst\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath={pathBack(props.presentPath)}\n                    selected={[]}\n                    onSelect={setDownloadToPath}\n                />\n\n                {selectedPathName !== \"\" && (\n                    <DialogContent className={classes.contentFix}>\n                        <DialogContentText>\n                            <Trans\n                                i18nKey=\"modals.downloadTo\"\n                                values={{\n                                    name: selectedPathName,\n                                }}\n                                components={[<strong key={0} />]}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                )}\n                <DialogActions>\n                    <Button onClick={() => setSelectPathOpen(false)}>\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControl,\n    makeStyles,\n    Tooltip,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Delete(props) {\n    const { t } = useTranslation();\n    const theme = useTheme();\n    const user = Auth.GetUser();\n    const [force, setForce] = useState(false);\n    const [unlink, setUnlink] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const submitRemove = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs,\n                force,\n                unlink,\n            },\n        })\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    props.onClose();\n                    setTimeout(props.refreshFileList, 500);\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\",\n                    );\n                }\n                props.setModalsLoading(false);\n                props.refreshStorage();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.deleteTitle\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <DialogContentText>\n                    {props.selected.length === 1 && (\n                        <Trans\n                            i18nKey=\"modals.deleteOneDescription\"\n                            values={{\n                                name: props.selected[0].name,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    )}\n                    {props.selected.length > 1 &&\n                        t(\"modals.deleteMultipleDescription\", {\n                            num: props.selected.length,\n                        })}\n                </DialogContentText>\n                {user.group.advanceDelete && (\n                    <FormControl component=\"fieldset\" className={classes.form}>\n                        <FormLabel component=\"legend\">\n                            {t(\"modals.advanceOptions\")}\n                        </FormLabel>\n                        <FormGroup>\n                            <Tooltip title={t(\"modals.forceDeleteDes\")}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={force}\n                                            onChange={(e) =>\n                                                setForce(e.target.checked)\n                                            }\n                                        />\n                                    }\n                                    label={t(\"modals.forceDelete\")}\n                                />\n                            </Tooltip>\n                            <Tooltip title={t(\"modals.unlinkOnlyDes\")}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={unlink}\n                                            onChange={(e) =>\n                                                setUnlink(e.target.checked)\n                                            }\n                                        />\n                                    }\n                                    label={t(\"modals.unlinkOnly\")}\n                                />\n                            </Tooltip>\n                        </FormGroup>\n                    </FormControl>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitRemove}\n                        color=\"primary\"\n                        disabled={props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PathSelector from \"./PathSelector\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport DirectoryDownloadDialog from \"../Modals/DirectoryDownload\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\nimport {\n    closeAllModals,\n    openLoadingDialog,\n    refreshFileList,\n    refreshStorage,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport OptionSelector from \"../Modals/OptionSelector\";\nimport { getDownloadURL } from \"../../services/file\";\nimport { Trans, withTranslation } from \"react-i18next\";\nimport RemoteDownload from \"../Modals/RemoteDownload\";\nimport Delete from \"../Modals/Delete\";\n\nconst styles = (theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        purchaseCallback: null,\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    newNameSuffix = \"\";\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name,\n            });\n            return;\n        }\n    };\n\n    scoreHandler = (callback) => {\n        callback();\n    };\n\n    Download = () => {\n        getDownloadURL(this.props.selected[0])\n            .then((response) => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.onClose();\n            });\n    };\n\n    submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                  ? \"/\"\n                  : this.state.selectedPath,\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n                this.DragSelectedPath = \"\";\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.props.setModalsLoading(false);\n                this.DragSelectedPath = \"\";\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(this.props.t(\"modals.processing\"));\n            this.submitMove();\n        }\n    };\n\n    submitRename = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: [],\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedObjectName\"),\n                \"warning\",\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\",\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedFolderName\"),\n                \"warning\",\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\",\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedFolderName\"),\n                \"warning\",\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\",\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            shareUrl: \"\",\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    copySource = () => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(this.props.modalsStatus.getSource);\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.linkCopied\"),\n                \"info\",\n            );\n        }\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <OptionSelector />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.getSourceLinkTitle\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            inputProps={{ readonly: true }}\n                            label={t(\"modals.sourceLink\")}\n                            multiline\n                            value={this.props.modalsStatus.getSource}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.copySource} color=\"secondary\">\n                            {t(\"copyToClipboard\", { ns: \"common\" })}\n                        </Button>\n                        <Button onClick={this.onClose}>\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.newFolder\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label={t(\"modals.folderName\")}\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.create\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.createNewFile}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.newFile\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFile}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFileName\"\n                                label={t(\"modals.fileName\")}\n                                type=\"text\"\n                                value={this.state.newFileName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFile}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFileName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.create\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.rename\")}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <Trans\n                                i18nKey=\"modals.renameDescription\"\n                                values={{\n                                    name:\n                                        this.props.selected.length === 1\n                                            ? this.props.selected[0].name\n                                            : \"\",\n                                }}\n                                components={[<strong key={0} />]}\n                            />\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label={t(\"modals.newName\")}\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.moveToTitle\")}\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                <Trans\n                                    i18nKey=\"modals.moveToDescription\"\n                                    values={{\n                                        name: this.state.selectedPathName,\n                                    }}\n                                    components={[<strong key={0} />]}\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Delete\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                    refreshFileList={this.props.refreshFileList}\n                    refreshStorage={this.props.refreshStorage}\n                />\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n                <RemoteDownload\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    presentPath={this.props.path}\n                    torrent={this.props.modalsStatus.remoteDownloadTorrent}\n                />\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <DirectoryDownloadDialog\n                    open={this.props.modalsStatus.directoryDownloading}\n                    onClose={this.onClose}\n                    done={this.props.modalsStatus.directoryDownloadDone}\n                    log={this.props.modalsStatus.directoryDownloadLog}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(ModalsCompoment))));\n\nexport default Modals;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            marginLeft: theme.spacing(12),\n            marginRight: theme.spacing(12),\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: theme.shape.borderRadius,\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: theme.shape.borderRadius,\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\",\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const { t } = useTranslation();\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileManager.errorReadFileContent\", {\n                        msg: error.message,\n                    }),\n                    \"error\",\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async ($file) => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        language={t(\"forEditorLocaleCode\", { ns: \"common\" })}\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={($file) => addImg($file)}\n                        onChange={(value) => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true, // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MonacoEditor = React.lazy(\n    () => import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\"),\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 40,\n    },\n    editor: {\n        borderRadius: theme.shape.borderRadius,\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"0 0 12px 12px!important\",\n        },\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\",\n    },\n    toobar: {\n        textAlign: \"right\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const { t } = useTranslation();\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n    const [wordWrap, setWordWrap] = useState(\"off\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n    const { title } = UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        const extension = title.split(\".\");\n        setSuffix(codePreviewSuffix[extension.pop()]);\n        // eslint-disable-next-line\n    }, [title]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileManager.errorReadFileContent\", {\n                        msg: error.message,\n                    }),\n                    \"error\",\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={(e) =>\n                                        setWordWrap(\n                                            e.target.checked ? \"on\" : \"off\",\n                                        )\n                                    }\n                                />\n                            }\n                            label={t(\"fileManager.wordWrap\")}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={(e) => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map((k) => {\n                                        return codePreviewSuffix[k];\n                                    }),\n                                ),\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"calc(100vh - 198px)\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor,\n                                wordWrap: wordWrap,\n                            }}\n                            onChange={(value) => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import {\n    OneDriveError,\n    Policy,\n    QiniuError,\n    Response,\n    UpyunError,\n} from \"../types\";\nimport { sizeToString } from \"../utils\";\nimport i18next from \"../../../../i18n\";\nimport { AppError } from \"../../../../middleware/Api\";\n\nexport enum UploaderErrorName {\n    InvalidFile = \"InvalidFile\",\n    NoPolicySelected = \"NoPolicySelected\",\n    UnknownPolicyType = \"UnknownPolicyType\",\n    FailedCreateUploadSession = \"FailedCreateUploadSession\",\n    FailedDeleteUploadSession = \"FailedDeleteUploadSession\",\n    HTTPRequestFailed = \"HTTPRequestFailed\",\n    LocalChunkUploadFailed = \"LocalChunkUploadFailed\",\n    SlaveChunkUploadFailed = \"SlaveChunkUploadFailed\",\n    WriteCtxFailed = \"WriteCtxFailed\",\n    RemoveCtxFailed = \"RemoveCtxFailed\",\n    ReadCtxFailed = \"ReadCtxFailed\",\n    InvalidCtxData = \"InvalidCtxData\",\n    CtxExpired = \"CtxExpired\",\n    RequestCanceled = \"RequestCanceled\",\n    ProcessingTaskDuplicated = \"ProcessingTaskDuplicated\",\n    OneDriveChunkUploadFailed = \"OneDriveChunkUploadFailed\",\n    OneDriveEmptyFile = \"OneDriveEmptyFile\",\n    FailedFinishOneDriveUpload = \"FailedFinishOneDriveUpload\",\n    S3LikeChunkUploadFailed = \"S3LikeChunkUploadFailed\",\n    S3LikeUploadCallbackFailed = \"S3LikeUploadCallbackFailed\",\n    COSUploadCallbackFailed = \"COSUploadCallbackFailed\",\n    COSPostUploadFailed = \"COSPostUploadFailed\",\n    UpyunPostUploadFailed = \"UpyunPostUploadFailed\",\n    QiniuChunkUploadFailed = \"QiniuChunkUploadFailed\",\n    FailedFinishOSSUpload = \"FailedFinishOSSUpload\",\n    FailedFinishQiniuUpload = \"FailedFinishQiniuUpload\",\n    FailedTransformResponse = \"FailedTransformResponse\",\n}\n\nconst RETRY_ERROR_LIST = [\n    UploaderErrorName.FailedCreateUploadSession,\n    UploaderErrorName.HTTPRequestFailed,\n    UploaderErrorName.LocalChunkUploadFailed,\n    UploaderErrorName.SlaveChunkUploadFailed,\n    UploaderErrorName.RequestCanceled,\n    UploaderErrorName.ProcessingTaskDuplicated,\n    UploaderErrorName.FailedTransformResponse,\n];\n\nconst RETRY_CODE_LIST = [-1];\n\nexport class UploaderError implements Error {\n    public stack: string | undefined;\n    constructor(public name: UploaderErrorName, public message: string) {\n        this.stack = new Error().stack;\n    }\n\n    public Message(): string {\n        return this.message;\n    }\n\n    public Retryable(): boolean {\n        return RETRY_ERROR_LIST.includes(this.name);\n    }\n}\n\n// 文件未通过存储策略验证\nexport class FileValidateError extends UploaderError {\n    // 未通过验证的文件属性\n    public field: \"size\" | \"suffix\";\n\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, field: \"size\" | \"suffix\", policy: Policy) {\n        super(UploaderErrorName.InvalidFile, message);\n        this.field = field;\n        this.policy = policy;\n    }\n\n    public Message(): string {\n        if (this.field == \"size\") {\n            return i18next.t(`uploader.sizeExceedLimitError`, {\n                max: sizeToString(this.policy.maxSize),\n            });\n        }\n\n        return i18next.t(`uploader.suffixNotAllowedError`, {\n            supported: this.policy.allowedSuffix\n                ? this.policy.allowedSuffix.join(\",\")\n                : \"*\",\n        });\n    }\n}\n\n// 未知存储策略\nexport class UnknownPolicyError extends UploaderError {\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, policy: Policy) {\n        super(UploaderErrorName.UnknownPolicyType, message);\n        this.policy = policy;\n    }\n}\n\n// 后端 API 出错\nexport class APIError extends UploaderError {\n    private appError: AppError;\n    constructor(\n        name: UploaderErrorName,\n        message: string,\n        protected response: Response<any>\n    ) {\n        super(name, message);\n        this.appError = new AppError(response.msg, response.code, response.msg);\n    }\n\n    public Message(): string {\n        return `${this.message}: ${this.appError.message}`;\n    }\n\n    public Retryable(): boolean {\n        return (\n            super.Retryable() && RETRY_CODE_LIST.includes(this.response.code)\n        );\n    }\n}\n\n// 无法创建上传会话\nexport class CreateUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedCreateUploadSession, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.createUploadSessionError`);\n        return super.Message();\n    }\n}\n\n// 无法删除上传会话\nexport class DeleteUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedDeleteUploadSession, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.deleteUploadSessionError`);\n        return super.Message();\n    }\n}\n\n// HTTP 请求出错\nexport class HTTPError extends UploaderError {\n    public response?: any;\n    constructor(public axiosErr: any, protected url: string) {\n        super(UploaderErrorName.HTTPRequestFailed, axiosErr.message);\n        this.response = axiosErr.response;\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.requestError`, {\n            msg: this.axiosErr,\n            url: this.url,\n        });\n    }\n}\n\n// 本地分块上传失败\nexport class LocalChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.LocalChunkUploadFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.chunkUploadError`, {\n            index: this.chunkIndex,\n        });\n        return super.Message();\n    }\n}\n\n// 无法创建上传会话\nexport class RequestCanceledError extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.RequestCanceled, \"Request canceled\");\n    }\n}\n\n// 从机分块上传失败\nexport class SlaveChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.SlaveChunkUploadFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.chunkUploadError`, {\n            index: this.chunkIndex,\n        });\n        return super.Message();\n    }\n}\n\n// 上传任务冲突\nexport class ProcessingTaskDuplicatedError extends UploaderError {\n    constructor() {\n        super(\n            UploaderErrorName.ProcessingTaskDuplicated,\n            \"Processing task duplicated\"\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.conflictError`);\n    }\n}\n\n// OneDrive 分块上传失败\nexport class OneDriveChunkError extends UploaderError {\n    constructor(public response: OneDriveError) {\n        super(\n            UploaderErrorName.OneDriveChunkUploadFailed,\n            response.error.message\n        );\n    }\n\n    public Message(): string {\n        let msg =  i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n\n        if (this.response.error.retryAfterSeconds != undefined){\n            msg += \" \"+i18next.t(`uploader.chunkUploadErrorWithRetryAfter`, {\n                retryAfter: this.response.error.retryAfterSeconds,\n            })\n        }\n\n        return msg;\n    }\n\n    public Retryable(): boolean {\n        return (\n            super.Retryable() || this.response.error.retryAfterSeconds != undefined\n        );\n    }\n}\n\n// OneDrive 选择了空文件上传\nexport class OneDriveEmptyFileSelected extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.OneDriveEmptyFile, \"empty file not supported\");\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.emptyFileError\");\n    }\n}\n\n// OneDrive 无法完成文件上传\nexport class OneDriveFinishUploadError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedFinishOneDriveUpload, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// S3 类策略分块上传失败\nexport class S3LikeChunkError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// OSS 完成传失败\nexport class S3LikeFinishUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.ossFinishUploadError`, {\n            msg: this.message,\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\n        });\n    }\n}\n\n// qiniu 分块上传失败\nexport class QiniuChunkError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.QiniuChunkUploadFailed, response.error);\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// qiniu 完成传失败\nexport class QiniuFinishUploadError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.FailedFinishQiniuUpload, response.error);\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.finishUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// COS 上传失败\nexport class COSUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.COSPostUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.cosUploadFailed`, {\n            msg: this.message,\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\n        });\n    }\n}\n\n// COS 无法完成上传回调\nexport class COSUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.COSUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// Upyun 上传失败\nexport class UpyunUploadError extends UploaderError {\n    constructor(public response: UpyunError) {\n        super(UploaderErrorName.UpyunPostUploadFailed, response.message);\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.upyunUploadFailed\", {\n            msg: this.message,\n        });\n    }\n}\n\n// S3 无法完成上传回调\nexport class S3LikeUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.S3LikeUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// 无法解析响应\nexport class TransformResponseError extends UploaderError {\n    constructor(private response: string, parseError: Error) {\n        super(UploaderErrorName.FailedTransformResponse, parseError.message);\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.parseResponseError\", {\n            msg: this.message,\n            content: this.response,\n        });\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport {\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    withStyles,\n} from \"@material-ui/core\";\n\nconst mapStateToProps = (state) => {\n    return {\n        snackbar: state.viewUpdate.snackbar,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = (theme) => ({\n    success: {\n        backgroundColor: theme.palette.success.main,\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warning: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant,\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\n        .isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = (theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal,\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    AccountArrowRight,\n    AccountPlus,\n    DesktopMacDashboard,\n    HomeAccount,\n    LogoutVariant,\n} from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Avatar,\n    Chip,\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Popover,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    setSessionStatus,\n    setUserPopover,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\n        registerEnabled: state.siteConfig.registerEnabled,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: (status) => {\n            dispatch(setSessionStatus(status));\n        },\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.loggedOut\"),\n                    \"success\",\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\",\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname,\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            {t(\"login.signIn\")}\n                        </MenuItem>\n                        {this.props.registerEnabled && (\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.history.push(\"/signup\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <AccountPlus />\n                                </ListItemIcon>\n                                {t(\"login.signUp\")}\n                            </MenuItem>\n                        )}\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\",\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id,\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    {t(\"navbar.myProfile\")}\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    {t(\"navbar.dashboard\")}\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\",\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                {t(\"login.logout\")}\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(\n    withStyles(styles)(\n        withRouter(withTranslation()(UserAvatarPopoverCompoment)),\n    ),\n);\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Avatar,\n    Grow,\n    IconButton,\n    Tooltip,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\nimport { setUserPopover } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        whiteSpace: \"nowrap\",\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname,\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={t(\"navbar.setting\")}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\",\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip\n                                title={t(\"navbar.backToHomepage\")}\n                                placement=\"bottom\"\n                            >\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(UserAvatarCompoment))));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport { changeThemeColor, sizeToString, vhCheck } from \"../../utils\";\nimport Uploader from \"../Uploader/Uploader.js\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport {\n    FolderDownload,\n    AccountArrowRight,\n    AccountPlus,\n    LogoutVariant,\n} from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Drawer,\n    Grow,\n    Hidden,\n    IconButton,\n    List,\n    ListItemIcon,\n    ListItemText,\n    SwipeableDrawer,\n    Toolbar,\n    Tooltip,\n    Typography,\n    withStyles,\n    withTheme,\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SubActions from \"../FileManager/Navigator/SubActions\";\nimport {\n    audioPreviewSetIsOpen,\n    changeContextMenu,\n    drawerToggleAction,\n    navigateTo,\n    openCreateFolderDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openPreview,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    saveFile,\n    setSelectedTarget,\n    setSessionStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport {\n    startBatchDownload,\n    startDirectoryDownload,\n    startDownload,\n} from \"../../redux/explorer/action\";\nimport { withTranslation } from \"react-i18next\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst ListItem = withStyles((theme) => ({\n    root: {\n        borderRadius: theme.shape.borderRadius,\n    },\n}))(MuiListItem);\n\nconst mapStateToProps = (state) => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin,\n        shareInfo: state.viewUpdate.shareInfo,\n        registerEnabled: state.siteConfig.registerEnabled,\n        audioPreviewPlayingName: state.explorer.audioPreview.playingName,\n        audioPreviewIsOpen: state.explorer.audioPreview.isOpen,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        },\n        openPreview: (share) => {\n            dispatch(openPreview(share));\n        },\n        audioPreviewOpen: () => {\n            dispatch(audioPreviewSetIsOpen(true));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        startDirectoryDownload: (share) => {\n            dispatch(startDirectoryDownload(share));\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\",\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0,\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n    },\n    menuIcon: {\n        marginRight: 20,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile,\n    },\n    drawerPaperDesktop: {\n        width: drawerWidth,\n    },\n    upDrawer: {\n        overflowX: \"hidden\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            justifyContent: \"space-between\",\n        },\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 0,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    badge: {\n        top: 1,\n        right: -15,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    sectionForFile: {\n        display: \"flex\",\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\",\n    },\n    fabButton: {\n        borderRadius: \"100px\",\n    },\n    badgeFix: {\n        right: \"10px\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    dividerFix: {\n        marginTop: \"8px\",\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\",\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\",\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\",\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\",\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\",\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n    },\n    paddingList: {\n        padding: theme.spacing(1),\n    },\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default,\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.selected.length === 0) !==\n            (nextProps.selected.length === 0)\n        ) {\n            changeThemeColor(\n                !(this.props.selected.length === 0)\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default,\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    openDownload = () => {\n        this.props.startDownload(this.props.shareInfo, this.props.selected[0]);\n    };\n\n    openDirectoryDownload = (e) => {\n        this.props.startDirectoryDownload(this.props.shareInfo);\n    };\n\n    archiveDownload = (e) => {\n        this.props.startBatchDownload(this.props.shareInfo);\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.loggedOut\"),\n                    \"success\",\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\",\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname,\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List className={classes.paddingList}>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"navbar.myShare\")}\n                                    />\n                                </ListItem>\n                                {user.group.allowRemoteDownload && (\n                                    <ListItem\n                                        button\n                                        key=\"离线下载\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/aria2?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"navbar.remoteDownload\")}\n                                        />\n                                    </ListItem>\n                                )}\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"navbar.connect\")}\n                                        />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"navbar.taskQueue\")}\n                                    />\n                                </ListItem>\n                                {pathHelper.isMobile() && (\n                                    <>\n                                        <Divider />\n                                        <ListItem\n                                            button\n                                            key=\"个人设置\"\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/setting?\",\n                                                )\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <Settings\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={t(\"navbar.setting\")}\n                                            />\n                                        </ListItem>\n\n                                        <ListItem\n                                            button\n                                            key=\"退出登录\"\n                                            onClick={this.signOut}\n                                        >\n                                            <ListItemIcon>\n                                                <LogoutVariant\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={t(\"login.logout\")}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                            </List>\n                        </div>\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"login.signIn\")} />\n                        </ListItem>\n                        {this.props.registerEnabled && (\n                            <ListItem\n                                button\n                                key=\"注册\"\n                                onClick={() =>\n                                    this.props.history.push(\"/signup\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <AccountPlus className={classes.iconFix} />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"login.signUp\")} />\n                            </ListItem>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length === 0\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={this.handleDrawerToggle}\n                                className={classes.menuButton}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={() =>\n                                    this.props.handleDesktopToggle(\n                                        !this.props.desktopOpen,\n                                    )\n                                }\n                                className={classes.menuButtonDesktop}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length > 0 &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname,\n                                )) && (\n                                <Grow in={this.props.selected.length > 0}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length === 0 && (\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                style={{\n                                    cursor: \"pointer\",\n                                }}\n                                noWrap\n                                onClick={() => {\n                                    this.props.history.push(\"/\");\n                                }}\n                            >\n                                {this.props.subTitle\n                                    ? this.props.subTitle\n                                    : this.props.title}\n                            </Typography>\n                        )}\n\n                        {!this.props.isMultiple &&\n                            (this.props.withFile || this.props.withFolder) &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {this.props.withFile &&\n                                        (isHomePage ||\n                                            pathHelper.isSharePage(\n                                                this.props.location.pathname,\n                                            )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size,\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {t(\"navbar.objectsSelected\", {\n                                        num: this.props.selected.length,\n                                    })}\n                                </Typography>\n                            )}\n                        {this.props.selected.length === 0 && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {this.props.selected.length > 0 &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name,\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name,\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.open\",\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openPreview(\n                                                                this.props\n                                                                    .shareInfo,\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.download\",\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) &&\n                                        window.showDirectoryPicker &&\n                                        window.isSecureContext && (\n                                            <Grow\n                                                in={\n                                                    (this.props.isMultiple ||\n                                                        this.props\n                                                            .withFolder) &&\n                                                    window.showDirectoryPicker &&\n                                                    window.isSecureContext\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.download\",\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDirectoryDownload()\n                                                        }\n                                                    >\n                                                        <FolderDownload />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) && (\n                                        <Grow\n                                            in={\n                                                this.props.isMultiple ||\n                                                this.props.withFolder\n                                            }\n                                        >\n                                            <Tooltip\n                                                title={t(\n                                                    \"fileManager.batchDownload\",\n                                                )}\n                                            >\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    disableClickAway\n                                                    onClick={() =>\n                                                        this.archiveDownload()\n                                                    }\n                                                >\n                                                    <DownloadIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple &&\n                                        !pathHelper.isMobile() &&\n                                        !isSharePage && (\n                                            <Grow in={!this.props.isMultiple}>\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.share\",\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openShareDialog()\n                                                        }\n                                                    >\n                                                        <ShareIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip\n                                                title={t(\"fileManager.rename\")}\n                                            >\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"fileManager.move\",\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.delete\",\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n\n                                            {pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"fileManager.moreActions\",\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.changeContextMenu(\n                                                                    \"file\",\n                                                                    true,\n                                                                )\n                                                            }\n                                                        >\n                                                            <MoreHoriz />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(!this.props.isMultiple && this.props.withFile) &&\n                            this.props.audioPreviewPlayingName != null && (\n                                <IconButton\n                                    title={t(\"navbar.music\")}\n                                    className={classes.sideButton}\n                                    onClick={this.props.audioPreviewOpen}\n                                    color={\"inherit\"}\n                                >\n                                    <MusicNote fontSize={\"default\"} />\n                                </IconButton>\n                            )}\n\n                        {this.props.selected.length === 0 && <UserAvatar />}\n                        {this.props.selected.length === 0 &&\n                            pathHelper.isMobile() &&\n                            (isHomePage || this.props.shareInfo) && (\n                                <SubActions inherit />\n                            )}\n                    </Toolbar>\n                </AppBar>\n                <Uploader />\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaperDesktop,\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen,\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(\n    withTheme(\n        withStyles(styles)(withRouter(withTranslation()(NavbarCompoment))),\n    ),\n);\n\nexport default Navbar;\n","import { Task } from \"../types\";\nimport Logger from \"../logger\";\nimport { UploaderError, UploaderErrorName } from \"../errors\";\nimport { ChunkProgress } from \"../uploader/chunk\";\n\nexport const sizeToString = (bytes: number): string => {\n    if (bytes === 0) return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\n// 文件分块\nexport function getChunks(\n    file: File,\n    chunkByteSize: number | undefined\n): Blob[] {\n    // 如果 chunkByteSize 比文件大或为0，则直接取文件的大小\n    if (!chunkByteSize || chunkByteSize > file.size || chunkByteSize == 0) {\n        chunkByteSize = file.size;\n    }\n\n    const chunks: Blob[] = [];\n    const count = Math.ceil(file.size / chunkByteSize);\n    for (let i = 0; i < count; i++) {\n        const chunk = file.slice(\n            chunkByteSize * i,\n            i === count - 1 ? file.size : chunkByteSize * (i + 1)\n        );\n        chunks.push(chunk);\n    }\n\n    if (chunks.length == 0) {\n        chunks.push(file.slice(0));\n    }\n    return chunks;\n}\n\nexport function sumChunk(list: ChunkProgress[]) {\n    return list.reduce((data, loaded) => data + loaded.loaded, 0);\n}\n\nconst resumeKeyPrefix = \"cd_upload_ctx_\";\n\nfunction isTask(toBeDetermined: Task | string): toBeDetermined is Task {\n    return !!(toBeDetermined as Task).name;\n}\n\nexport function getResumeCtxKey(task: Task | string): string {\n    if (isTask(task)) {\n        return `${resumeKeyPrefix}name_${task.name}_dst_${task.dst}_size_${task.size}_policy_${task.policy.id}`;\n    }\n\n    return task;\n}\n\nexport function setResumeCtx(task: Task, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.setItem(ctxKey, JSON.stringify(task));\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.WriteCtxFailed,\n                `setResumeCtx failed: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function removeResumeCtx(task: Task | string, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.removeItem(ctxKey);\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.RemoveCtxFailed,\n                `removeResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function cleanupResumeCtx(logger: Logger) {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            try {\n                localStorage.removeItem(key);\n            } catch (err) {\n                logger.warn(\n                    new UploaderError(\n                        UploaderErrorName.RemoveCtxFailed,\n                        `removeResumeCtx failed. key: ${key}`\n                    )\n                );\n            }\n        }\n    }\n}\n\nexport function getResumeCtx(task: Task | string, logger: Logger): Task | null {\n    const ctxKey = getResumeCtxKey(task);\n    let localInfoString: string | null = null;\n    try {\n        localInfoString = localStorage.getItem(ctxKey);\n    } catch {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.ReadCtxFailed,\n                `getResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (localInfoString == null) {\n        return null;\n    }\n\n    let localInfo: Task | null = null;\n    try {\n        localInfo = JSON.parse(localInfoString);\n    } catch {\n        // 本地信息已被破坏，直接删除\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.InvalidCtxData,\n                `getResumeCtx failed to parse. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (\n        localInfo &&\n        localInfo.session &&\n        localInfo.session.expires < Math.floor(Date.now() / 1000)\n    ) {\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.CtxExpired,\n                `upload session already expired at ${localInfo.session.expires}. key: ${ctxKey}`\n            )\n        );\n        return null;\n    }\n\n    return localInfo;\n}\n\nexport function listResumeCtx(logger: Logger): Task[] {\n    const res: Task[] = [];\n    for (let i = 0, len = localStorage.length; i < len; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            const value = getResumeCtx(key, logger);\n            if (value) {\n                res.push(value);\n            }\n        }\n    }\n\n    return res;\n}\n\nexport function OBJtoXML(obj: any): string {\n    let xml = \"\";\n    for (const prop in obj) {\n        xml += \"<\" + prop + \">\";\n        if (Array.isArray(obj[prop])) {\n            for (const array of obj[prop]) {\n                // A real botch fix here\n                xml += \"</\" + prop + \">\";\n                xml += \"<\" + prop + \">\";\n\n                xml += OBJtoXML(new Object(array));\n            }\n        } else if (typeof obj[prop] == \"object\") {\n            xml += OBJtoXML(new Object(obj[prop]));\n        } else {\n            xml += obj[prop];\n        }\n        xml += \"</\" + prop + \">\";\n    }\n    return xml.replace(/<\\/?[0-9]{1,}>/g, \"\");\n}\n\nexport function getFileInput(id: number, isFolder: boolean): HTMLInputElement {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.id = `upload-file-input-${id}`;\n    if (isFolder) {\n        input.id = `upload-folder-input-${id}`;\n        input.setAttribute(\"webkitdirectory\", \"true\");\n        input.setAttribute(\"mozdirectory\", \"true\");\n    } else {\n        input.id = `upload-file-input-${id}`;\n        input.multiple = true;\n    }\n    input.hidden = true;\n    document.body.appendChild(input);\n    return input;\n}\n\nexport function pathJoin(parts: string[], sep = \"/\"): string {\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + sep), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(sep + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(sep);\n}\n\nfunction basename(path: string): string {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function trimPrefix(src: string, prefix: string): string {\n    if (src.startsWith(prefix)) {\n        return src.slice(prefix.length);\n    }\n    return src;\n}\n\nexport function getDirectoryUploadDst(dst: string, file: any): string {\n    let relPath = file.webkitRelativePath;\n    if (!relPath || relPath == \"\") {\n        relPath = file.fsPath;\n        if (!relPath || relPath == \"\") {\n            return dst;\n        }\n    }\n\n    relPath = trimPrefix(relPath, \"/\");\n\n    return basename(pathJoin([dst, relPath]));\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\nasync function readEntriesPromise(directoryReader: any): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            directoryReader.readEntries(resolve, reject);\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nasync function readFilePromise(fileReader: any, path: string): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            fileReader.file((file: any) => {\n                file.fsPath = path;\n                resolve(file);\n            });\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n// Get all the entries (files or sub-directories) in a directory by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader: any): Promise<any> {\n    const entries: any[] = [];\n    let readEntries = await readEntriesPromise(directoryReader);\n    while (readEntries.length > 0) {\n        entries.push(...readEntries);\n        readEntries = await readEntriesPromise(directoryReader);\n    }\n    return entries;\n}\n\n// Drop handler function to get all files\nexport async function getAllFileEntries(\n    dataTransferItemList: DataTransferItemList\n): Promise<File[]> {\n    const fileEntries: any[] = [];\n    // Use BFS to traverse entire directory/file structure\n    const queue: any[] = [];\n    // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n    for (let i = 0; i < dataTransferItemList.length; i++) {\n        const fileEntry = dataTransferItemList[i].webkitGetAsEntry();\n        if (!fileEntry) {\n            const file = dataTransferItemList[i].getAsFile();\n            if (file) {\n                fileEntries.push(file);\n            }\n        }\n\n        queue.push(dataTransferItemList[i].webkitGetAsEntry());\n    }\n    while (queue.length > 0) {\n        const entry = queue.shift();\n        if (!entry) {\n            continue;\n        }\n        if (entry.isFile) {\n            fileEntries.push(await readFilePromise(entry, entry.fullPath));\n        } else if (entry.isDirectory) {\n            const reader = entry.createReader();\n            const entries: any = await readAllDirectoryEntries(reader);\n            queue.push(...entries);\n        }\n    }\n    return fileEntries;\n}\n\nexport function isFileDrop(e: DragEvent): boolean {\n    return !!e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n}\n","export * from \"./pool\";\nexport * from \"./helper\";\nexport * from \"./validator\";\nexport * from \"./request\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Fade,\n    InputBase,\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    Paper,\n    Popper,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { configure, HotKeys } from \"react-hotkeys\";\nimport { searchMyFile } from \"../../redux/explorer\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Trans, withTranslation } from \"react-i18next\";\n\nconfigure({\n    ignoreTags: [],\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchMyFile: (keywords, path) => {\n            dispatch(searchMyFile(keywords, path));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\",\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300,\n            },\n        },\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364,\n    },\n});\n\nconst keyMap = {\n    SEARCH: \"enter\",\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\",\n        };\n    }\n\n    handlers = {\n        SEARCH: (e) => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile(\"\")();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        },\n    };\n\n    handleChange = (event) => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value,\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\",\n        });\n    };\n\n    searchMyFile = (path) => () => {\n        this.props.searchMyFile(\"keywords/\" + this.input, path);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input),\n        );\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder={t(\"navbar.searchPlaceholder\")}\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile(\"\")}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary,\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    <Trans\n                                                        i18nKey=\"navbar.searchInFiles\"\n                                                        values={{\n                                                            name: this.state\n                                                                .input,\n                                                        }}\n                                                        components={[\n                                                            <strong key={0} />,\n                                                        ]}\n                                                    />\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                {isHomePage &&\n                                    this.props.path !== \"/\" &&\n                                    !this.props.search && (\n                                        <MenuItem\n                                            onClick={this.searchMyFile(\n                                                this.props.path,\n                                            )}\n                                        >\n                                            <ListItemIcon\n                                                className={classes.icon}\n                                            >\n                                                <FolderIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                classes={{\n                                                    primary: classes.primary,\n                                                }}\n                                                primary={\n                                                    <Typography noWrap>\n                                                        <Trans\n                                                            i18nKey=\"navbar.searchInFolders\"\n                                                            values={{\n                                                                name: this.state\n                                                                    .input,\n                                                            }}\n                                                            components={[\n                                                                <strong\n                                                                    key={0}\n                                                                />,\n                                                            ]}\n                                                        />\n                                                    </Typography>\n                                                }\n                                            />\n                                        </MenuItem>\n                                    )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                <Trans\n                                                    i18nKey=\"navbar.searchInShares\"\n                                                    values={{\n                                                        name: this.state.input,\n                                                    }}\n                                                    components={[\n                                                        <strong key={0} />,\n                                                    ]}\n                                                />\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(SearchBarCompoment))));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\n\nimport {\n    Divider,\n    LinearProgress,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\",\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\",\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\",\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\",\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\",\n        },\n        marginTop: \"5px\",\n    },\n    bar: {\n        marginTop: \"5px\",\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\n// TODO 使用 hooks 重构\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false,\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then((response) => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        this.props.t(\"navbar.exceedQuota\"),\n                        \"warning\",\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total),\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            <Typography variant={\"subtitle2\"}>\n                                {t(\"navbar.storage\")}\n                            </Typography>\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={t(\"navbar.storageDetail\", {\n                                        used:\n                                            this.state.used === null\n                                                ? \" -- \"\n                                                : this.state.used,\n                                        total:\n                                            this.state.total === null\n                                                ? \" -- \"\n                                                : this.state.total,\n                                    })}\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        {\" / \"}\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(StorageBarCompoment))));\n\nexport default StorageBar;\n","/* eslint-disable */\nclass Crc32 {\n    constructor() {\n        this.crc = -1;\n    }\n\n    append(data) {\n        let crc = this.crc | 0;\n        const table = this.table;\n        for (let offset = 0, len = data.length | 0; offset < len; offset++) {\n            crc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xff];\n        }\n        this.crc = crc;\n    }\n\n    get() {\n        return ~this.crc;\n    }\n}\nCrc32.prototype.table = (() => {\n    let i;\n    let j;\n    let t;\n    const table = [];\n    for (i = 0; i < 256; i++) {\n        t = i;\n        for (j = 0; j < 8; j++) {\n            t = t & 1 ? (t >>> 1) ^ 0xedb88320 : t >>> 1;\n        }\n        table[i] = t;\n    }\n    return table;\n})();\n\nconst getDataHelper = (byteLength) => {\n    const uint8 = new Uint8Array(byteLength);\n    return {\n        array: uint8,\n        view: new DataView(uint8.buffer),\n    };\n};\n\nconst pump = (zipObj) =>\n    zipObj.reader.read().then((chunk) => {\n        if (chunk.done) return zipObj.writeFooter();\n        const outputData = chunk.value;\n        zipObj.crc.append(outputData);\n        zipObj.uncompressedLength += outputData.length;\n        zipObj.compressedLength += outputData.length;\n        zipObj.ctrl.enqueue(outputData);\n    });\n\n/**\n * [createWriter description]\n * @param  {Object} underlyingSource [description]\n * @return {Boolean}                  [description]\n */\nfunction createWriter(underlyingSource) {\n    const files = Object.create(null);\n    const filenames = [];\n    const encoder = new TextEncoder();\n    let offset = 0;\n    let activeZipIndex = 0;\n    let ctrl;\n    let activeZipObject, closed;\n\n    function next() {\n        activeZipIndex++;\n        activeZipObject = files[filenames[activeZipIndex]];\n        if (activeZipObject) processNextChunk();\n        else if (closed) closeZip();\n    }\n\n    const zipWriter = {\n        enqueue(fileLike) {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot enqueue a chunk into a readable stream that is closed or has been requested to be closed\",\n                );\n\n            let name = fileLike.name.trim();\n            const date = new Date(\n                typeof fileLike.lastModified === \"undefined\"\n                    ? Date.now()\n                    : fileLike.lastModified,\n            );\n\n            if (fileLike.directory && !name.endsWith(\"/\")) name += \"/\";\n            if (files[name]) throw new Error(\"File already exists.\");\n\n            const nameBuf = encoder.encode(name);\n            filenames.push(name);\n\n            const zipObject = (files[name] = {\n                level: 0,\n                ctrl,\n                directory: !!fileLike.directory,\n                nameBuf,\n                comment: encoder.encode(fileLike.comment || \"\"),\n                compressedLength: 0,\n                uncompressedLength: 0,\n                writeHeader() {\n                    const header = getDataHelper(26);\n                    const data = getDataHelper(30 + nameBuf.length);\n\n                    zipObject.offset = offset;\n                    zipObject.header = header;\n                    if (zipObject.level !== 0 && !zipObject.directory) {\n                        header.view.setUint16(4, 0x0800);\n                    }\n                    header.view.setUint32(0, 0x14000808);\n                    header.view.setUint16(\n                        6,\n                        (((date.getHours() << 6) | date.getMinutes()) << 5) |\n                            (date.getSeconds() / 2),\n                        true,\n                    );\n                    header.view.setUint16(\n                        8,\n                        ((((date.getFullYear() - 1980) << 4) |\n                            (date.getMonth() + 1)) <<\n                            5) |\n                            date.getDate(),\n                        true,\n                    );\n                    header.view.setUint16(22, nameBuf.length, true);\n                    data.view.setUint32(0, 0x504b0304);\n                    data.array.set(header.array, 4);\n                    data.array.set(nameBuf, 30);\n                    offset += data.array.length;\n                    ctrl.enqueue(data.array);\n                },\n                writeFooter() {\n                    const footer = getDataHelper(16);\n                    footer.view.setUint32(0, 0x504b0708);\n\n                    if (zipObject.crc) {\n                        zipObject.header.view.setUint32(\n                            10,\n                            zipObject.crc.get(),\n                            true,\n                        );\n                        zipObject.header.view.setUint32(\n                            14,\n                            zipObject.compressedLength,\n                            true,\n                        );\n                        zipObject.header.view.setUint32(\n                            18,\n                            zipObject.uncompressedLength,\n                            true,\n                        );\n                        footer.view.setUint32(4, zipObject.crc.get(), true);\n                        footer.view.setUint32(\n                            8,\n                            zipObject.compressedLength,\n                            true,\n                        );\n                        footer.view.setUint32(\n                            12,\n                            zipObject.uncompressedLength,\n                            true,\n                        );\n                    }\n\n                    ctrl.enqueue(footer.array);\n                    offset += zipObject.compressedLength + 16;\n                    next();\n                },\n                fileLike,\n            });\n\n            if (!activeZipObject) {\n                activeZipObject = zipObject;\n                processNextChunk();\n            }\n        },\n        close() {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot close a readable stream that has already been requested to be closed\",\n                );\n            if (!activeZipObject) closeZip();\n            closed = true;\n        },\n    };\n\n    function closeZip() {\n        let length = 0;\n        let index = 0;\n        let indexFilename, file;\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            length += 46 + file.nameBuf.length + file.comment.length;\n        }\n        const data = getDataHelper(length + 22);\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            data.view.setUint32(index, 0x504b0102);\n            data.view.setUint16(index + 4, 0x1400);\n            data.array.set(file.header.array, index + 6);\n            data.view.setUint16(index + 32, file.comment.length, true);\n            if (file.directory) {\n                data.view.setUint8(index + 38, 0x10);\n            }\n            data.view.setUint32(index + 42, file.offset, true);\n            data.array.set(file.nameBuf, index + 46);\n            data.array.set(file.comment, index + 46 + file.nameBuf.length);\n            index += 46 + file.nameBuf.length + file.comment.length;\n        }\n        data.view.setUint32(index, 0x504b0506);\n        data.view.setUint16(index + 8, filenames.length, true);\n        data.view.setUint16(index + 10, filenames.length, true);\n        data.view.setUint32(index + 12, length, true);\n        data.view.setUint32(index + 16, offset, true);\n        ctrl.enqueue(data.array);\n        ctrl.close();\n    }\n\n    function processNextChunk() {\n        if (!activeZipObject) return;\n        if (activeZipObject.directory)\n            return activeZipObject.writeFooter(activeZipObject.writeHeader());\n        if (activeZipObject.reader) return pump(activeZipObject);\n        if (activeZipObject.fileLike.stream) {\n            activeZipObject.crc = new Crc32();\n            activeZipObject.reader = activeZipObject.fileLike\n                .stream()\n                .getReader();\n            activeZipObject.writeHeader();\n        } else next();\n    }\n    return new ReadableStream({\n        start: (c) => {\n            ctrl = c;\n            underlyingSource.start &&\n                Promise.resolve(underlyingSource.start(zipWriter));\n        },\n        pull() {\n            return (\n                processNextChunk() ||\n                (underlyingSource.pull &&\n                    Promise.resolve(underlyingSource.pull(zipWriter)))\n            );\n        },\n    });\n}\n\nwindow.ZIP = createWriter;\n","import { CloudreveFile } from \"../types\";\nimport { list } from \"../services/navigate\";\nimport { pathJoin } from \"../component/Uploader/core/utils\";\n\nexport function getPreviewPath(selected: any): string {\n    return encodeURIComponent(\n        selected.path === \"/\"\n            ? selected.path + selected.name\n            : selected.path + \"/\" + selected.name\n    );\n}\n\nexport async function walk(\n    file: CloudreveFile[],\n    share: any\n): Promise<CloudreveFile[]> {\n    let res: CloudreveFile[] = [];\n    for (const f of file) {\n        if (f.type === \"file\") {\n            res.push(f);\n            continue;\n        }\n\n        if (f.type === \"dir\") {\n            const response = await list(\n                pathJoin([f.path, f.name]),\n                share,\n                \"\",\n                \"\"\n            );\n            const subs = await walk(response.data.objects, share);\n            res = [...res, ...subs];\n        }\n    }\n\n    return res;\n}\n","// get the paths of files (no directories) in the directory\n// parent: \"\" or \"/\"\nexport const getFileSystemDirectoryPaths = async (\n    handle: FileSystemDirectoryHandle,\n    parent = \"\"\n): Promise<string[]> => {\n    const paths: Array<string> = [];\n\n    for await (const [path, fileSystemHandle] of handle.entries()) {\n        if (fileSystemHandle instanceof window.FileSystemFileHandle) {\n            paths.push(`${parent}${path}`);\n        } else {\n            paths.push(\n                ...(await getFileSystemDirectoryPaths(\n                    fileSystemHandle,\n                    `${parent}${path}/`\n                ))\n            );\n        }\n    }\n\n    return paths;\n};\n\n// create the dst directory if it doesn't exist\n// return the dst directory handle\n// paths: \"/dir1/dir2\" => [\"dir1\",\"dir2\"]\nexport const createFileSystemDirectory = async (\n    handle: FileSystemDirectoryHandle,\n    paths: string[]\n) => {\n    let cur = handle;\n    while (paths.length > 0) {\n        const path = paths.shift();\n        if (!path) {\n            break;\n        }\n        cur = await cur.getDirectoryHandle(path, { create: true });\n    }\n    return cur;\n};\n\n// save file into the dst directory\n// create the dst file if it doesn't exist by default\n// path: a/b/c.jpg\nexport const saveFileToFileSystemDirectory = async (\n    handle: FileSystemDirectoryHandle,\n    stream: FileSystemWriteChunkType,\n    path: string,\n    create = true\n) => {\n    const paths = path.split(\"/\");\n    const fileName = paths.pop();\n    if (!fileName) return;\n\n    const dir = await createFileSystemDirectory(handle, paths);\n    const file = await dir.getFileHandle(fileName, { create });\n    const writable = await file.createWritable();\n    await writable.write(stream);\n    await writable.close();\n};\n\n// verify or request the permission of the readwrite permission\nexport async function verifyFileSystemRWPermission(\n    fileHandle: FileSystemDirectoryHandle\n) {\n    const opts = { mode: \"readwrite\" as FileSystemPermissionMode };\n\n    // Check if we already have permission, if so, return true.\n    if ((await fileHandle.queryPermission(opts)) === \"granted\") {\n        return true;\n    }\n\n    // Request permission to the file, if the user grants permission, return true.\n    if ((await fileHandle.requestPermission(opts)) === \"granted\") {\n        return true;\n    }\n\n    // The user did not grant permission, return false.\n    return false;\n}\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\nimport { closeContextMenu, setPagination } from \"../viewUpdate/action\";\nimport { Policy } from \"../../component/Uploader/core/types\";\nimport streamSaver from \"streamsaver\";\nimport \"../../utils/zip\";\nimport pathHelper from \"../../utils/page\";\nimport { filePath, isMac } from \"../../utils\";\nimport API, { getBaseURL } from \"../../middleware/Api\";\nimport { pathJoin, trimPrefix } from \"../../component/Uploader/core/utils\";\nimport { getPreviewPath, walk } from \"../../utils/api\";\nimport { askForOption } from \"./async\";\nimport Auth from \"../../middleware/Auth\";\nimport { encodingRequired, isPreviewable } from \"../../config\";\nimport { push } from \"connected-react-router\";\nimport {\n    changeContextMenu,\n    closeAllModals,\n    navigateTo,\n    openDirectoryDownloadDialog,\n    openGetSourceDialog,\n    openLoadingDialog,\n    openTorrentDownloadDialog,\n    showAudioPreview,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"./index\";\nimport { getDownloadURL } from \"../../services/file\";\nimport i18next from \"../../i18n\";\nimport {\n    getFileSystemDirectoryPaths,\n    saveFileToFileSystemDirectory,\n    verifyFileSystemRWPermission,\n} from \"../../utils/filesystem\";\nimport { sortMethodFuncs } from \"../../component/FileManager/Sort\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method,\n    };\n};\n\nexport const setSideBar = (open: boolean) => {\n    return {\n        type: \"SET_SIDE_BAR\",\n        open,\n    };\n};\n\nexport const setCurrentPolicy = (policy: Policy) => {\n    return {\n        type: \"SET_CURRENT_POLICY\",\n        policy,\n    };\n};\n\nexport const removeSelectedTargets = (fileIds: any) => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds,\n    };\n};\nexport const addSelectedTargets = (targets: any) => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets,\n    };\n};\nexport const setSelectedTarget = (targets: any) => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets,\n    };\n};\nexport const setLastSelect = (file: any, index: any) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index,\n    };\n};\nexport const setShiftSelectedIds = (shiftSelectedIds: any) => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds,\n    };\n};\n\nexport const selectAll = (): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { selected, fileList, dirList } = state.explorer;\n        if (selected.length >= dirList.length + fileList.length) {\n            dispatch(setSelectedTarget([]));\n        } else {\n            dispatch(setSelectedTarget([...dirList, ...fileList]));\n        }\n    };\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod, pagination } = state.viewUpdate;\n        const dirList = list.filter((x) => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter((x) => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n        const total = dirList.length + fileList.length;\n        if (pagination.page * pagination.size > total) {\n            dispatch(\n                setPagination({\n                    ...pagination,\n                    page: Math.max(Math.ceil(total / pagination.size), 1),\n                })\n            );\n        }\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        Auth.SetPreference(\"sort\", method);\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.slice().sort(sortFunc)));\n        dispatch(setFileList(fileList.slice().sort(sortFunc)));\n    };\n};\n\nexport const toggleObjectInfoSidebar = (\n    open: boolean\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        if (open) {\n            dispatch(closeContextMenu());\n        }\n        dispatch(setSideBar(true));\n    };\n};\n\nexport const serverSideBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        dispatch(\n            openLoadingDialog(i18next.t(\"fileManager.preparingBathDownload\"))\n        );\n        const {\n            explorer: { selected, fileList, dirList },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const dirs: string[] = [],\n            items: string[] = [];\n        const fileSources: CloudreveFile[] = selected.length ? selected : [...dirList, ...fileList];\n        fileSources.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs,\n        };\n        if (pathHelper.isSharePage(pathname)) {\n            reqURL = \"/share/archive/\" + share.key;\n            postBody[\"path\"] = fileSources[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then((response: any) => {\n                if (response.rawData.code === 0) {\n                    dispatch(closeAllModals());\n                    window.location.assign(response.data);\n                } else {\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            response.rawData.msg,\n                            \"warning\"\n                        )\n                    );\n                }\n                dispatch(closeAllModals());\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"error\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n\nexport const startDownload = (\n    share: any,\n    file: CloudreveFile\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        const {\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const user = Auth.GetUser();\n        if (\n            pathHelper.isSharePage(pathname) &&\n            !Auth.Check() &&\n            user &&\n            !user.group.shareDownload\n        ) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"share.pleaseLogin\"),\n                    \"warning\"\n                )\n            );\n            return;\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        dispatch(openLoadingDialog(i18next.t(\"fileManager.preparingDownload\")));\n        try {\n            const res = await getDownloadURL(file ? file : share);\n            window.location.assign(res.data);\n            dispatch(closeAllModals());\n        } catch (e) {\n            dispatch(toggleSnackbar(\"top\", \"right\", e.message, \"warning\"));\n            dispatch(closeAllModals());\n        }\n    };\n};\n\nexport const startBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        dispatch(changeContextMenu(\"file\", false));\n        const {\n            explorer: { selected, fileList, dirList },\n        } = getState();\n\n        const user = Auth.GetUser();\n        if (user.group.allowArchiveDownload) {\n            let option: any;\n            try {\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"client\",\n                                name: i18next.t(\n                                    \"fileManager.browserBatchDownload\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.browserBatchDownloadDescription\"\n                                ),\n                            },\n                            {\n                                key: \"server\",\n                                name: i18next.t(\n                                    \"fileManager.serverBatchDownload\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.serverBatchDownloadDescription\"\n                                ),\n                            },\n                        ],\n                        i18next.t(\"fileManager.selectArchiveMethod\")\n                    )\n                );\n            } catch (e) {\n                return;\n            }\n\n            if (option.key === \"server\") {\n                dispatch(serverSideBatchDownload(share));\n                return;\n            }\n        }\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n\n        let queue: CloudreveFile[] = [];\n        try {\n            const walkSources = selected.length ? selected : [...dirList, ...fileList];\n            queue = await walk(walkSources, share);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(closeAllModals());\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                i18next.t(\"fileManager.batchDownloadStarted\"),\n                \"info\"\n            )\n        );\n        const fileStream = streamSaver.createWriteStream(\"archive.zip\");\n        let failed = 0;\n        const readableZipStream = new (window as any).ZIP({\n            start(ctrl: any) {\n                // ctrl.close()\n            },\n            async pull(ctrl: any) {\n                while (queue.length > 0) {\n                    const next = queue.pop();\n                    if (next && next.type === \"file\") {\n                        const previewPath = getPreviewPath(next);\n                        const url =\n                            getBaseURL() +\n                            (pathHelper.isSharePage(location.pathname)\n                                ? \"/share/preview/\" +\n                                  share.key +\n                                  (previewPath !== \"\"\n                                      ? \"?path=\" + previewPath\n                                      : \"\")\n                                : \"/file/preview/\" + next.id);\n                        try {\n                            const res = await fetch(url, { cache: \"no-cache\" });\n                            const stream = () => res.body;\n                            const name = trimPrefix(\n                                pathJoin([next.path, next.name]),\n                                \"/\"\n                            );\n                            ctrl.enqueue({ name, stream });\n                            return;\n                        } catch (e) {\n                            failed++;\n                        }\n                    }\n                }\n                ctrl.close();\n            },\n        });\n\n        // more optimized\n        if (window.WritableStream && readableZipStream.pipeTo) {\n            return readableZipStream\n                .pipeTo(fileStream)\n                .then(() => dispatch(closeAllModals()))\n                .catch((e) => {\n                    console.log(e);\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        i18next.t(\"modals.batchDownloadError\", {\n                            message: e && e.message,\n                        }),\n                        \"warning\"\n                    );\n                    dispatch(closeAllModals());\n                });\n        }\n    };\n};\n\nlet directoryDownloadAbortController: AbortController;\nexport const cancelDirectoryDownload = () =>\n    directoryDownloadAbortController.abort();\n\nexport const startDirectoryDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        dispatch(changeContextMenu(\"file\", false));\n\n        directoryDownloadAbortController = new AbortController();\n        if (!window.showDirectoryPicker || !window.isSecureContext) {\n            return;\n        }\n        let handle: FileSystemDirectoryHandle;\n        // we should show directory picker at first\n        // https://web.dev/file-system-access/#:~:text=handle%3B%0A%7D-,Gotchas,-Sometimes%20processing%20the\n        try {\n            // can't use suggestedName for showDirectoryPicker (only available showSaveFilePicker)\n            handle = await window.showDirectoryPicker({\n                startIn: \"downloads\",\n                mode: \"readwrite\",\n            });\n            // we should obtain the readwrite permission for the directory at first\n            if (!(await verifyFileSystemRWPermission(handle))) {\n                throw new Error(\n                    i18next.t(\"fileManager.directoryDownloadPermissionError\")\n                );\n            }\n            dispatch(closeAllModals());\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.directoryDownloadError\", {\n                        msg: e && e.message,\n                    }),\n                    \"error\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        const {\n            explorer: { selected },\n            navigator: { path },\n        } = getState();\n\n        // list files to download\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, share);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(closeAllModals());\n\n        let failed = 0;\n        let option: any;\n        // preparation for downloading\n        // get the files in the directory to compare with queue files\n        // parent: \"\"\n        const fsPaths = await getFileSystemDirectoryPaths(handle, \"\");\n\n        // path: / or /abc (no sep suffix)\n        // file.path: /abc/d (no sep suffix)\n        // fsPaths: [\"abc/d/e.bin\",]\n        const duplicates = queue\n            .map((file) =>\n                trimPrefix(\n                    `${file.path}/${file.name}`,\n                    path === \"/\" ? \"/\" : path + \"/\"\n                )\n            )\n            .filter((path) => fsPaths.includes(path));\n\n        // we should ask users for the duplication handle method\n        if (duplicates.length > 0) {\n            try {\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"replace\",\n                                name: i18next.t(\n                                    \"fileManager.directoryDownloadReplace\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.directoryDownloadReplaceDescription\",\n                                    {\n                                        // display the first three duplications\n                                        duplicates: duplicates\n                                            .slice(\n                                                0,\n                                                duplicates.length >= 3\n                                                    ? 3\n                                                    : duplicates.length\n                                            )\n                                            .join(\", \"),\n                                        num: duplicates.length,\n                                    }\n                                ),\n                            },\n                            {\n                                key: \"skip\",\n                                name: i18next.t(\n                                    \"fileManager.directoryDownloadSkip\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.directoryDownloadSkipDescription\",\n                                    {\n                                        duplicates: duplicates\n                                            .slice(\n                                                0,\n                                                duplicates.length >= 3\n                                                    ? 3\n                                                    : duplicates.length\n                                            )\n                                            .join(\", \"),\n                                        num: duplicates.length,\n                                    }\n                                ),\n                            },\n                        ],\n                        i18next.t(\n                            \"fileManager.selectDirectoryDuplicationMethod\"\n                        )\n                    )\n                );\n            } catch (e) {\n                return;\n            }\n        }\n        dispatch(closeAllModals());\n\n        // start the download\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                i18next.t(\"fileManager.directoryDownloadStarted\"),\n                \"info\"\n            )\n        );\n\n        const updateLog = (log, done) => {\n            dispatch(openDirectoryDownloadDialog(true, log, done));\n        };\n        let log = \"\";\n\n        while (queue.length > 0) {\n            const next = queue.pop();\n            if (next && next.type === \"file\") {\n                // donload url\n                const previewPath = getPreviewPath(next);\n                const url =\n                    getBaseURL() +\n                    (pathHelper.isSharePage(location.pathname)\n                        ? \"/share/preview/\" +\n                          share.key +\n                          (previewPath !== \"\" ? \"?path=\" + previewPath : \"\")\n                        : \"/file/preview/\" + next.id);\n\n                // path to save this file\n                // path: / or /abc (no sep suffix)\n                // next.path: /abc/d (no sep suffix)\n                // name: d/e.bin\n                const name = trimPrefix(\n                    pathJoin([next.path, next.name]),\n                    path === \"/\" ? \"/\" : path + \"/\"\n                );\n                // TODO: improve the display of log\n                // can we turn the upload queue component to the transition queue?\n                // then we can easily cancel or retry the download\n                // and the batch download queue can show as well.\n                log =\n                    (log === \"\" ? \"\" : log + \"\\n\\n\") +\n                    i18next.t(\"modals.directoryDownloadStarted\", { name });\n                updateLog(log, false);\n                try {\n                    if (duplicates.includes(name)) {\n                        if (option.key === \"skip\") {\n                            log +=\n                                \"\\n\" +\n                                i18next.t(\n                                    \"modals.directoryDownloadSkipNotifiction\",\n                                    {\n                                        name,\n                                    }\n                                );\n                            updateLog(log, false);\n                            continue;\n                        } else {\n                            log +=\n                                \"\\n\" +\n                                i18next.t(\n                                    \"modals.directoryDownloadReplaceNotifiction\",\n                                    {\n                                        name,\n                                    }\n                                );\n                            updateLog(log, false);\n                        }\n                    }\n\n                    // TODO: need concurrent task queue?\n                    const res = await fetch(url, {\n                        cache: \"no-cache\",\n                        signal: directoryDownloadAbortController.signal,\n                    });\n                    await saveFileToFileSystemDirectory(\n                        handle,\n                        await res.blob(),\n                        name\n                    );\n                    log += \"\\n\" + i18next.t(\"modals.directoryDownloadFinished\");\n                    updateLog(log, false);\n                } catch (e) {\n                    if (e.name === \"AbortError\") {\n                        dispatch(\n                            toggleSnackbar(\n                                \"top\",\n                                \"right\",\n                                i18next.t(\"modals.directoryDownloadCancelled\"),\n                                \"warning\"\n                            )\n                        );\n                        log +=\n                            \"\\n\\n\" +\n                            i18next.t(\"modals.directoryDownloadCancelled\");\n                        updateLog(log, true);\n                        return;\n                    }\n\n                    failed++;\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            i18next.t(\n                                \"modals.directoryDownloadErrorNotification\",\n                                {\n                                    name,\n                                    msg: e && e.message,\n                                }\n                            ),\n                            \"warning\"\n                        )\n                    );\n                    log +=\n                        \"\\n\" +\n                        i18next.t(\"modals.directoryDownloadError\", {\n                            msg: e.message,\n                        });\n                    updateLog(log, false);\n                }\n            }\n        }\n        log +=\n            \"\\n\" +\n            (failed === 0\n                ? i18next.t(\"fileManager.directoryDownloadFinished\")\n                : i18next.t(\"fileManager.directoryDownloadFinishedWithError\", {\n                      failed,\n                  }));\n        updateLog(log, true);\n\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                failed === 0\n                    ? i18next.t(\"fileManager.directoryDownloadFinished\")\n                    : i18next.t(\n                          \"fileManager.directoryDownloadFinishedWithError\",\n                          {\n                              failed,\n                          }\n                      ),\n                \"success\"\n            )\n        );\n    };\n};\n\nexport const getViewerURL = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n): string => {\n    const previewPath = getPreviewPath(file);\n    if (isShare) {\n        return (\n            \"/s/\" +\n            file.key +\n            `/${viewer}?name=` +\n            encodeURIComponent(file.name) +\n            \"&share_path=\" +\n            previewPath\n        );\n    }\n\n    return `/${viewer}?p=` + previewPath + \"&id=\" + file.id;\n};\n\nexport const openViewer = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n) => {\n    return (dispatch: any, getState: any) => {\n        dispatch(push(getViewerURL(viewer, file, isShare)));\n    };\n};\n\nexport const openPreview = (share: any) => {\n    return (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const isShare = pathHelper.isSharePage(pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                dispatch(\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        i18next.t(\"share.pleaseLogin\"),\n                        \"warning\"\n                    )\n                );\n                dispatch(changeContextMenu(\"file\", false));\n                return;\n            }\n        }\n        // console.log(selected)\n        dispatch(changeContextMenu(\"file\", false));\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                dispatch(showImgPreivew(selected[0]));\n                return;\n            case \"msDoc\":\n                dispatch(openViewer(\"doc\", selected[0], isShare));\n                return;\n            case \"audio\":\n                dispatch(showAudioPreview(selected[0]));\n                return;\n            case \"video\":\n                dispatch(openViewer(\"video\", selected[0], isShare));\n                return;\n            case \"pdf\":\n                dispatch(openViewer(\"pdf\", selected[0], isShare));\n                return;\n            case \"edit\":\n                dispatch(openViewer(\"text\", selected[0], isShare));\n                return;\n            case \"code\":\n                dispatch(openViewer(\"code\", selected[0], isShare));\n                return;\n            case \"epub\":\n                dispatch(openViewer(\"epub\", selected[0], isShare));\n                return;\n            default:\n                dispatch(startDownload(share, selected[0]));\n                return;\n        }\n    };\n};\nexport const selectFile = (file: any, event: any, fileIndex: any) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch: any, getState: any) => {\n        // 多种组合操作忽略\n        if (\n            [ctrlKey, shiftKey].filter(Boolean).length > 1 ||\n            [metaKey, shiftKey].filter(Boolean).length > 1\n        ) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const { selected, lastSelect, dirList, fileList, shiftSelectedIds } =\n            explorer;\n        if (shiftKey && !ctrlKey && !metaKey && selected.length !== 0) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map((v: any) => v.id)));\n            const all = [...dirList, ...fileList];\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = all.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex((value: any) => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n\nexport const submitCompressTask = (fileName: string, path: string) => {\n    return async (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n        } = getState();\n        const dirs: string[] = [],\n            items: string[] = [];\n        // eslint-disable-next-line\n        selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        return await API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            name: fileName,\n            dst: path === \"//\" ? \"/\" : path,\n        });\n    };\n};\n\nconst encodings = [\n    \"ibm866\",\n    \"iso8859_2\",\n    \"iso8859_3\",\n    \"iso8859_4\",\n    \"iso8859_5\",\n    \"iso8859_6\",\n    \"iso8859_7\",\n    \"iso8859_8\",\n    \"iso8859_8I\",\n    \"iso8859_10\",\n    \"iso8859_13\",\n    \"iso8859_14\",\n    \"iso8859_15\",\n    \"iso8859_16\",\n    \"koi8r\",\n    \"koi8u\",\n    \"macintosh\",\n    \"windows874\",\n    \"windows1250\",\n    \"windows1251\",\n    \"windows1252\",\n    \"windows1253\",\n    \"windows1254\",\n    \"windows1255\",\n    \"windows1256\",\n    \"windows1257\",\n    \"windows1258\",\n    \"macintoshcyrillic\",\n    \"gbk\",\n    \"big5\",\n    \"eucjp\",\n    \"iso2022jp\",\n    \"shiftjis\",\n    \"euckr\",\n    \"utf16be\",\n    \"utf16le\",\n];\n\nexport const submitDecompressTask = (path: string) => {\n    return async (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n        } = getState();\n\n        let encoding = \"\";\n        if (selected.length > 0 && encodingRequired(selected[0].name)) {\n            let option: any;\n            try {\n                const allOptions = encodings.map((e) => {\n                    return {\n                        key: e,\n                        name: e.toUpperCase(),\n                    };\n                });\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"\",\n                                name: i18next.t(\"modals.defaultEncoding\"),\n                            },\n                            {\n                                key: \"gb18030\",\n                                name: \"GB18030\",\n                                description: i18next.t(\n                                    \"modals.chineseMajorEncoding\"\n                                ),\n                            },\n                            ...allOptions,\n                        ],\n                        i18next.t(\"modals.selectEncoding\")\n                    )\n                );\n            } catch (e) {\n                throw new Error(i18next.t(\"modals.noEncodingSelected\"));\n            }\n\n            encoding = option.key;\n        }\n\n        return await API.post(\"/file/decompress\", {\n            src: filePath(selected[0]),\n            dst: path === \"//\" ? \"/\" : path,\n            encoding: encoding,\n        });\n    };\n};\n\nexport const batchGetSource = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n\n        if (selected.findIndex((f) => f.type === \"dir\") >= 0) {\n            dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n        }\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, null);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.generatingSourceLinks\")));\n\n        const items = queue\n            .filter((value) => value.source_enabled && value.type === \"file\")\n            .map((v) => v.id);\n\n        if (items.length === 0) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.noFileCanGenerateSourceLink\"),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        const user = Auth.GetUser();\n        if (items.length > user.group.sourceBatch) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.sourceBatchSizeExceeded\", {\n                        limit: user.group.sourceBatch,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        API.post(\"/file/source\", { items: items })\n            .then((response) => {\n                dispatch(closeAllModals());\n                if (response.data.length == 1 && response.data[0].error) {\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            response.data[0].error,\n                            \"warning\"\n                        )\n                    );\n                    return;\n                }\n\n                dispatch(\n                    openGetSourceDialog(\n                        response.data.length == 1\n                            ? response.data[0].url\n                            : response.data\n                                  .map(\n                                      (res) =>\n                                          `${res.name}: ${res.url}${\n                                              res.error ? res.error : \"\"\n                                          }`\n                                  )\n                                  .join(\"\\n\")\n                    )\n                );\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"warning\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n\nexport const openTorrentDownload = (): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const {\n            explorer: { selected },\n        } = getState();\n        dispatch(openTorrentDownloadDialog(selected[0]));\n    };\n};\n\nexport const openParentFolder = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        const {\n            explorer: { selected },\n        } = getState();\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.processing\")));\n        API.get(\n            \"/object/property/\" +\n            selected[0].id +\n            \"?trace_root=true&is_folder=\" +\n            (selected[0].type === \"dir\").toString()\n        )\n            .then((response) => {\n                const path =\n                    response.data.path === \"\"\n                        ? selected[0].path\n                        : response.data.path;\n                dispatch(navigateTo(path));\n                dispatch(closeAllModals());\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"warning\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { setUserPopover } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\",\n    },\n    nickName: {\n        color: \"#fff\",\n        marginTop: \"15px\",\n        fontSize: \"17px\",\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    groupName: {\n        color: \"#ffffff\",\n        opacity: \"0.54\",\n    },\n    storageCircle: {\n        width: \"200px\",\n    },\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : t(\"navbar.notLoginIn\")}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : t(\"navbar.visitor\")}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withTranslation()(UserInfoCompoment)));\n\nexport default UserInfo;\n","import React, { Suspense, useCallback, useState } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles,\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    FolderHeartOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    TagPlus,\n    Triangle,\n    TriangleOutline,\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ListItem = withStyles((theme) => ({\n    root: {\n        borderRadius: theme.shape.borderRadius,\n    },\n}))(MuiListItem);\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles((theme) => ({\n    root: {\n        minHeight: 0,\n        padding: 0,\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n}))(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\",\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    hiddenButton: {\n        display: \"none\",\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2),\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    paddingList: {\n        padding: theme.spacing(1),\n    },\n    paddingSummary: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline,\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : [],\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback(\n        (k, p) => dispatch(searchMyFile(k, p)),\n        [dispatch],\n    );\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color,\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = (tag) => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = (id) => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter((v) => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.paddingSummary}>\n                        <ListItem\n                            button\n                            key=\"我的文件\"\n                            onClick={() =>\n                                !isHomePage && history.push(\"/home?path=%2F\")\n                            }\n                        >\n                            <ListItemIcon>\n                                <KeyboardArrowRight\n                                    className={classNames(\n                                        {\n                                            [classes.expanded]:\n                                                tagOpen && isHomePage,\n                                            [classes.iconFix]: true,\n                                        },\n                                        classes.expand,\n                                    )}\n                                />\n                                {!(tagOpen && isHomePage) && (\n                                    <FolderShared className={classes.iconFix} />\n                                )}\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"navbar.myFiles\")} />\n                        </ListItem>\n                    </div>\n\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List\n                        className={classes.paddingList}\n                        onMouseLeave={() => setTagHover(null)}\n                    >\n                        <ListItem\n                            button\n                            id=\"pickfiles\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        <ListItem\n                            button\n                            id=\"pickfolder\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        {[\n                            {\n                                key: t(\"navbar.videos\"),\n                                id: \"video\",\n                                icon: (\n                                    <VideoIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconVideo,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: t(\"navbar.photos\"),\n                                id: \"image\",\n                                icon: (\n                                    <ImageIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconImg,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: t(\"navbar.music\"),\n                                id: \"audio\",\n                                icon: (\n                                    <MusicIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconAudio,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: t(\"navbar.documents\"),\n                                id: \"doc\",\n                                icon: (\n                                    <DocIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconDoc,\n                                        ]}\n                                    />\n                                ),\n                            },\n                        ].map((v) => (\n                            <ListItem\n                                button\n                                key={v.key}\n                                onClick={() =>\n                                    SearchMyFile(v.id + \"/internal\", \"\")\n                                }\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {v.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={v.key} />\n                            </ListItem>\n                        ))}\n                        {tags.map((v) => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id, \"\");\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null,\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        <ListItem button onClick={() => setAddTagModal(true)}>\n                            <ListItemIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"navbar.addATag\")} />\n                        </ListItem>\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport { showImgPreivew } from \"../../redux/explorer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        let item;\n        // console.log(nextProps)\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true,\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            // const v=nextProps.first\n            // const fileType = v.name.split(\".\").pop().toLowerCase();\n            //     if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n            //         let src = \"\";\n            //         if (pathHelper.isSharePage(this.props.location.pathname)) {\n            //             src = baseURL + \"/share/preview/\" + v.key;\n            //             src =\n            //                 src +\n            //                 \"?path=\" +\n            //                 encodeURIComponent(\n            //                     v.path === \"/\"\n            //                         ? v.path + v.name\n            //                         : v.path + \"/\" + v.name\n            //                 );\n            //         } else {\n            //             src = baseURL + \"/file/preview/\" + v.id;\n            //         }\n            //         const newImg = {\n            //             intro: v.name,\n            //             src: src,\n            //         };\n            //         if (\n            //             v.path === nextProps.first.path &&\n            //             v.name === nextProps.first.name\n            //         ) {\n            //             firstOne = items.length;\n            //         }\n            //         items.push(newImg);\n            //     }\n            nextProps.other.map((value) => {\n                console.log(value);\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name,\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true,\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={(n) =>\n                            this.setState({\n                                photoIndex: n,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","import { ChunkProgress } from \"./uploader/chunk\";\n\nexport enum PolicyType {\n    local = \"local\",\n    remote = \"remote\",\n    oss = \"oss\",\n    qiniu = \"qiniu\",\n    onedrive = \"onedrive\",\n    cos = \"cos\",\n    upyun = \"upyun\",\n    s3 = \"s3\",\n}\n\nexport interface Policy {\n    id: number;\n    name: string;\n    allowedSuffix: Nullable<string[]>;\n    maxSize: number;\n    type: PolicyType;\n}\n\nexport enum TaskType {\n    file,\n    resumeHint,\n}\n\nexport interface Task {\n    type: TaskType;\n    name: string;\n    size: number;\n    policy: Policy;\n    dst: string;\n    file: File;\n    child?: Task[];\n    session?: UploadCredential;\n    chunkProgress: ChunkProgress[];\n    resumed: boolean;\n}\n\ntype Nullable<T> = T | null;\n\nexport interface Response<T> {\n    code: number;\n    data: T;\n    msg: string;\n    error: string;\n}\n\nexport interface UploadSessionRequest {\n    path: string;\n    size: number;\n    name: string;\n    policy_id: number;\n    last_modified?: number;\n\n    mime_type?: string;\n}\n\nexport interface UploadCredential {\n    sessionID: string;\n    expires: number;\n    chunkSize: number;\n    uploadURLs: string[];\n    credential: string;\n    uploadID: string;\n    callback: string;\n    policy: string;\n    ak: string;\n    keyTime: string;\n    path: string;\n    completeURL: string;\n}\n\nexport interface OneDriveError {\n    error: {\n        code: string;\n        message: string;\n        innererror?: {\n            code: string;\n        };\n        retryAfterSeconds?: number;\n    };\n}\n\nexport interface OneDriveChunkResponse {\n    expirationDateTime: string;\n    nextExpectedRanges: string[];\n}\n\nexport interface QiniuChunkResponse {\n    etag: string;\n    md5: string;\n}\n\nexport interface QiniuError {\n    error: string;\n}\n\nexport interface QiniuPartsInfo {\n    etag: string;\n    partNumber: number;\n}\n\nexport interface QiniuFinishUploadRequest {\n    parts: QiniuPartsInfo[];\n}\n\nexport interface UpyunError {\n    message: string;\n    code: number;\n}\n\nexport interface S3Part {\n    ETag: string;\n    PartNumber: number;\n}\n","// 所有 Uploader 的基类\nimport { PolicyType, Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\nimport { validate } from \"../utils/validator\";\nimport { CancelToken } from \"../utils/request\";\nimport axios, { CancelTokenSource } from \"axios\";\nimport { createUploadSession, deleteUploadSession } from \"../api\";\nimport * as utils from \"../utils\";\nimport { RequestCanceledError, UploaderError } from \"../errors\";\n\nexport enum Status {\n    added,\n    resumable,\n    initialized,\n    queued,\n    preparing,\n    processing,\n    finishing,\n    finished,\n    error,\n    canceled,\n}\n\nexport interface UploadHandlers {\n    onTransition: (newStatus: Status) => void;\n    onError: (err: Error) => void;\n    onProgress: (data: UploadProgress) => void;\n    onMsg: (msg: string, color: string) => void;\n}\n\nexport interface UploadProgress {\n    total: ProgressCompose;\n    chunks?: ProgressCompose[];\n}\n\nexport interface ProgressCompose {\n    size: number;\n    loaded: number;\n    percent: number;\n    fromCache?: boolean;\n}\n\nexport interface Progress {\n    total: number;\n    loaded: number;\n}\n\nconst resumePolicy = [\n    PolicyType.local,\n    PolicyType.remote,\n    PolicyType.qiniu,\n    PolicyType.oss,\n    PolicyType.onedrive,\n    PolicyType.s3,\n];\nconst deleteUploadSessionDelay = 500;\n\nexport default abstract class Base {\n    public child?: Base[];\n    public status: Status = Status.added;\n    public error?: Error;\n\n    public id = ++Base.id;\n    private static id = 0;\n\n    protected logger: Logger;\n    protected subscriber: UploadHandlers;\n    // 用于取消请求\n    protected cancelToken: CancelTokenSource = CancelToken.source();\n    protected progress: UploadProgress;\n\n    public lastTime = Date.now();\n    public startTime = Date.now();\n\n    constructor(public task: Task, protected manager: UploadManager) {\n        this.logger = new Logger(\n            this.manager.logger.level,\n            \"UPLOADER\",\n            this.id\n        );\n        this.logger.info(\"Initialize new uploader for task: \", task);\n        this.subscriber = {\n            /* eslint-disable @typescript-eslint/no-empty-function */\n            onTransition: (newStatus: Status) => {},\n            onError: (err: Error) => {},\n            onProgress: (data: UploadProgress) => {},\n            onMsg: (msg, color: string) => {},\n            /* eslint-enable @typescript-eslint/no-empty-function */\n        };\n    }\n\n    public subscribe = (handlers: UploadHandlers) => {\n        this.subscriber = handlers;\n    };\n\n    public start = async () => {\n        this.logger.info(\"Activate uploading task\");\n        this.transit(Status.initialized);\n        this.lastTime = this.startTime = Date.now();\n\n        try {\n            validate(this.task.file, this.task.policy);\n        } catch (e) {\n            this.logger.error(\"File validate failed with error:\", e);\n            this.setError(e);\n            return;\n        }\n\n        this.logger.info(\"Enqueued in manager pool\");\n        this.transit(Status.queued);\n        this.manager.pool.enqueue(this).catch((e) => {\n            this.logger.info(\"Upload task failed with error:\", e);\n            this.setError(e);\n        });\n    };\n\n    public run = async () => {\n        this.logger.info(\"Start upload task, create upload session...\");\n        this.transit(Status.preparing);\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.session = await createUploadSession(\n                {\n                    path: this.task.dst,\n                    size: this.task.file.size,\n                    name: this.task.file.name,\n                    policy_id: this.task.policy.id,\n                    last_modified: this.task.file.lastModified,\n                    mime_type: this.task.file.type,\n                },\n                this.cancelToken.token\n            );\n            this.logger.info(\"Upload session created:\", this.task.session);\n        } else {\n            this.task.session = cachedInfo.session;\n            this.task.resumed = true;\n            this.task.chunkProgress = cachedInfo.chunkProgress;\n            this.logger.info(\"Resume upload from cached ctx:\", cachedInfo);\n        }\n\n        this.transit(Status.processing);\n        await this.upload();\n        await this.afterUpload();\n        utils.removeResumeCtx(this.task, this.logger);\n        this.transit(Status.finished);\n        this.logger.info(\"Upload task completed\");\n    };\n\n    public abstract async upload(): Promise<any>;\n    protected async afterUpload(): Promise<any> {\n        return;\n    }\n\n    public cancel = async () => {\n        if (this.status === Status.finished) {\n            return;\n        }\n\n        this.cancelToken.cancel();\n        await this.cancelUploadSession();\n        this.transit(Status.canceled);\n    };\n\n    public reset = () => {\n        this.cancelToken = axios.CancelToken.source();\n        this.progress = {\n            total: {\n                size: 0,\n                loaded: 0,\n                percent: 0,\n            },\n        };\n    };\n\n    protected setError(e: Error) {\n        if (\n            !(e instanceof UploaderError && e.Retryable()) ||\n            !resumePolicy.includes(this.task.policy.type)\n        ) {\n            this.logger.warn(\"Non-resume error occurs, clean resume ctx cache\");\n            this.cancelUploadSession();\n        }\n\n        if (!(e instanceof RequestCanceledError)) {\n            this.status = Status.error;\n            this.error = e;\n            this.subscriber.onError(e);\n        }\n    }\n\n    protected cancelUploadSession = (): Promise<void> => {\n        return new Promise<void>((resolve) => {\n            utils.removeResumeCtx(this.task, this.logger);\n            if (this.task.session) {\n                setTimeout(() => {\n                    deleteUploadSession(this.task.session!?.sessionID)\n                        .catch((e) => {\n                            this.logger.warn(\n                                \"Failed to cancel upload session: \",\n                                e\n                            );\n                        })\n                        .finally(() => {\n                            resolve();\n                        });\n                }, deleteUploadSessionDelay);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    protected transit(status: Status) {\n        this.status = status;\n        this.subscriber.onTransition(status);\n    }\n\n    public getProgressInfoItem(\n        loaded: number,\n        size: number,\n        fromCache?: boolean\n    ): ProgressCompose {\n        return {\n            size,\n            loaded,\n            percent: (loaded / size) * 100,\n            ...(fromCache == null ? {} : { fromCache }),\n        };\n    }\n\n    public key(): string {\n        return utils.getResumeCtxKey(this.task);\n    }\n}\n","export type LogLevel = \"INFO\" | \"WARN\" | \"ERROR\" | \"OFF\";\n\nexport default class Logger {\n    constructor(\n        public level: LogLevel = \"OFF\",\n        private prefix = \"UPLOAD\",\n        private id: number = 1\n    ) {}\n\n    private getPrintPrefix(level: LogLevel) {\n        return `Cloudreve-Uploader [${level}][${this.prefix}#${this.id}]:`;\n    }\n\n    info(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.log(this.getPrintPrefix(\"INFO\"), ...args);\n        }\n    }\n\n    warn(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.warn(this.getPrintPrefix(\"WARN\"), ...args);\n        }\n    }\n\n    error(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\", \"ERROR\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.error(this.getPrintPrefix(\"ERROR\"), ...args);\n        }\n    }\n}\n","import {\n    OneDriveChunkResponse,\n    QiniuChunkResponse,\n    QiniuFinishUploadRequest,\n    QiniuPartsInfo,\n    S3Part,\n    UploadCredential,\n    UploadSessionRequest,\n} from \"../types\";\nimport { OBJtoXML, request, requestAPI } from \"../utils\";\nimport {\n    COSUploadCallbackError,\n    COSUploadError,\n    CreateUploadSessionError,\n    DeleteUploadSessionError,\n    HTTPError,\n    LocalChunkUploadError,\n    OneDriveChunkError,\n    OneDriveFinishUploadError,\n    QiniuChunkError,\n    QiniuFinishUploadError,\n    S3LikeChunkError,\n    S3LikeFinishUploadError,\n    S3LikeUploadCallbackError,\n    SlaveChunkUploadError,\n    UpyunUploadError,\n} from \"../errors\";\nimport { ChunkInfo, ChunkProgress } from \"../uploader/chunk\";\nimport { Progress } from \"../uploader/base\";\nimport { CancelToken } from \"axios\";\n\nexport async function createUploadSession(\n    req: UploadSessionRequest,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\"file/upload\", {\n        method: \"put\",\n        data: req,\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new CreateUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function deleteUploadSession(id: string): Promise<any> {\n    const res = await requestAPI<UploadCredential>(`file/upload/${id}`, {\n        method: \"delete\",\n    });\n\n    if (res.data.code != 0) {\n        throw new DeleteUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function localUploadChunk(\n    sessionID: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(\n        `file/upload/${sessionID}/${chunk.index}`,\n        {\n            method: \"post\",\n            headers: { \"content-type\": \"application/octet-stream\" },\n            data: chunk.chunk,\n            onUploadProgress: (progressEvent) => {\n                onProgress({\n                    loaded: progressEvent.loaded,\n                    total: progressEvent.total,\n                });\n            },\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new LocalChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function slaveUploadChunk(\n    url: string,\n    credential: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await request<any>(`${url}?chunk=${chunk.index}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            Authorization: credential,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new SlaveChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function oneDriveUploadChunk(\n    url: string,\n    range: string, // if range is empty, this will be an request to query the session status\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<OneDriveChunkResponse> {\n    const res = await request<OneDriveChunkResponse>(url, {\n        method: range === \"\" ? \"get\" : \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            ...(range !== \"\" && { \"content-range\": range }),\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new OneDriveChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function finishOneDriveUpload(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\n        `callback/onedrive/finish/${sessionID}`,\n        {\n            method: \"post\",\n            data: \"{}\",\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new OneDriveFinishUploadError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function s3LikeUploadChunk(\n    url: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<string> {\n    const res = await request<string>(url, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.headers.etag;\n}\n\nexport async function s3LikeFinishUpload(\n    url: string,\n    isOss: boolean,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    let body = \"\";\n    if (!isOss) {\n        body += \"<CompleteMultipartUpload>\";\n        chunks.forEach((chunk) => {\n            body += \"<Part>\";\n            const part: S3Part = {\n                PartNumber: chunk.index + 1,\n                ETag: chunk.etag!,\n            };\n            body += OBJtoXML(part);\n            body += \"</Part>\";\n        });\n        body += \"</CompleteMultipartUpload>\";\n    }\n\n    const res = await request<any>(url, {\n        method: \"post\",\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n        data: body,\n        headers: isOss\n            ? {\n                  \"content-type\": \"application/octet-stream\",\n                  \"x-oss-forbid-overwrite\": \"true\",\n                  \"x-oss-complete-all\": \"yes\",\n              }\n            : {\n                  \"content-type\": \"application/xhtml+xml\",\n              },\n        validateStatus: function (status) {\n            return status == 200;\n        },\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuDriveUploadChunk(\n    url: string,\n    upToken: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<QiniuChunkResponse> {\n    const res = await request<QiniuChunkResponse>(`${url}/${chunk.index + 1}`, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuFinishUpload(\n    url: string,\n    upToken: string,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    const content: QiniuFinishUploadRequest = {\n        parts: chunks.map(\n            (chunk): QiniuPartsInfo => {\n                return {\n                    etag: chunk.etag!,\n                    partNumber: chunk.index + 1,\n                };\n            }\n        ),\n    };\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/json\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: content,\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    path: string,\n    callback: string,\n    sessionID: string,\n    keyTime: string,\n    credential: string,\n    ak: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"key\", path);\n    bodyFormData.append(\"x-cos-meta-callback\", callback);\n    bodyFormData.append(\"x-cos-meta-key\", sessionID);\n    bodyFormData.append(\"q-sign-algorithm\", \"sha1\");\n    bodyFormData.append(\"q-key-time\", keyTime);\n    bodyFormData.append(\"q-ak\", ak);\n    bodyFormData.append(\"q-signature\", credential);\n    bodyFormData.append(\"name\", file.name);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new COSUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/cos/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new COSUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function upyunFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    credential: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"authorization\", credential);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new UpyunUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function s3LikeUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/s3/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new S3LikeUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n","import { Policy, PolicyType, Task, TaskType } from \"./types\";\nimport Logger, { LogLevel } from \"./logger\";\nimport { UnknownPolicyError, UploaderError, UploaderErrorName } from \"./errors\";\nimport Base from \"./uploader/base\";\nimport Local from \"./uploader/local\";\nimport { Pool } from \"./utils/pool\";\nimport {\n    cleanupResumeCtx,\n    getAllFileEntries,\n    getDirectoryUploadDst,\n    getFileInput,\n    isFileDrop,\n    listResumeCtx,\n} from \"./utils\";\nimport Remote from \"./uploader/remote\";\nimport OneDrive from \"./uploader/onedrive\";\nimport OSS from \"./uploader/oss\";\nimport Qiniu from \"./uploader/qiniu\";\nimport COS from \"./uploader/cos\";\nimport Upyun from \"./uploader/upyun\";\nimport S3 from \"./uploader/s3\";\nimport ResumeHint from \"./uploader/placeholder\";\n\nexport interface Option {\n    logLevel: LogLevel;\n    concurrentLimit: number;\n    dropZone?: HTMLElement;\n    onDropOver?: (e: DragEvent) => void;\n    onDropLeave?: (e: DragEvent) => void;\n    onToast: (type: string, msg: string) => void;\n    onDropFileAdded?: (uploaders: Base[]) => void;\n}\n\nexport enum SelectType {\n    File,\n    Directory,\n}\n\nexport default class UploadManager {\n    public logger: Logger;\n    public pool: Pool;\n    private static id = 0;\n    private policy?: Policy;\n    private fileInput: HTMLInputElement;\n    private directoryInput: HTMLInputElement;\n    private id = ++UploadManager.id;\n    // used for proactive upload (drop, paste)\n    private currentPath = \"/\";\n\n    constructor(private o: Option) {\n        this.logger = new Logger(o.logLevel, \"MANAGER\");\n        this.logger.info(`Initialized with log level: ${o.logLevel}`);\n\n        this.pool = new Pool(o.concurrentLimit);\n        this.fileInput = getFileInput(this.id, false);\n        this.directoryInput = getFileInput(this.id, true);\n\n        if (o.dropZone) {\n            this.logger.info(`Drag and drop container set to:`, o.dropZone);\n            o.dropZone.addEventListener(\"dragenter\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropOver) {\n                        o.onDropOver(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"dragleave\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropLeave) {\n                        o.onDropLeave(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"drop\", this.onFileDroppedIn);\n        }\n    }\n\n    changeConcurrentLimit = (newLimit: number) => {\n        this.pool.limit = newLimit;\n    };\n\n    dispatchUploader(task: Task): Base {\n        if (task.type == TaskType.resumeHint) {\n            return new ResumeHint(task, this);\n        }\n\n        switch (task.policy.type) {\n            case PolicyType.local:\n                return new Local(task, this);\n            case PolicyType.remote:\n                return new Remote(task, this);\n            case PolicyType.onedrive:\n                return new OneDrive(task, this);\n            case PolicyType.oss:\n                return new OSS(task, this);\n            case PolicyType.qiniu:\n                return new Qiniu(task, this);\n            case PolicyType.cos:\n                return new COS(task, this);\n            case PolicyType.upyun:\n                return new Upyun(task, this);\n            case PolicyType.s3:\n                return new S3(task, this);\n            default:\n                throw new UnknownPolicyError(\n                    \"Unknown policy type.\",\n                    task.policy\n                );\n        }\n    }\n\n    // 设定当前存储策略\n    public setPolicy(p: Policy, path: string) {\n        this.policy = p;\n        this.currentPath = path;\n        if (p == undefined) {\n            this.logger.info(`Currently no policy selected`);\n            return;\n        }\n\n        this.logger.info(`Switching policy to:`, p);\n\n        if (p.allowedSuffix != undefined && p.allowedSuffix.length > 0) {\n            const acceptVal = p.allowedSuffix\n                .map((v) => {\n                    return \".\" + v;\n                })\n                .join(\",\");\n            this.logger.info(`Set allowed file suffix to ${acceptVal}`);\n            this.fileInput.setAttribute(\"accept\", acceptVal);\n        } else {\n            this.logger.info(`Set allowed file suffix to *`);\n            this.fileInput.removeAttribute(\"accept\");\n        }\n    }\n\n    // 选择文件\n    public select = (dst: string, type = SelectType.File): Promise<Base[]> => {\n        return new Promise<Base[]>((resolve) => {\n            if (this.policy == undefined) {\n                this.logger.warn(\n                    `Calling file selector while no policy is set`\n                );\n                throw new UploaderError(\n                    UploaderErrorName.NoPolicySelected,\n                    \"No policy selected.\"\n                );\n            }\n\n            this.fileInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.directoryInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.fileInput.value = \"\";\n            this.directoryInput.value = \"\";\n            type == SelectType.File\n                ? this.fileInput.click()\n                : this.directoryInput.click();\n        });\n    };\n\n    public resumeTasks = (): Base[] => {\n        const tasks = listResumeCtx(this.logger);\n        if (tasks.length > 0) {\n            this.logger.info(\n                `Resumed ${tasks.length} unfinished task(s) from local storage:`,\n                tasks\n            );\n        }\n        return tasks\n            .filter(\n                (t) =>\n                    t.chunkProgress.length > 0 && t.chunkProgress[0].loaded > 0\n            )\n            .map((t) =>\n                this.dispatchUploader({ ...t, type: TaskType.resumeHint })\n            );\n    };\n\n    public cleanupSessions = () => {\n        cleanupResumeCtx(this.logger);\n    };\n\n    private fileSelectCallback = (\n        ev: Event | File[],\n        dst: string,\n        resolve: (value?: Base[] | PromiseLike<Base[]> | undefined) => void\n    ) => {\n        let files: File[] = [];\n        if (ev instanceof Event) {\n            const target = ev.target as HTMLInputElement;\n            if (!ev || !target || !target.files) return;\n            if (target.files.length > 0) {\n                files = Array.from(target.files);\n            }\n        } else {\n            files = ev as File[];\n        }\n\n        if (files.length > 0) {\n            resolve(\n                files.map(\n                    (file): Base =>\n                        this.dispatchUploader({\n                            type: TaskType.file,\n                            policy: this.policy as Policy,\n                            dst: getDirectoryUploadDst(dst, file),\n                            file: file,\n                            size: file.size,\n                            name: file.name,\n                            chunkProgress: [],\n                            resumed: false,\n                        })\n                )\n            );\n        }\n    };\n\n    private onFileDroppedIn = async (e: DragEvent) => {\n        const containFile =\n            e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n        if (containFile) {\n            this.o.onDropLeave && this.o.onDropLeave(e);\n            const items = await getAllFileEntries(e.dataTransfer!.items);\n            console.log(items);\n            const uploaders = await new Promise<Base[]>((resolve) =>\n                this.fileSelectCallback(items, this.currentPath, resolve)\n            );\n            this.o.onDropFileAdded && this.o.onDropFileAdded(uploaders);\n        }\n    };\n}\n","import Base, { Status, UploadProgress } from \"./base\";\nimport * as utils from \"../utils\";\nimport { Task, TaskType } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\n\nexport interface ChunkProgress {\n    loaded: number;\n    index: number;\n    etag?: string;\n}\n\nexport interface ChunkInfo {\n    chunk: Blob;\n    index: number;\n}\n\nexport default abstract class Chunk extends Base {\n    protected chunks: Blob[];\n\n    public upload = async () => {\n        this.logger.info(\"Preparing uploading file chunks.\");\n        this.initBeforeUploadChunks();\n\n        this.logger.info(\"Starting uploading file chunks:\", this.chunks);\n        this.updateLocalCache();\n        for (let i = 0; i < this.chunks.length; i++) {\n            if (\n                this.task.chunkProgress[i].loaded < this.chunks[i].size ||\n                this.chunks[i].size == 0\n            ) {\n                await this.uploadChunk({ chunk: this.chunks[i], index: i });\n                this.logger.info(`Chunk [${i}] uploaded.`);\n                this.updateLocalCache();\n            }\n        }\n    };\n\n    private initBeforeUploadChunks() {\n        this.chunks = utils.getChunks(\n            this.task.file,\n            this.task.session?.chunkSize\n        );\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.chunkProgress = this.chunks.map(\n                (value, index): ChunkProgress => ({\n                    loaded: 0,\n                    index,\n                })\n            );\n        }\n\n        this.notifyResumeProgress();\n    }\n\n    protected abstract async uploadChunk(chunkInfo: ChunkInfo): Promise<any>;\n\n    protected updateChunkProgress(loaded: number, index: number) {\n        this.task.chunkProgress[index].loaded = loaded;\n        this.notifyResumeProgress();\n    }\n\n    private notifyResumeProgress() {\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.file.size + 1\n            ),\n            chunks: this.chunks.map((chunk, index) => {\n                return this.getProgressInfoItem(\n                    this.task.chunkProgress[index].loaded,\n                    chunk.size,\n                    false\n                );\n            }),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    private updateLocalCache() {\n        utils.setResumeCtx(this.task, this.logger);\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { localUploadChunk } from \"../api\";\n\nexport default class Local extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return localUploadChunk(\n            this.task.session?.sessionID!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { slaveUploadChunk } from \"../api\";\n\nexport default class Remote extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return slaveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { finishOneDriveUpload, oneDriveUploadChunk } from \"../api\";\nimport { OneDriveChunkError, OneDriveEmptyFileSelected } from \"../errors\";\nimport { Status } from \"./base\";\n\nexport default class OneDrive extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        if (chunkInfo.chunk.size === 0) {\n            throw new OneDriveEmptyFileSelected();\n        }\n\n        const rangeEnd = this.progress.total.loaded + chunkInfo.chunk.size - 1;\n        return this.sendRange(\n            chunkInfo,\n            this.progress.total.loaded,\n            rangeEnd,\n            0\n        ).catch((e) => {\n            if (\n                e instanceof OneDriveChunkError &&\n                e.response.error.innererror &&\n                e.response.error.innererror.code == \"fragmentOverlap\"\n            ) {\n                return this.alignChunkOffset(chunkInfo);\n            }\n\n            throw e;\n        });\n    }\n\n    private async sendRange(\n        chunkInfo: ChunkInfo,\n        start: number,\n        end: number,\n        chunkOffset: number\n    ) {\n        const range = `bytes ${start}-${end}/${this.task.file.size}`;\n        return oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            range,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(\n                    chunkOffset + p.loaded,\n                    chunkInfo.index\n                );\n            },\n            this.cancelToken.token\n        );\n    }\n\n    private async alignChunkOffset(chunkInfo: ChunkInfo) {\n        this.logger.info(\n            `Chunk [${chunkInfo.index}] overlapped, checking next expected range...`\n        );\n        const rangeStatus = await oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            \"\",\n            chunkInfo,\n            (p) => {\n                return null;\n            },\n            this.cancelToken.token\n        );\n        const expectedStart = parseInt(\n            rangeStatus.nextExpectedRanges[0].split(\"-\")[0]\n        );\n        this.logger.info(\n            `Next expected range start from OneDrive is ${expectedStart}.`\n        );\n\n        if (expectedStart >= this.progress.total.loaded) {\n            this.logger.info(`This whole chunk is overlapped, skipping...`);\n            this.updateChunkProgress(chunkInfo.chunk.size, chunkInfo.index);\n            return;\n        } else {\n            this.updateChunkProgress(0, chunkInfo.index);\n            const rangeEnd =\n                this.progress.total.loaded + chunkInfo.chunk.size - 1;\n            const newChunkOffset = expectedStart - this.progress.total.loaded;\n            chunkInfo.chunk = chunkInfo.chunk.slice(newChunkOffset);\n            this.updateChunkProgress(newChunkOffset, chunkInfo.index);\n            return this.sendRange(\n                chunkInfo,\n                expectedStart,\n                rangeEnd,\n                newChunkOffset\n            );\n        }\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing upload...`);\n        this.transit(Status.finishing);\n        return finishOneDriveUpload(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { s3LikeFinishUpload, s3LikeUploadChunk } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            true,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class Qiniu extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const chunkRes = await qiniuDriveUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = chunkRes.etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return qiniuFinishUpload(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Base, { Status } from \"./base\";\nimport { cosFormUploadChunk, cosUploadCallback } from \"../api\";\n\nexport default class COS extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await cosFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.path!,\n            this.task.session?.callback!,\n            this.task.session?.sessionID!,\n            this.task.session?.keyTime!,\n            this.task.session?.credential!,\n            this.task.session?.ak!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n\n    protected async afterUpload(): Promise<any> {\n        this.transit(Status.finishing);\n        this.logger.info(`Sending COS upload callback...`);\n        try {\n            await cosUploadCallback(\n                this.task.session!.sessionID,\n                this.cancelToken.token\n            );\n        } catch (e) {\n            this.logger.warn(`Failed to finish COS upload:`, e);\n        }\n    }\n}\n","import Base from \"./base\";\nimport { upyunFormUploadChunk } from \"../api\";\n\nexport default class Upyun extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await upyunFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.credential!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport {\n    s3LikeFinishUpload,\n    s3LikeUploadCallback,\n    s3LikeUploadChunk,\n} from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const etag = await s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        await s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            false,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n\n        this.logger.info(`Sending S3-like upload callback...`);\n        return s3LikeUploadCallback(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\nimport { Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport * as utils from \"../utils\";\n\nexport default class ResumeHint extends Chunk {\n    constructor(task: Task, manager: UploadManager) {\n        super(task, manager);\n        this.status = Status.resumable;\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.size + 1\n            ),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return null;\n    }\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Badge, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FilePlus, FolderUpload } from \"mdi-material-ui\";\nimport { green } from \"@material-ui/core/colors\";\nimport { SelectType } from \"../Uploader/core\";\nimport {\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            whiteSpace: \"nowrap\",\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        bottom: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function UploadButton(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n    const path = useSelector((state) => state.navigator.path);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch],\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                props.selectFile(path);\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const circularProgress = useMemo(() => {\n        if (props.progress.totalSize > 0) {\n            return (\n                <CircularProgress\n                    key={1}\n                    size={68}\n                    variant=\"determinate\"\n                    value={\n                        (props.progress.processedSize /\n                            props.progress.totalSize) *\n                        100\n                    }\n                    className={classes.fabProgress}\n                />\n            );\n        }\n    }, [classes, props.progress]);\n\n    return (\n        <AutoHidden enable hide={props.taskListOpen}>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge, // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    hidden={false}\n                    tooltipTitle={t(\"uploadFiles\")}\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\",\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                    ariaLabel={\"\"}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle={t(\"uploadFiles\")}\n                            onClick={() => uploadClicked()}\n                            title={t(\"uploadFiles\")}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle={t(\"uploadFolder\")}\n                            onClick={() =>\n                                props.selectFile(path, SelectType.Directory)\n                            }\n                            title={t(\"uploadFolder\")}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle={t(\"newFolder\")}\n                        onClick={() => OpenNewFolderDialog()}\n                        title={t(\"newFolder\")}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle={t(\"newFile\")}\n                        onClick={() => OpenNewFileDialog()}\n                        title={t(\"newFile\")}\n                    />\n                </SpeedDial>\n                {circularProgress}\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport TimeAgo from \"timeago-react\";\nimport { Status } from \"../core/uploader/base\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        wordBreak: \"break-all\",\n    },\n}));\n\nexport default function TaskDetail({ uploader, navigateToDst, error }) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const items = [\n        {\n            name: t(\"uploader.fileName\"),\n            value: uploader.task.name,\n        },\n        {\n            name: t(\"uploader.fileSize\"),\n            value: `${sizeToString(uploader.task.size)} ${\n                uploader.task.session && uploader.task.session.chunkSize > 0\n                    ? t(\"uploader.chunkDescription\", {\n                          total: uploader.task.chunkProgress.length,\n                          size: sizeToString(uploader.task.session.chunkSize),\n                      })\n                    : t(\"uploader.noChunks\")\n            }`,\n        },\n        {\n            name: t(\"fileManager.storagePolicy\"),\n            value: uploader.task.policy.name,\n        },\n        {\n            name: t(\"uploader.destination\"),\n            value: (\n                <Link\n                    href={\"javascript:void\"}\n                    onClick={() => navigateToDst(uploader.task.dst)}\n                >\n                    {uploader.task.dst === \"/\"\n                        ? t(\"uploader.rootFolder\")\n                        : uploader.task.dst}\n                </Link>\n            ),\n        },\n        uploader.task.session\n            ? {\n                  name: t(\"uploader.uploadSession\"),\n                  value: (\n                      <>\n                          <Trans\n                              i18nKey=\"uploader.sessionExpiredIn\"\n                              components={[\n                                  <TimeAgo\n                                      key={0}\n                                      datetime={\n                                          uploader.task.session\n                                              ? uploader.task.session.expires *\n                                                1000\n                                              : 0\n                                      }\n                                      locale={t(\"timeAgoLocaleCode\", {\n                                          ns: \"common\",\n                                      })}\n                                  />,\n                              ]}\n                          />\n                      </>\n                  ),\n              }\n            : null,\n        uploader.status === Status.error\n            ? {\n                  name: t(\"uploader.errorDetails\"),\n                  value: error,\n              }\n            : null,\n    ];\n    return (\n        <Grid container>\n            {items.map((i) => (\n                <>\n                    {i && (\n                        <Grid key={i.name} container xs={12}>\n                            <Grid item xs={3} className={classes.infoTitle}>\n                                {i.name}\n                            </Grid>\n                            <Grid item xs={9} className={classes.infoValue}>\n                                {i.value}\n                            </Grid>\n                        </Grid>\n                    )}\n                </>\n            ))}\n        </Grid>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n    Divider,\n    Grow,\n    IconButton,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Tooltip,\n} from \"@material-ui/core\";\nimport TypeIcon from \"../../FileManager/TypeIcon\";\nimport { useUpload } from \"../UseUpload\";\nimport { Status } from \"../core/uploader/base\";\nimport { UploaderError } from \"../core/errors\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport TaskDetail from \"./TaskDetail\";\nimport { SelectType } from \"../core\";\nimport { navigateTo } from \"../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9,\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n    progressContainer: {\n        position: \"relative\",\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    wordBreak: {\n        wordBreak: \"break-all\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    successStatus: {\n        color: theme.palette.success.main,\n    },\n    errorStatus: {\n        color: theme.palette.warning.main,\n        wordBreak: \"break-all\",\n        [theme.breakpoints.up(\"sm\")]: {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n        },\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    delete: {\n        zIndex: 9,\n    },\n    dstLink: {\n        color: theme.palette.success.main,\n        fontWeight: 600,\n    },\n    fileNameContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n        display: \"block\",\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        paddingLeft: 16,\n        paddingRight: 16,\n        paddingTop: 8,\n        paddingBottom: 8,\n        display: \"block\",\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nconst getSpeedText = (speed, speedAvg, useSpeedAvg) => {\n    let displayedSpeed = speedAvg;\n    if (!useSpeedAvg) {\n        displayedSpeed = speed;\n    }\n\n    return `${sizeToString(displayedSpeed ? displayedSpeed : 0)} /s`;\n};\n\nconst getErrMsg = (error) => {\n    let errMsg = error.message;\n    if (error instanceof UploaderError) {\n        errMsg = error.Message(\"\");\n    }\n\n    return errMsg;\n};\n\nexport default function UploadTask({\n    uploader,\n    useAvgSpeed,\n    onCancel,\n    onClose,\n    selectFile,\n    onRefresh,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const [taskHover, setTaskHover] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const { status, error, progress, speed, speedAvg, retry } =\n        useUpload(uploader);\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const navigateToDst = (path) => {\n        onClose(null, \"backdropClick\");\n        NavigateTo(path);\n    };\n\n    const toggleDetail = (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    useEffect(() => {\n        if (status >= Status.finished) {\n            onRefresh();\n        }\n    }, [status]);\n\n    const statusText = useMemo(() => {\n        const parent = filename(uploader.task.dst);\n        switch (status) {\n            case Status.added:\n            case Status.initialized:\n            case Status.queued:\n                return <div>{t(\"pendingInQueue\")}</div>;\n            case Status.preparing:\n                return <div>{t(\"preparing\")}</div>;\n            case Status.error:\n                return (\n                    <div className={classes.errorStatus}>\n                        {getErrMsg(error)}\n                        <br />\n                    </div>\n                );\n            case Status.finishing:\n                return <div>{t(\"processing\")}</div>;\n            case Status.resumable:\n                return (\n                    <div>\n                        {t(\"progressDescription\", {\n                            uploaded: sizeToString(progress.total.loaded),\n                            total: sizeToString(progress.total.size),\n                            percentage: progress.total.percent.toFixed(2),\n                        })}\n                    </div>\n                );\n            case Status.processing:\n                if (progress) {\n                    return (\n                        <div>\n                            {t(\"progressDescriptionFull\", {\n                                speed: getSpeedText(\n                                    speed,\n                                    speedAvg,\n                                    useAvgSpeed,\n                                ),\n                                uploaded: sizeToString(progress.total.loaded),\n                                total: sizeToString(progress.total.size),\n                                percentage: progress.total.percent.toFixed(2),\n                            })}\n                        </div>\n                    );\n                }\n                return <div>{t(\"progressDescriptionPlaceHolder\")}</div>;\n            case Status.finished:\n                return (\n                    <div className={classes.successStatus}>\n                        {t(\"uploadedTo\")}\n                        <Tooltip title={uploader.task.dst}>\n                            <Link\n                                className={classes.dstLink}\n                                href={\"javascript:void\"}\n                                onClick={() => navigateToDst(uploader.task.dst)}\n                            >\n                                {parent === \"\" ? t(\"rootFolder\") : parent}\n                            </Link>\n                        </Tooltip>\n                        <br />\n                    </div>\n                );\n            default:\n                return <div>{t(\"unknownStatus\")}</div>;\n        }\n    }, [status, error, progress, speed, speedAvg, useAvgSpeed]);\n\n    const resumeLabel = useMemo(\n        () =>\n            uploader.task.resumed && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label={t(\"resumed\")}\n                />\n            ) : null,\n        [status, fullScreen],\n    );\n\n    const continueLabel = useMemo(\n        () =>\n            status === Status.resumable && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    color={\"secondary\"}\n                    label={t(\"resumable\")}\n                />\n            ) : null,\n        [status, fullScreen],\n    );\n\n    const progressBar = useMemo(\n        () =>\n            (status === Status.processing ||\n                status === Status.finishing ||\n                status === Status.resumable) &&\n            progress ? (\n                <div\n                    style={{\n                        backgroundColor:\n                            theme.palette.type === \"light\"\n                                ? lighten(theme.palette.primary.main, 0.8)\n                                : darken(theme.palette.background.paper, 0.2),\n                        width: progress.total.percent + \"%\",\n                    }}\n                    className={classes.progress}\n                />\n            ) : null,\n        [status, progress, theme],\n    );\n\n    const taskDetail = useMemo(() => {\n        return (\n            <TaskDetail\n                error={error && getErrMsg(error)}\n                navigateToDst={navigateToDst}\n                uploader={uploader}\n            />\n        );\n    }, [uploader, expanded]);\n\n    const cancel = () => {\n        setLoading(true);\n        uploader.cancel().then(() => {\n            setLoading(false);\n            onCancel((u) => u.id != uploader.id);\n        });\n    };\n\n    const stopRipple = (e) => {\n        e.stopPropagation();\n    };\n\n    const secondaryAction = useMemo(() => {\n        if (!taskHover && !fullScreen) {\n            return <></>;\n        }\n\n        const actions = [\n            {\n                show: status === Status.error,\n                title: t(\"retry\"),\n                click: retry,\n                icon: <RefreshIcon />,\n                loading: false,\n            },\n            {\n                show: true,\n                title:\n                    status === Status.finished\n                        ? t(\"deleteTask\")\n                        : t(\"cancelAndDelete\"),\n                click: cancel,\n                icon: <DeleteIcon />,\n                loading: loading,\n            },\n            {\n                show: status === Status.resumable,\n                title: t(\"selectAndResume\"),\n                click: () =>\n                    selectFile(uploader.task.dst, SelectType.File, uploader),\n                icon: <PlayArrow />,\n                loading: false,\n            },\n        ];\n\n        return (\n            <>\n                {actions.map((a) => (\n                    <>\n                        {a.show && (\n                            <Grow in={a.show}>\n                                <Tooltip title={a.title}>\n                                    <IconButton\n                                        onMouseDown={stopRipple}\n                                        onTouchStart={stopRipple}\n                                        disabled={a.loading}\n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            a.click();\n                                        }}\n                                    >\n                                        {a.icon}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grow>\n                        )}\n                    </>\n                ))}\n            </>\n        );\n    }, [status, loading, taskHover, fullScreen, uploader]);\n\n    const fileIcon = useMemo(() => {\n        if (!fullScreen) {\n            return <TypeIcon fileName={uploader.task.name} isUpload />;\n        }\n    }, [uploader, fullScreen]);\n\n    return (\n        <>\n            <ExpansionPanel square expanded={expanded} onChange={toggleDetail}>\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div\n                        className={classes.progressContainer}\n                        onMouseLeave={() => setTaskHover(false)}\n                        onMouseOver={() => setTaskHover(true)}\n                    >\n                        {progressBar}\n                        <ListItem className={classes.progressContent} button>\n                            {fileIcon}\n                            <ListItemText\n                                className={classes.listAction}\n                                primary={\n                                    <div className={classes.fileNameContainer}>\n                                        <div className={classes.wordBreak}>\n                                            {uploader.task.name}\n                                        </div>\n                                        <div>{resumeLabel}</div>\n                                        <div>{continueLabel}</div>\n                                    </div>\n                                }\n                                secondary={\n                                    <div className={classes.wordBreak}>\n                                        {statusText}\n                                    </div>\n                                }\n                            />\n                            {secondaryAction}\n                        </ListItem>\n                    </div>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>{taskDetail}</ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Divider />\n        </>\n    );\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nexport function useUpload(uploader) {\n    const startLoadedRef = useRef(0);\n    const [status, setStatus] = useState(uploader.status);\n    const [error, setError] = useState(uploader.error);\n    const [progress, setProgress] = useState(uploader.progress);\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        /* eslint-disable @typescript-eslint/no-empty-function */\n        uploader.subscribe({\n            onTransition: (newStatus) => {\n                setStatus(newStatus);\n            },\n            onError: (err) => {\n                setError(err);\n                setStatus(uploader.status);\n            },\n            onProgress: (data) => {\n                setProgress(data);\n            },\n            onMsg: (msg, color) => {\n                ToggleSnackbar(\"top\", \"right\", msg, color);\n            },\n        });\n    }, []);\n\n    // 获取上传速度\n    const [speed, speedAvg] = React.useMemo(() => {\n        if (\n            progress == null ||\n            progress.total == null ||\n            progress.total.loaded == null\n        )\n            return [0, 0];\n        const duration = (Date.now() - (uploader.lastTime || 0)) / 1000;\n        const durationTotal = (Date.now() - (uploader.startTime || 0)) / 1000;\n        const res =\n            progress.total.loaded > startLoadedRef.current\n                ? Math.floor(\n                      (progress.total.loaded - startLoadedRef.current) /\n                          duration,\n                  )\n                : 0;\n        const resAvg =\n            progress.total.loaded > 0\n                ? Math.floor(progress.total.loaded / durationTotal)\n                : 0;\n\n        startLoadedRef.current = progress.total.loaded;\n        uploader.lastTime = Date.now();\n        return [res, resAvg];\n    }, [progress]);\n\n    const retry = () => {\n        uploader.reset();\n        uploader.start();\n    };\n\n    return { status, error, progress, speed, speedAvg, retry };\n}\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Input,\n    InputLabel,\n    makeStyles,\n} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function ConcurrentOptionDialog({ open, onClose, onSave }) {\n    const { t } = useTranslation();\n    const [count, setCount] = useState(\n        Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\"),\n    );\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            fullWidth\n            maxWidth={\"xs\"}\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"uploader.setConcurrent\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel htmlFor=\"component-helper\">\n                        {t(\"uploader.concurrentTaskNumber\")}\n                    </InputLabel>\n                    <Input\n                        type={\"number\"}\n                        inputProps={{\n                            min: 1,\n                            step: 1,\n                            max: 20,\n                        }}\n                        value={count}\n                        onChange={(e) => setCount(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={count === \"\"}\n                        onClick={() => onSave(count)}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n    Tooltip,\n} from \"@material-ui/core\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../../middleware/Api\";\nimport { TaskType } from \"../core/types\";\nimport { refreshStorage, toggleSnackbar } from \"../../../redux/explorer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { DeleteEmpty } from \"mdi-material-ui\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ConcurrentOptionDialog from \"../../Modals/ConcurrentOption\";\nimport Auth from \"../../../middleware/Auth\";\nimport { ClearAll, Replay } from \"@material-ui/icons\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function MoreActions({\n    anchorEl,\n    onClose,\n    uploadManager,\n    deleteTask,\n    useAvgSpeed,\n    setUseAvgSpeed,\n    filter,\n    setFilter,\n    sorter,\n    setSorter,\n    cleanFinished,\n    retryFailed,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [concurrentDialog, setConcurrentDialog] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const RefreshStorage = useCallback(\n        () => dispatch(refreshStorage()),\n        [dispatch],\n    );\n\n    const actionClicked = (next) => () => {\n        onClose();\n        next();\n    };\n\n    const cleanupSessions = () => {\n        uploadManager.cleanupSessions();\n        API.delete(\"/file/upload\")\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"uploadSessionCleaned\"),\n                        \"success\",\n                    );\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\",\n                    );\n                }\n                deleteTask((u) => u.task.type !== TaskType.resumeHint);\n                RefreshStorage();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"uploader-action-popover\" : undefined;\n\n    const listItems = useMemo(\n        () => [\n            {\n                tooltip: t(\"hideCompletedTooltip\"),\n                onClick: () =>\n                    setFilter(filter === \"default\" ? \"ongoing\" : \"default\"),\n                icon: filter !== \"default\" ? <CheckIcon /> : <Icon />,\n                text: t(\"hideCompleted\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"addTimeAscTooltip\"),\n                onClick: () => setSorter(\"default\"),\n                icon: sorter === \"default\" ? <CheckIcon /> : <Icon />,\n                text: t(\"addTimeAsc\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"addTimeDescTooltip\"),\n                onClick: () => setSorter(\"reverse\"),\n                icon: sorter === \"reverse\" ? <CheckIcon /> : <Icon />,\n                text: t(\"addTimeDesc\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"showInstantSpeedTooltip\"),\n                onClick: () => setUseAvgSpeed(false),\n                icon: useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: t(\"showInstantSpeed\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"showAvgSpeedTooltip\"),\n                onClick: () => setUseAvgSpeed(true),\n                icon: !useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: t(\"showAvgSpeed\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"cleanAllSessionTooltip\"),\n                onClick: () => cleanupSessions(),\n                icon: <DeleteEmpty />,\n                text: t(\"cleanAllSession\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"cleanCompletedTooltip\"),\n                onClick: () => cleanFinished(),\n                icon: <DeleteIcon />,\n                text: t(\"cleanCompleted\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"retryFailedTasksTooltip\"),\n                onClick: () => retryFailed(),\n                icon: <Replay />,\n                text: t(\"retryFailedTasks\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"setConcurrentTooltip\"),\n                onClick: () => setConcurrentDialog(true),\n                icon: <ClearAll />,\n                text: t(\"setConcurrent\"),\n                divider: false,\n            },\n        ],\n        [\n            useAvgSpeed,\n            setUseAvgSpeed,\n            sorter,\n            setSorter,\n            filter,\n            setFilter,\n            cleanFinished,\n        ],\n    );\n\n    const onConcurrentLimitSave = (val) => {\n        val = parseInt(val);\n        if (val > 0) {\n            Auth.SetPreference(\"concurrent_limit\", val);\n            uploadManager.changeConcurrentLimit(parseInt(val));\n        }\n        setConcurrentDialog(false);\n    };\n\n    return (\n        <>\n            <Menu id={id} open={open} anchorEl={anchorEl} onClose={onClose}>\n                {listItems.map((item) => (\n                    <>\n                        <Tooltip\n                            enterNextDelay={500}\n                            key={item.text}\n                            title={item.tooltip}\n                        >\n                            <MenuItem\n                                dense\n                                onClick={actionClicked(item.onClick)}\n                            >\n                                <ListItemIcon className={classes.icon}>\n                                    {item.icon}\n                                </ListItemIcon>\n                                {item.text}\n                            </MenuItem>\n                        </Tooltip>\n                        {item.divider && <Divider />}\n                    </>\n                ))}\n            </Menu>\n            <ConcurrentOptionDialog\n                open={concurrentDialog}\n                onClose={() => setConcurrentDialog(false)}\n                onSave={onConcurrentLimitSave}\n            />\n        </>\n    );\n}\n","import React, { useMemo, useState } from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AppBar,\n    Dialog,\n    DialogContent,\n    Fade,\n    IconButton,\n    makeStyles,\n    Slide,\n    Toolbar,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandLess\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classnames from \"classnames\";\nimport UploadTask from \"./UploadTask\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport MoreActions from \"./MoreActions\";\nimport { useSelector } from \"react-redux\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport Nothing from \"../../Placeholder/Nothing\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { Status } from \"../core/uploader/base\";\nimport Auth from \"../../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUpload } from \"../UseUpload\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    rootOverwrite: {\n        top: \"auto!important\",\n        left: \"auto!important\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n    popup: {\n        alignItems: \"flex-end\",\n        justifyContent: \"flex-end\",\n    },\n    dialog: {\n        margin: 0,\n        right: 10,\n        bottom: 10,\n        zIndex: 9999,\n        position: \"fixed\",\n        inset: \"-1!important\",\n    },\n    paddingZero: {\n        padding: 0,\n    },\n    dialogContent: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: 500,\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n        padding: 0,\n        paddingTop: \"0!important\",\n    },\n    virtualList: {\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 56px)\",\n        [theme.breakpoints.up(\"md\")]: {\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n    },\n    expandIcon: {\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandIconExpanded: {\n        transform: \"rotate(180deg)\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: -1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n}));\n\nconst sorters = {\n    default: (a, b) => a.id - b.id,\n    reverse: (a, b) => b.id - a.id,\n};\n\nconst filters = {\n    default: (u) => true,\n    ongoing: (u) => u.status < Status.finished,\n};\n\nexport default function TaskList({\n    open,\n    onClose,\n    selectFile,\n    taskList,\n    onCancel,\n    uploadManager,\n    progress,\n    setUploaders,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const path = useSelector((state) => state.navigator.path);\n    const [expanded, setExpanded] = useState(true);\n    const [useAvgSpeed, setUseAvgSpeed] = useState(\n        Auth.GetPreferenceWithDefault(\"use_avg_speed\", true),\n    );\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [filter, setFilter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_filter\", \"default\"),\n    );\n    const [sorter, setSorter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_sorter\", \"default\"),\n    );\n    const [refreshList, setRefreshList] = useState(false);\n\n    const handleActionClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleActionClose = () => {\n        setAnchorEl(null);\n    };\n\n    const close = (e, reason) => {\n        if (reason !== \"backdropClick\") {\n            onClose();\n        } else {\n            setExpanded(false);\n        }\n    };\n    const handlePanelChange = (event, isExpanded) => {\n        setExpanded(isExpanded);\n    };\n\n    useMemo(() => {\n        if (open) {\n            setExpanded(true);\n        }\n    }, [taskList]);\n\n    const progressBar = useMemo(\n        () =>\n            progress.totalSize > 0 ? (\n                <Fade in={progress.totalSize > 0 && !expanded}>\n                    <div>\n                        <div\n                            style={{\n                                backgroundColor:\n                                    theme.palette.type === \"light\"\n                                        ? lighten(\n                                              theme.palette.primary.main,\n                                              0.2,\n                                          )\n                                        : lighten(\n                                              theme.palette.primary.main,\n                                              0.2,\n                                          ),\n                                width:\n                                    (progress.processedSize /\n                                        progress.totalSize) *\n                                        100 +\n                                    \"%\",\n                            }}\n                            className={classes.progress}\n                        />\n                    </div>\n                </Fade>\n            ) : null,\n        [progress, expanded, classes, theme],\n    );\n\n    const list = useMemo(() => {\n        const currentList = taskList\n            .filter(filters[filter])\n            .sort(sorters[sorter]);\n        if (currentList.length === 0) {\n            return <Nothing size={0.5} top={63} primary={t(\"taskListEmpty\")} />;\n        }\n\n        return (\n            <Virtuoso\n                style={{\n                    height: (fullScreen ? 500 : 73) * currentList.length,\n                }}\n                className={classes.virtualList}\n                increaseViewportBy={180}\n                data={currentList}\n                itemContent={(index, uploader) => (\n                    <UploadTask\n                        selectFile={selectFile}\n                        onClose={close}\n                        onCancel={onCancel}\n                        key={uploader.id}\n                        useAvgSpeed={useAvgSpeed}\n                        uploader={uploader}\n                        filter={filters[filter]}\n                        onRefresh={() => setRefreshList((r) => !r)}\n                    />\n                )}\n            />\n        );\n    }, [\n        classes,\n        taskList,\n        useAvgSpeed,\n        fullScreen,\n        filter,\n        sorter,\n        refreshList,\n    ]);\n\n    const retryFailed = () => {\n        taskList.forEach((task) => {\n            if (task.status === Status.error) {\n                task.reset();\n                task.start();\n            }\n        });\n    };\n\n    return (\n        <>\n            <MoreActions\n                deleteTask={onCancel}\n                onClose={handleActionClose}\n                uploadManager={uploadManager}\n                anchorEl={anchorEl}\n                useAvgSpeed={useAvgSpeed}\n                setUseAvgSpeed={(v) => {\n                    Auth.SetPreference(\"use_avg_speed\", v);\n                    setUseAvgSpeed(v);\n                }}\n                filter={filter}\n                sorter={sorter}\n                setFilter={(v) => {\n                    Auth.SetPreference(\"task_filter\", v);\n                    setFilter(v);\n                }}\n                setSorter={(v) => {\n                    Auth.SetPreference(\"task_sorter\", v);\n                    setSorter(v);\n                }}\n                retryFailed={retryFailed}\n                cleanFinished={() =>\n                    setUploaders((u) => u.filter(filters[\"ongoing\"]))\n                }\n            />\n            <Dialog\n                classes={{\n                    container: classes.popup, // class name, e.g. `classes-nesting-root-x`\n                    root: classnames({\n                        [classes.rootOverwrite]: !fullScreen,\n                    }),\n                }}\n                className={classnames({\n                    [classes.dialog]: !fullScreen,\n                })}\n                fullScreen={fullScreen}\n                open={open}\n                onClose={close}\n                TransitionComponent={Transition}\n                disableEnforceFocus={!expanded}\n                hideBackdrop={!expanded}\n                disableBackdropClick={!expanded}\n                disableScrollLock={!expanded}\n            >\n                <Accordion\n                    expanded={expanded || fullScreen}\n                    onChange={handlePanelChange}\n                >\n                    <AppBar className={classes.appBar}>\n                        {progressBar}\n                        <Toolbar disableGutters className={classes.toolbar}>\n                            <Tooltip title={t(\"hideTaskList\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={close}\n                                    aria-label=\"Close\"\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                className={classes.flex}\n                            >\n                                {t(\"uploadTasks\")}\n                            </Typography>\n                            <Tooltip title={t(\"moreActions\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={handleActionClick}\n                                >\n                                    <MoreHoriz />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title={t(\"addNewFiles\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={() => selectFile(path)}\n                                >\n                                    <AddIcon />\n                                </IconButton>\n                            </Tooltip>\n                            {!fullScreen && (\n                                <Tooltip title={t(\"toggleTaskList\")}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        onClick={() => setExpanded(!expanded)}\n                                    >\n                                        <ExpandMoreIcon\n                                            className={classnames({\n                                                [classes.expandIconExpanded]:\n                                                    expanded,\n                                                [classes.expandIcon]: true,\n                                            })}\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                        </Toolbar>\n                    </AppBar>\n                    <AccordionDetails className={classes.paddingZero}>\n                        <DialogContent className={classes.dialogContent}>\n                            {list}\n                        </DialogContent>\n                    </AccordionDetails>\n                </Accordion>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { Typography } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: \"#fff\",\n            flexDirection: \"column\",\n        },\n    }),\n);\n\nexport function DropFileBackground({ open }) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    return (\n        <Backdrop className={classes.backdrop} open={open}>\n            <div>\n                <UploadIcon style={{ fontSize: 80 }} />\n            </div>\n            <div>\n                <Typography variant={\"h4\"}>\n                    {t(\"uploader.dropFileHere\")}\n                </Typography>\n            </div>\n        </Backdrop>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport UploadManager, { SelectType } from \"./core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UploadButton from \"../Dial/Create\";\nimport pathHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\nimport { UploaderError } from \"./core/errors\";\nimport TaskList from \"./Popup/TaskList\";\nimport { Status } from \"./core/uploader/base\";\nimport { DropFileBackground } from \"../Placeholder/DropFile\";\nimport {\n    refreshFileList,\n    refreshStorage,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport Auth from \"../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nlet totalProgressCollector = null;\nlet lastProgressStart = -1;\nlet dragCounter = 0;\n\nexport default function Uploader() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const [uploaders, setUploaders] = useState([]);\n    const [taskListOpen, setTaskListOpen] = useState(false);\n    const [dropBgOpen, setDropBgOpen] = useState(0);\n    const [totalProgress, setTotalProgress] = useState({\n        totalSize: 0,\n        processedSize: 0,\n        total: 0,\n        processed: 0,\n    });\n    const search = useSelector((state) => state.explorer.search);\n    const policy = useSelector((state) => state.explorer.currentPolicy);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const path = useSelector((state) => state.navigator.path);\n    const fileSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFileSelector,\n    );\n    const folderSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFolderSelector,\n    );\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const RefreshFileList = useCallback(\n        () => dispatch(refreshFileList()),\n        [dispatch],\n    );\n    const RefreshStorage = useCallback(\n        () => dispatch(refreshStorage()),\n        [dispatch],\n    );\n\n    const enableUploader = useMemo(\n        () => pathHelper.isHomePage(location.pathname) && isLogin && !search,\n        [location.pathname, isLogin, search],\n    );\n\n    const taskAdded =\n        (original = null) =>\n        (tasks) => {\n            if (original !== null) {\n                if (tasks.length !== 1 || tasks[0].key() !== original.key()) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"fileNotMatchError\"),\n                        \"warning\",\n                    );\n                    return;\n                }\n            }\n\n            tasks.forEach((t) => t.start());\n\n            setTaskListOpen(true);\n            setUploaders((uploaders) => {\n                if (original !== null) {\n                    uploaders = uploaders.filter(\n                        (u) => u.key() !== original.key(),\n                    );\n                }\n\n                return [...uploaders, ...tasks];\n            });\n        };\n\n    const uploadManager = useMemo(() => {\n        return new UploadManager({\n            logLevel: \"INFO\",\n            concurrentLimit: parseInt(\n                Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\"),\n            ),\n            dropZone: document.querySelector(\"body\"),\n            onToast: (type, msg) => {\n                ToggleSnackbar(\"top\", \"right\", msg, type);\n            },\n            onDropOver: (e) => {\n                dragCounter++;\n                setDropBgOpen((value) => !value);\n            },\n            onDropLeave: (e) => {\n                dragCounter--;\n                setDropBgOpen((value) => !value);\n            },\n            onDropFileAdded: taskAdded(),\n        });\n    }, []);\n\n    useEffect(() => {\n        uploadManager.setPolicy(policy, path);\n    }, [policy]);\n\n    useEffect(() => {\n        const unfinished = uploadManager.resumeTasks();\n        setUploaders((uploaders) => [...uploaders, ...unfinished]);\n        if (!totalProgressCollector) {\n            totalProgressCollector = setInterval(() => {\n                const progress = {\n                    totalSize: 0,\n                    processedSize: 0,\n                    total: 0,\n                    processed: 0,\n                };\n                setUploaders((uploaders) => {\n                    uploaders.forEach((u) => {\n                        if (u.id <= lastProgressStart) {\n                            return;\n                        }\n\n                        progress.totalSize += u.task.size;\n                        progress.total += 1;\n\n                        if (\n                            u.status === Status.finished ||\n                            u.status === Status.canceled ||\n                            u.status === Status.error\n                        ) {\n                            progress.processedSize += u.task.size;\n                            progress.processed += 1;\n                        }\n\n                        if (\n                            u.status === Status.added ||\n                            u.status === Status.initialized ||\n                            u.status === Status.queued ||\n                            u.status === Status.preparing ||\n                            u.status === Status.processing ||\n                            u.status === Status.finishing\n                        ) {\n                            progress.processedSize += u.progress\n                                ? u.progress.total.loaded\n                                : 0;\n                        }\n                    });\n\n                    if (\n                        progress.total > 0 &&\n                        progress.processed === progress.total\n                    ) {\n                        lastProgressStart = uploaders[uploaders.length - 1].id;\n                    }\n                    return uploaders;\n                });\n\n                if (\n                    progress.total > 0 &&\n                    progress.total === progress.processed\n                ) {\n                    RefreshFileList();\n                    RefreshStorage();\n                }\n\n                setTotalProgress(progress);\n            }, 2000);\n        }\n    }, []);\n\n    const selectFile = (path, type = SelectType.File, original = null) => {\n        setTaskListOpen(true);\n\n        // eslint-disable-next-line no-unreachable\n        uploadManager\n            .select(path, type)\n            .then(taskAdded(original))\n            .catch((e) => {\n                if (e instanceof UploaderError) {\n                    ToggleSnackbar(\"top\", \"right\", e.Message(), \"warning\");\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"unknownError\", { msg: e.message }),\n                        \"error\",\n                    );\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (fileSelectCounter > 0) {\n            selectFile(path);\n        }\n    }, [fileSelectCounter]);\n\n    useEffect(() => {\n        if (folderSelectCounter > 0) {\n            selectFile(path, SelectType.Directory);\n        }\n    }, [folderSelectCounter]);\n\n    const deleteTask = (filter) => {\n        setUploaders((uploaders) => uploaders.filter(filter));\n    };\n\n    return (\n        <>\n            {enableUploader && (\n                <>\n                    <DropFileBackground open={dropBgOpen > 0} />\n                    <UploadButton\n                        progress={totalProgress}\n                        taskListOpen={taskListOpen}\n                        selectFile={selectFile}\n                        Queued={uploaders.length}\n                        openFileList={() => setTaskListOpen(true)}\n                    />\n                    <TaskList\n                        progress={totalProgress}\n                        uploadManager={uploadManager}\n                        taskList={uploaders}\n                        open={taskListOpen}\n                        onCancel={deleteTask}\n                        selectFile={selectFile}\n                        onClose={() => setTaskListOpen(false)}\n                        setUploaders={setUploaders}\n                    />\n                </>\n            )}\n        </>\n    );\n}\n","import i18next from \"./i18n\";\n\nexport const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\",\n];\nexport let msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\",\n];\nexport const subtitleSuffix = [\"ass\", \"srt\", \"vrr\"];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\", \"wav\", \"flac\", \"m4a\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\", \"avi\", \"m3u8\", \"mov\",\"m4v\",\"wmv\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const epubSuffix = [\"epub\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    py: \"python\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\",\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\", \"m4a\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\n        \"bmp\",\n        \"iff\",\n        \"png\",\n        \"gif\",\n        \"jpg\",\n        \"jpeg\",\n        \"psd\",\n        \"svg\",\n        \"webp\",\n        \"heif\",\n        \"heic\",\n        \"tiff\",\n        \"avif\",\n    ],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"xz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"],\n    epub: epubSuffix,\n};\nexport const isPreviewable = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    } else if (epubSuffix.indexOf(suffix) !== -1) {\n        return \"epub\";\n    }\n    return false;\n};\nexport const isTorrent = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix !== \"7z\" && mediaType[\"zip\"].indexOf(suffix) !== -1;\n};\n\nexport const encodingRequired = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\n    \"setting.queueing\",\n    \"setting.processing\",\n    \"setting.failed\",\n    \"setting.canceled\",\n    \"setting.finished\",\n];\nconst taskType = [\n    \"fileManager.compress\",\n    \"fileManager.decompress\",\n    \"setting.fileTransfer\",\n    \"setting.importFiles\",\n    \"setting.fileRecycle\",\n];\nconst taskProgress = [\n    \"setting.waiting\",\n    \"setting.compressing\",\n    \"setting.decompressing\",\n    \"setting.downloading\",\n    \"setting.transferring\",\n    \"setting.indexing\",\n    \"setting.listing\",\n];\n\nexport const getTaskStatus = (status: any) => {\n    return i18next.t(taskStatus[status]);\n};\n\nexport const getTaskType = (status: any) => {\n    return i18next.t(taskType[status]);\n};\n\nexport const getTaskProgress = (type: any, status: any) => {\n    if (type === 2) {\n        return i18next.t(\"setting.transferProgress\", {\n            num: status,\n        });\n    }\n    return i18next.t(taskProgress[status]);\n};\n\nexport const setWopiExts = (exts: string[]) => {\n    msDocPreviewSuffix = exts;\n};","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { askForOption } from \"../explorer/async\";\nimport i18next, { languages } from \"../../i18n\";\n\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title,\n    };\n};\n\nexport const closeContextMenu = () => {\n    return {\n        type: \"CLOSE_CONTEXT_MENU\",\n    };\n};\n\nexport const changeContextMenu = (type: string, open: boolean) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n\nexport const setOptionModal = (option: any) => {\n    return {\n        type: \"SET_OPTION_MODAL\",\n        option: option,\n    };\n};\n\nexport const openFileSelector = () => {\n    return {\n        type: \"OPEN_FILE_SELECTOR\",\n    };\n};\n\nexport const openFolderSelector = () => {\n    return {\n        type: \"OPEN_FOLDER_SELECTOR\",\n    };\n};\n\nexport const setPagination = (pagination) => {\n    return {\n        type: \"SET_PAGINATION\",\n        pagination: pagination,\n    };\n};\n\nexport const setShareInfo = (shareInfo) => {\n    return {\n        type: \"SET_SHARE_INFO\",\n        shareInfo: shareInfo,\n    };\n};\n\nexport const changePageSize = (\n    size: number\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const {\n            explorer: { dirList, fileList },\n            viewUpdate: { pagination },\n        } = getState();\n        const total = dirList.length + fileList.length;\n        let page = pagination.page;\n        if (pagination.page * size > total) {\n            page = Math.max(Math.ceil(total / size), 1);\n        } else if (size === -1) {\n            page = 1;\n        }\n        Auth.SetPreference(\"pagination\", size);\n        dispatch(\n            setPagination({\n                ...pagination,\n                size: size,\n                page: page,\n            })\n        );\n    };\n};\n\nexport const selectLanguage = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState) => {\n        let option: any;\n        let lng = \"\";\n        try {\n            const allOptions = languages.map((e) => {\n                return {\n                    key: e.code,\n                    name: e.displayName,\n                };\n            });\n            option = await dispatch(\n                askForOption(allOptions, i18next.t(\"setting.language\"))\n            );\n        } catch (e) {\n            console.log(e);\n            return;\n        }\n\n        lng = option.key;\n        await i18next.changeLanguage(lng);\n    };\n};\n","import dayjs from \"dayjs\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport utc from \"dayjs/plugin/utc\";\nimport Auth from \"../middleware/Auth\";\nimport i18next from \"../i18n\";\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nlet userTimezone = \"\";\ntry {\n    userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n} catch (e) {\n    console.log(e);\n}\n\nif (!userTimezone || userTimezone == \"Etc/Unknown\") {\n    userTimezone = \"Asia/Shanghai\";\n}\n\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\nexport let timeZone = preferTimeZone ? preferTimeZone : userTimezone;\n\nexport function refreshTimeZone() {\n    timeZone = Auth.GetPreference(\"timeZone\");\n    timeZone = timeZone ? timeZone : userTimezone;\n}\n\nexport function formatLocalTime(time) {\n    return i18next.t(\"intlDateTime\", {\n        ns: \"common\",\n        val: dayjs(time).tz(timeZone).toDate(),\n        formatParams: {\n            val: {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\",\n            },\n        },\n    });\n}\n\nexport function validateTimeZone(name) {\n    try {\n        dayjs().tz(name).format();\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox,\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\nimport { MenuBook } from \"@material-ui/icons\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon,\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon,\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon,\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon,\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox,\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox,\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox,\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText,\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn,\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox,\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore,\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android,\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon,\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp,\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo,\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython,\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC,\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp,\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript,\n    },\n    epub: {\n        color: \"#81b315\",\n        icon: MenuBook,\n    },\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = (props) => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach((k) => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color,\n                    }}\n                >\n                    <IconComponent\n                        className={props.iconClassName}\n                        style={{\n                            color: theme.palette.background.paper,\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color,\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction NoAuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/home\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default NoAuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        fontSize: \"160px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n    },\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={48}\n        width={192}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"100%\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import React, {\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../middleware/Api\";\nimport {\n    FormControl,\n    Input,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport Placeholder from \"../component/Placeholder/Captcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\nimport { toggleSnackbar } from \"../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\n    { captchaRef, setLoading },\n    ref,\n) {\n    const { t } = useTranslation();\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then((response) => {\n                setCaptchaData(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.captchaError\", { message: error.message }),\n                    \"error\",\n                );\n            });\n    };\n\n    useEffect(() => {\n        ref.current = refreshCaptcha;\n        refreshCaptcha();\n    }, []);\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    return (\n        <div className={classes.captchaInputContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <TextField\n                    variant={\"outlined\"}\n                    label={t(\"login.captcha\")}\n                    inputProps={{\n                        name: \"captcha\",\n                        id: \"captcha\",\n                    }}\n                    onChange={(e) => setCaptcha(e.target.value)}\n                    value={captcha}\n                    autoComplete\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position={\"end\"}>\n                                <div\n                                    className={classes.captchaImageContainer}\n                                    title={t(\"login.clickToRefresh\")}\n                                >\n                                    {captchaData === null && <Placeholder />}\n                                    {captchaData !== null && (\n                                        <img\n                                            className={classes.captchaImage}\n                                            src={captchaData}\n                                            alt=\"captcha\"\n                                            onClick={refreshCaptcha}\n                                        />\n                                    )}\n                                </div>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n            </FormControl>{\" \"}\n        </div>\n    );\n});\n\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function Normal() {\n            return (\n                <NormalCaptcha\n                    captchaRef={captchaParamsRef}\n                    ref={captchaRefreshRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, captchaRefreshRef, setLoading],\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge,\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\",\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName,\n})(ReCAPTCHA);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FormControl } from \"@material-ui/core\";\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\n\nconst Recaptcha = ({ captchaRef, setLoading }) => {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n\n    const reCaptchaKey = useSelector(\n        (state) => state.siteConfig.captcha_ReCaptchaKey,\n    );\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    useEffect(() => setLoading(false), []);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <div>\n                    <ReCaptcha\n                        style={{\n                            display: \"inline-block\",\n                        }}\n                        sitekey={reCaptchaKey}\n                        onChange={(value) => setCaptcha(value)}\n                        id=\"captcha\"\n                        name=\"captcha\"\n                    />\n                </div>\n            </FormControl>{\" \"}\n        </div>\n    );\n};\n\nexport default function useRecaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function RecaptchaRender() {\n            return (\n                <Recaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading],\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React, { forwardRef, useCallback, useRef } from \"react\";\nimport Script from \"react-load-script\";\nimport { useSelector } from \"react-redux\";\n\nconst TCaptcha = forwardRef(function TCaptcha(\n    { captchaRef, setLoading, isValidateRef, submitRef },\n    ref,\n) {\n    const appid = useSelector(\n        (state) => state.siteConfig.tcaptcha_captcha_app_id,\n    );\n    const onLoad = () => {\n        try {\n            ref.current = new window.TencentCaptcha(appid, function (res) {\n                if (res.ret === 0) {\n                    captchaRef.current.ticket = res.ticket;\n                    captchaRef.current.randstr = res.randstr;\n\n                    isValidateRef.current.isValidate = true;\n                    submitRef.current.submit();\n                    console.log(submitRef);\n                } else {\n                    submitRef.current.setLoading(false);\n                }\n            });\n        } catch (e) {\n            console.error(e);\n        }\n        setLoading(false);\n    };\n    return (\n        <Script\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\n            onLoad={onLoad}\n        />\n    );\n});\n\nexport default function useTCaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: false,\n    });\n    const captchaParamsRef = useRef({\n        ticket: \"\",\n        randstr: \"\",\n    });\n    const submitRef = useRef({\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        submit: () => {},\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        setLoading: () => {},\n    });\n\n    const captchaRef = useRef();\n\n    const CaptchaRender = useCallback(\n        function TCaptchaRender() {\n            return (\n                <TCaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                    isValidateRef={isValidate}\n                    submitRef={submitRef}\n                    ref={captchaRef}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef],\n    );\n\n    return {\n        isValidate: isValidate,\n        validate: (submit, setLoading) => {\n            submitRef.current.submit = submit;\n            submitRef.current.setLoading = setLoading;\n            captchaRef.current.show();\n        },\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useNormalCaptcha from \"./normal\";\nimport useRecaptcha from \"./recaptcha\";\nimport useTCaptcha from \"./tcaptcha\";\n\nexport const useStyle = makeStyles((theme) => ({\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            display: \"block\",\n        },\n    },\n    captchaInputContainer: {\n        marginTop: 0,\n    },\n    captchaImageContainer: {\n        cursor: \"pointer\",\n        marginLeft: \"1rem\",\n        [theme.breakpoints.down(\"sm\")]: {\n            marginLeft: 0,\n        },\n    },\n    captchaImage: {\n        borderRadius: theme.shape.borderRadius,\n        height: 48,\n        marginTop: 4,\n    },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\nexport const defaultValidate = (submit, setLoading) => {};\n\nexport const useCaptcha = () => {\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\n\n    const [captchaLoading, setCaptchaLoading] = useState(true);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const captchaRefreshRef = useRef(() => {});\n\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\n    const recaptcha = useRecaptcha(setCaptchaLoading);\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\n\n    switch (captchaType) {\n        case \"normal\":\n            return { ...normal, captchaRefreshRef, captchaLoading };\n        case \"recaptcha\":\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\n        case \"tcaptcha\":\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\n        default:\n            return { ...normal, captchaRefreshRef, captchaLoading };\n    }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport {\n    EmailOutlined,\n    Fingerprint,\n    VpnKey,\n    VpnKeyOutlined,\n} from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport {\n    applyThemes,\n    setSessionStatus,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3,\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const { t } = useTranslation();\n\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled,\n    );\n    const title = useSelector((state) => state.siteConfig.title);\n    const authn = useSelector((state) => state.siteConfig.authn);\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const ApplyThemes = useCallback(\n        (theme) => dispatch(applyThemes(theme)),\n        [dispatch],\n    );\n    const SetSessionStatus = useCallback(\n        (status) => dispatch(setSessionStatus(status)),\n        [dispatch],\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n    }, [location]);\n\n    const afterLogin = (data) => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        if (query.get(\"redirect\")) {\n            history.push(query.get(\"redirect\"));\n        } else {\n            history.push(\"/home\");\n        }\n        ToggleSnackbar(\"top\", \"right\", t(\"login.success\"), \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = (e) => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.browserNotSupport\"),\n                \"warning\",\n            );\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then((response) => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge,\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function (listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    },\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey,\n                });\n            })\n            .then((assertion) => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle),\n                        },\n                    }),\n                );\n            })\n            .then((response) => {\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && loginCaptcha) {\n            validate(() => login(e), setLoading);\n            return;\n        }\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const twoFALogin = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode,\n        })\n            .then((response) => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.title\", { title })}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <TextField\n                                        label={t(\"login.email\")}\n                                        variant={\"outlined\"}\n                                        inputProps={{\n                                            id: \"email\",\n                                            type: \"email\",\n                                            name: \"email\",\n                                        }}\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        InputProps={{\n                                            startAdornment: !isMobile && (\n                                                <InputAdornment position=\"start\">\n                                                    <EmailOutlined />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <TextField\n                                        variant={\"outlined\"}\n                                        label={t(\"login.password\")}\n                                        inputProps={{\n                                            name: \"password\",\n                                            type: \"password\",\n                                            id: \"password\",\n                                        }}\n                                        onChange={(e) => setPwd(e.target.value)}\n                                        InputProps={{\n                                            startAdornment: !isMobile && (\n                                                <InputAdornment position=\"start\">\n                                                    <VpnKeyOutlined />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && <CaptchaRender />}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={\n                                        loading ||\n                                        (loginCaptcha ? captchaLoading : false)\n                                    }\n                                    className={classes.submit}\n                                >\n                                    {t(\"login.signIn\")}\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <TextField\n                                        variant={\"outlined\"}\n                                        label={t(\"login.email\")}\n                                        InputProps={{\n                                            id: \"email\",\n                                            type: \"email\",\n                                            name: \"email\",\n                                            startAdornment: !isMobile && (\n                                                <InputAdornment position=\"start\">\n                                                    <EmailOutlined />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                        required\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    {t(\"login.continue\")}\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link component={RouterLink} to={\"/forget\"}>\n                                    {t(\"login.forgetPassword\")}\n                                </Link>\n                            </div>\n                            <div>\n                                {registerEnabled && (\n                                    <Link component={RouterLink} to={\"/signup\"}>\n                                        {t(\"login.signUpAccount\")}\n                                    </Link>\n                                )}\n                            </div>\n                        </div>\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        {t(\"login.useFIDO2\")}\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        {t(\"login.usePassword\")}\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {t(\"login.2FA\")}\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <TextField\n                                label={t(\"login.input2FACode\")}\n                                variant={\"outlined\"}\n                                inputProps={{\n                                    id: \"code\",\n                                    type: \"number\",\n                                    name: \"code\",\n                                }}\n                                onChange={(event) =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            {t(\"login.continue\")}\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import Highlighter from \"react-highlight-words\";\nimport { trimPrefix } from \"../Uploader/core/utils\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    highlight: {\n        backgroundColor: theme.palette.warning.light,\n    },\n}));\n\nexport default function FileName({ name }) {\n    const classes = useStyles();\n    const search = useSelector((state) => state.explorer.search);\n    if (!search) {\n        return name;\n    }\n\n    return (\n        <Highlighter\n            highlightClassName={classes.highlight}\n            searchWords={trimPrefix(search.keywords, \"keywords/\").split(\" \")}\n            autoEscape={true}\n            textToHighlight={name}\n        />\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { Folder } from \"@material-ui/icons\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18,\n        ),\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected,\n                    },\n                    classes.button,\n                )}\n            >\n                <div\n                    onClick={this.props.onIconClick}\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected,\n                    })}\n                >\n                    {!isSelected && (\n                        <>\n                            {this.props.isFolder && <Folder />}\n                            {!this.props.isFolder && (\n                                <TypeIcon fileName={this.props.file.name} />\n                            )}\n                        </>\n                    )}\n                    {isSelected && (\n                        <Grow in={isSelected}>\n                            <CheckCircleRoundedIcon\n                                className={classes.checkIcon}\n                            />\n                        </Grow>\n                    )}\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                        variant=\"body2\"\n                    >\n                        <FileName name={this.props.file.name} />\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    container: {},\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18,\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"12px 12px 0 0\",\n        backgroundColor: theme.palette.background.default,\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"12px 12px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\",\n    },\n    iconBig: {\n        fontSize: 50,\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"12px 12px 0 0\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    noDrag: {\n        userDrag: \"none\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        shareInfo: state.viewUpdate.shareInfo,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false,\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false,\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname,\n        );\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected,\n                        },\n                        classes.button,\n                    )}\n                >\n                    {this.props.file.thumb && !this.state.showPicIcon && (\n                        <div className={classes.preview}>\n                            <LazyLoadImage\n                                className={classNames(\n                                    {\n                                        [classes.hide]: this.state.loading,\n                                        [classes.picPreview]:\n                                            !this.state.loading,\n                                    },\n                                    classes.noDrag,\n                                )}\n                                src={\n                                    baseURL +\n                                    (isSharePage && this.props.shareInfo\n                                        ? \"/share/thumb/\" +\n                                          this.props.shareInfo.key +\n                                          \"/\" +\n                                          this.props.file.id +\n                                          \"?path=\" +\n                                          encodeURIComponent(\n                                              this.props.file.path,\n                                          )\n                                        : \"/file/thumb/\" + this.props.file.id)\n                                }\n                                afterLoad={() =>\n                                    this.setState({ loading: false })\n                                }\n                                beforeLoad={() =>\n                                    this.setState({ loading: true })\n                                }\n                                onError={() =>\n                                    this.setState({ showPicIcon: true })\n                                }\n                            />\n                            <ContentLoader\n                                height={150}\n                                width={170}\n                                className={classNames(\n                                    {\n                                        [classes.hide]: !this.state.loading,\n                                    },\n                                    classes.loadingAnimation,\n                                )}\n                            >\n                                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"150\" />\n                            </ContentLoader>\n                        </div>\n                    )}\n                    {(!this.props.file.thumb || this.state.showPicIcon) && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(!this.props.file.thumb || this.state.showPicIcon) && (\n                        <Divider />\n                    )}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                onClick={this.props.onIconClick}\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected,\n                                })}\n                            >\n                                {!isSelected && (\n                                    <TypeIcon fileName={this.props.file.name} />\n                                )}\n                                {isSelected && (\n                                    <Grow in={isSelected}>\n                                        <CheckCircleRoundedIcon\n                                            className={classes.checkIcon}\n                                        />\n                                    </Grow>\n                                )}\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]:\n                                        !isSelected,\n                                    [classes.shareFix]: this.props.share,\n                                })}\n                            >\n                                <FileName name={this.props.file.name} />\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    makeStyles,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18,\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function Folder({ folder, isActive, onIconClick }) {\n    const selected = useSelector((state) => state.explorer.selected);\n    const classes = useStyles();\n    const isMobile = statusHelper.isMobile();\n    const isSelected =\n        selected.findIndex((value) => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive,\n                },\n                classes.button,\n            )}\n        >\n            <div\n                onClick={onIconClick}\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected,\n                })}\n            >\n                {!isSelected && <FolderIcon />}\n                {isSelected && (\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\n                )}\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected,\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Folder from \"../Folder\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\",\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\",\n    },\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    if (object.type === \"dir\") {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} isFolder />\n            </div>\n        );\n    }\n    if (object.type === \"file\" && viewMethod === \"icon\") {\n        return (\n            <div className={classes.dragging}>\n                <FileIcon file={object} />\n            </div>\n        );\n    }\n    if (\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\n        viewMethod === \"list\"\n    ) {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} />\n            </div>\n        );\n    }\n};\n\nconst Preview = (props) => {\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod,\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`,\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React, { useMemo } from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nimport { useSelector } from \"react-redux\";\n\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n};\n\nfunction getItemStyles(\n    initialOffset,\n    currentOffset,\n    pointerOffset,\n    viewMethod,\n) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\",\n        };\n    }\n    let { x, y } = currentOffset;\n    if (viewMethod === \"list\") {\n        x += pointerOffset.x - initialOffset.x;\n        y += pointerOffset.y - initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        opacity: 0.5,\n        transform,\n        WebkitTransform: transform,\n    };\n}\nconst CustomDragLayer = (props) => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset,\n        pointerOffset,\n    } = useDragLayer((monitor) => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        pointerOffset: monitor.getInitialClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod,\n    );\n    const image = useMemo(() => {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }, [itemType, item]);\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    pointerOffset,\n                    viewMethod,\n                )}\n            >\n                {image}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport {\n    FolderDownload,\n    FolderUpload,\n    MagnetOn,\n    FilePlus,\n} from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    batchGetSource,\n    openParentFolder,\n    openPreview,\n    openTorrentDownload,\n    setSelectedTarget,\n    startBatchDownload,\n    startDirectoryDownload,\n    startDownload,\n    toggleObjectInfoSidebar,\n} from \"../../redux/explorer/action\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCompressDialog,\n    openCopyDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    refreshFileList,\n    setNavigatorLoadingStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport {\n    openFileSelector,\n    openFolderSelector,\n} from \"../../redux/viewUpdate/action\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = () => ({\n    propover: {},\n    divider: {\n        marginTop: 4,\n        marginBottom: 4,\n    },\n});\n\nconst StyledListItemIcon = withStyles({\n    root: {\n        minWidth: 38,\n    },\n})(ListItemIcon);\n\nconst mapStateToProps = (state) => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        withSourceEnabled: state.explorer.selectProps.withSourceEnabled,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownload());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        openPreview: (share) => {\n            dispatch(openPreview(share));\n        },\n        toggleObjectInfoSidebar: (open) => {\n            dispatch(toggleObjectInfoSidebar(open));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        openFileSelector: () => {\n            dispatch(openFileSelector());\n        },\n        openFolderSelector: () => {\n            dispatch(openFolderSelector());\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n        batchGetSource: () => {\n            dispatch(batchGetSource());\n        },\n        startDirectoryDownload: (share) => {\n            dispatch(startDirectoryDownload(share));\n        },\n        openParentFolder: () => {\n            dispatch(openParentFolder());\n        },\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = (e) => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.startBatchDownload(this.props.share);\n    };\n\n    openDirectoryDownload = () => {\n        this.props.startDirectoryDownload(this.props.share);\n    };\n\n    openDownload = () => {\n        this.props.startDownload(this.props.share, this.props.selected[0]);\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            pathJoin([this.props.path, this.props.selected[0].name]),\n        );\n    };\n\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\n    renderMenuItems = (items) => {\n        const res = [];\n        let key = 0;\n\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\n            let visibleCount = 0;\n            items[position].forEach((item) => {\n                if (item.condition) {\n                    res.push(\n                        <MenuItem dense key={key} onClick={item.onClick}>\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <Typography variant=\"inherit\">\n                                {item.text}\n                            </Typography>\n                        </MenuItem>,\n                    );\n                    key++;\n                    visibleCount++;\n                }\n            });\n            if (visibleCount > 0 && position != \"bottom\") {\n                res.push(\n                    <Divider\n                        key={key}\n                        className={this.props.classes.divider}\n                    />,\n                );\n                key++;\n            }\n        });\n\n        return res;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const emptyMenuList = {\n            top: [\n                {\n                    condition: true,\n                    onClick: () => {\n                        this.props.refreshFileList();\n                        this.props.changeContextMenu(\n                            this.props.menuType,\n                            false,\n                        );\n                    },\n                    icon: <RefreshIcon />,\n                    text: \"刷新\",\n                },\n            ],\n            center: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openFileSelector(),\n                    icon: <UploadIcon />,\n                    text: \"上传文件\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openFolderSelector(),\n                    icon: <FolderUpload />,\n                    text: \"上传目录\",\n                },\n                {\n                    condition: user.group.allowRemoteDownload,\n                    onClick: () => this.props.openRemoteDownloadDialog(),\n                    icon: <DownloadIcon />,\n                    text: \"离线下载\",\n                },\n            ],\n            bottom: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFolderDialog(),\n                    icon: <NewFolderIcon />,\n                    text: \"创建文件夹\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFileDialog(),\n                    icon: <FilePlus />,\n                    text: \"创建文件\",\n                },\n            ],\n        };\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                dense\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false,\n                                    );\n                                }}\n                            >\n                                <StyledListItemIcon>\n                                    <RefreshIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.refresh\")}\n                                </Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFileSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <UploadIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.uploadFiles\")}\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFolderSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <FolderUpload />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.uploadFolder\")}\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.newRemoteDownloads\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <NewFolderIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.newFolder\")}\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <FilePlus />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.newFile\")}\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple &&\n                                this.props.withFolder && (\n                                    <div>\n                                        <MenuItem\n                                            dense\n                                            onClick={this.enterFolder}\n                                        >\n                                            <StyledListItemIcon>\n                                                <OpenFolderIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.enter\")}\n                                            </Typography>\n                                        </MenuItem>\n                                        {isHomePage && (\n                                            <Divider\n                                                className={classes.divider}\n                                            />\n                                        )}\n                                    </div>\n                                )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openPreview()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <OpenIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.open\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {this.props.search && !this.props.isMultiple && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openParentFolder()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <OpenFolderIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.openParentFolder\")}\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.openDownload(this.props.share)\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DownloadIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.download\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                                window.showDirectoryPicker &&\n                                window.isSecureContext && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.openDirectoryDownload()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <FolderDownload />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.download\")}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {(this.props.isMultiple ||\n                                this.props.withFolder) && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.openArchiveDownload()}\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.batchDownload\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {isHomePage &&\n                                user.group.sourceBatch > 0 &&\n                                this.props.withSourceEnabled && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.batchGetSource()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <LinkIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {this.props.isMultiple ||\n                                            (this.props.withFolder &&\n                                                !this.props.withFile)\n                                                ? t(\n                                                      \"fileManager.getSourceLinkInBatch\",\n                                                  )\n                                                : t(\n                                                      \"fileManager.getSourceLink\",\n                                                  )}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <MagnetOn />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\n                                                \"fileManager.createRemoteDownloadForTorrent\",\n                                            )}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <Unarchive />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.decompress\")}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <Archive />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.compress\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <StyledListItemIcon>\n                                        <ShareIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.createShareLink\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.toggleObjectInfoSidebar(true)\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <InfoOutlined />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.viewDetails\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <Divider className={classes.divider} />\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <RenameIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.rename\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {!this.props.search && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <FileCopyIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.copy\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {!this.props.search && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <MoveIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.move\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        dense\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DeleteIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.delete\")}\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired,\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(ContextMenuCompoment))));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport {\n    fade,\n    TableCell,\n    TableRow,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport pathHelper from \"../../utils/page\";\nimport statusHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary,\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\",\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    tableRow: {\n        padding: \"10px 16px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    active: {\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <TableRow\n                ref={this.props.pref}\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: this.props.isActive,\n                })}\n            >\n                <TableCell\n                    ref={this.props.dref}\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        <div\n                            onClick={\n                                this.props.file.type !== \"up\"\n                                    ? this.props.onIconClick\n                                    : null\n                            }\n                        >\n                            {!isSelected && icon}\n                            {isSelected && (\n                                <Grow in={isSelected}>\n                                    <CheckCircleRoundedIcon\n                                        className={classNames(\n                                            classes.checkIcon,\n                                            classes.icon,\n                                        )}\n                                    />\n                                </Grow>\n                            )}\n                        </div>\n                        <FileName name={this.props.file.name} />\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {formatLocalTime(this.props.file.date)}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nimport classNames from \"classnames\";\nimport TableItem from \"../TableRow\";\nexport default function FolderDropWarpper({\n    isListView,\n    folder,\n    onIconClick,\n    contextMenu,\n    handleClick,\n    handleDoubleClick,\n    className,\n    pref,\n}) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n    const isActive = canDrop && isOver;\n    if (!isListView) {\n        return (\n            <div ref={drop}>\n                <Folder\n                    folder={folder}\n                    onIconClick={onIconClick}\n                    isActive={isActive}\n                />\n            </div>\n        );\n    }\n    return (\n        <TableItem\n            pref={pref}\n            dref={drop}\n            className={className}\n            onIconClick={onIconClick}\n            contextMenu={contextMenu}\n            handleClick={handleClick}\n            handleDoubleClick={handleDoubleClick}\n            file={folder}\n            isActive={isActive}\n        />\n    );\n}\n","import { useRef } from \"react\";\nimport { throttle } from \"lodash\";\n\nconst useDragScrolling = () => {\n    const isScrolling = useRef(false);\n    const target = document.querySelector(\"#explorer-container\");\n\n    const goDown = () => {\n        target.scrollTop += 10;\n\n        const { offsetHeight, scrollTop, scrollHeight } = target;\n        const isScrollEnd = offsetHeight + scrollTop >= scrollHeight;\n\n        if (isScrolling.current && !isScrollEnd) {\n            window.requestAnimationFrame(goDown);\n        }\n    };\n\n    const goUp = () => {\n        target.scrollTop -= 10;\n\n        if (isScrolling.current && target.scrollTop > 0) {\n            window.requestAnimationFrame(goUp);\n        }\n    };\n\n    const onDragOver = (event) => {\n        const isMouseOnTop = event.clientY < 100;\n        const isMouseOnDown = window.innerHeight - event.clientY < 100;\n\n        if (!isScrolling.current && (isMouseOnTop || isMouseOnDown)) {\n            isScrolling.current = true;\n\n            if (isMouseOnTop) {\n                window.requestAnimationFrame(goUp);\n            }\n\n            if (isMouseOnDown) {\n                window.requestAnimationFrame(goDown);\n            }\n        } else if (!isMouseOnTop && !isMouseOnDown) {\n            isScrolling.current = false;\n        }\n    };\n\n    const throttleOnDragOver = throttle(onDragOver, 300);\n\n    const addEventListenerForWindow = () => {\n        window.addEventListener(\"dragover\", throttleOnDragOver, false);\n    };\n\n    const removeEventListenerForWindow = () => {\n        window.removeEventListener(\"dragover\", throttleOnDragOver, false);\n        isScrolling.current = false;\n    };\n\n    return {\n        addEventListenerForWindow,\n        removeEventListenerForWindow,\n    };\n};\n\nexport default useDragScrolling;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useLocation } from \"react-router-dom\";\nimport { pathBack } from \"../../utils\";\nimport {\n    changeContextMenu,\n    dragAndDrop,\n    navigateTo,\n    openLoadingDialog,\n    openPreview,\n    selectFile,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport useDragScrolling from \"./DnD/Scrolling\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\",\n    },\n    fixFlex: {\n        minWidth: 0,\n    },\n    dragging: {\n        opacity: 0.4,\n    },\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector((state) => state.navigator.path);\n    const shareInfo = useSelector((state) => state.viewUpdate.shareInfo);\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod,\n    );\n    const navigatorPath = useSelector((state) => state.navigator.path);\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch],\n    );\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch],\n    );\n\n    const NavitateTo = useCallback(\n        (targets) => dispatch(navigateTo(targets)),\n        [dispatch],\n    );\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch],\n    );\n    const OpenLoadingDialog = useCallback(\n        (text) => dispatch(openLoadingDialog(text)),\n        [dispatch],\n    );\n    const OpenPreview = useCallback(\n        (share) => dispatch(openPreview(share)),\n        [dispatch],\n    );\n    const StartDownload = useCallback(\n        (share, file) => dispatch(StartDownload(share, file)),\n        [dispatch],\n    );\n\n    const classes = useStyles();\n\n    const contextMenu = (e) => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex((value) => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const SelectFile = (e) => {\n        dispatch(selectFile(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\"\n                ? path + props.file.name\n                : path + \"/\" + props.file.name,\n        );\n    };\n    const handleClick = (e) => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n            return;\n        }\n\n        SelectFile(e);\n        if (\n            props.file.type === \"dir\" &&\n            !e.ctrlKey &&\n            !e.metaKey &&\n            !e.shiftKey\n        ) {\n            enterFolder();\n        }\n    };\n\n    const handleDoubleClick = () => {\n        // console.log(Date.now())\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n\n        OpenPreview(shareInfo);\n    };\n\n    const handleIconClick = (e) => {\n        e.stopPropagation();\n        if (!e.shiftKey) {\n            e.ctrlKey = true;\n        }\n        SelectFile(e);\n        return false;\n    };\n\n    const { addEventListenerForWindow, removeEventListenerForWindow } =\n        useDragScrolling();\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod,\n        },\n        begin: () => {\n            addEventListenerForWindow();\n        },\n        end: (item, monitor) => {\n            removeEventListenerForWindow();\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <>\n                {props.file.type === \"dir\" && (\n                    <DropWarpper\n                        isListView={true}\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type !== \"dir\" && (\n                    <TableItem\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        file={props.file}\n                    />\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging,\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper\n                        isListView={false}\n                        onIconClick={handleIconClick}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon\n                        onIconClick={handleIconClick}\n                        ref={drag}\n                        file={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon\n                        onIconClick={handleIconClick}\n                        file={props.file}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport explorer, {\n    changeContextMenu,\n    openRemoveDialog,\n    setSelectedTarget,\n} from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { usePagination } from \"../../hooks/pagination\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\",\n    },\n    root: {\n        padding: \"10px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 113px)\",\n        },\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 113px)\",\n        },\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\",\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\",\n    },\n    errorBox: {\n        padding: theme.spacing(4),\n    },\n    errorMsg: {\n        marginTop: \"10px\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    flexFix: {\n        minWidth: 0,\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    gridContainer: {\n        [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns:\n                \"repeat(auto-fill,minmax(180px,1fr))!important\",\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            gridTemplateColumns:\n                \"repeat(auto-fill,minmax(220px,1fr))!important\",\n        },\n        display: \"grid!important\",\n    },\n    gridItem: {\n        flex: \"1 1 220px!important\",\n    },\n}));\n\nconst keyMap = {\n    DELETE_FILE: \"del\",\n    SELECT_ALL_SHOWED: `${isMac() ? \"command\" : \"ctrl\"}+a`,\n    SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+shift+a`,\n    DESELECT_ALL: \"esc\",\n};\n\nexport default function Explorer({ share }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const selected = useSelector((state) => state.explorer.selected);\n    const search = useSelector((state) => state.explorer.search);\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\n    const path = useSelector((state) => state.navigator.path);\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\n    const navigatorErrorMsg = useSelector(\n        (state) => state.viewUpdate.navigatorErrorMsg,\n    );\n    const navigatorError = useSelector(\n        (state) => state.viewUpdate.navigatorError,\n    );\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod,\n    );\n\n    const OpenRemoveDialog = useCallback(\n        () => dispatch(openRemoveDialog()),\n        [dispatch],\n    );\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch],\n    );\n    const ChangeContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch],\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(explorer.actions.changeSortMethod(method)),\n        [dispatch],\n    );\n    const SelectAll = useCallback(\n        () => dispatch(explorer.actions.selectAll()),\n        [dispatch],\n    );\n\n    const { dirList, fileList, startIndex } = usePagination();\n\n    const handlers = {\n        DELETE_FILE: () => {\n            if (selected.length > 0 && !share) {\n                OpenRemoveDialog();\n            }\n        },\n        SELECT_ALL_SHOWED: (e) => {\n            e.preventDefault();\n            if (selected.length >= dirList.length + fileList.length) {\n                SetSelectedTarget([]);\n            } else {\n                SetSelectedTarget([...dirList, ...fileList]);\n            }\n        },\n        SELECT_ALL: (e) => {\n            e.preventDefault();\n            SelectAll();\n        },\n        DESELECT_ALL: (e) => {\n            e.preventDefault();\n            SetSelectedTarget([]);\n        },\n    };\n\n    useEffect(\n        () =>\n            configure({\n                ignoreTags: [\"input\", \"select\", \"textarea\"],\n            }),\n        [],\n    );\n\n    const contextMenu = (e) => {\n        e.preventDefault();\n        if (!search && !pathHelper.isSharePage(location.pathname)) {\n            if (!loading) {\n                ChangeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    const ClickAway = (e) => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            SetSelectedTarget([]);\n        }\n    };\n\n    const classes = useStyles();\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const showView =\n        !loading && (dirList.length !== 0 || fileList.length !== 0);\n\n    const listView = useMemo(\n        () => (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"namePos\" ||\n                                    sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    sortMethod === \"namePos\" ? \"asc\" : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\",\n                                    );\n                                }}\n                            >\n                                {t(\"name\")}\n                                {sortMethod === \"namePos\" ||\n                                sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"sizePos\" ||\n                                    sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    sortMethod === \"sizePos\" ? \"asc\" : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\",\n                                    );\n                                }}\n                            >\n                                {t(\"size\")}\n                                {sortMethod === \"sizePos\" ||\n                                sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"modifyTimePos\" ||\n                                    sortMethod === \"modifyTimeRev\"\n                                }\n                                direction={\n                                    sortMethod === \"modifyTimePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"modifyTimePos\"\n                                            ? \"modifyTimeRev\"\n                                            : \"modifyTimePos\",\n                                    );\n                                }}\n                            >\n                                {t(\"lastModified\")}\n                                {sortMethod === \"modifyTimePos\" ||\n                                sortMethod === \"modifyTimeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: t(\"backToParentFolder\"),\n                            }}\n                        />\n                    )}\n                    {dirList.map((value, index) => (\n                        <ObjectIcon\n                            key={value.id}\n                            file={value}\n                            index={startIndex + index}\n                        />\n                    ))}\n                    {fileList.map((value, index) => (\n                        <ObjectIcon\n                            key={value.id}\n                            file={value}\n                            index={startIndex + dirList.length + index}\n                        />\n                    ))}\n                </TableBody>\n            </Table>\n        ),\n        [dirList, fileList, path, sortMethod, ChangeSortMethod, classes],\n    );\n\n    const normalView = useMemo(\n        () => (\n            <div className={classes.flexFix}>\n                {dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            {t(\"folders\")}\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    className={classes.gridItem}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={startIndex + index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            {t(\"files\")}\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {fileList.map((value, index) => (\n                                <Grid\n                                    className={classes.gridItem}\n                                    key={value.id}\n                                    item\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={\n                                            startIndex + dirList.length + index\n                                        }\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        ),\n        [dirList, fileList, classes],\n    );\n\n    const view = viewMethod === \"list\" ? listView : normalView;\n\n    return (\n        <div\n            onContextMenu={contextMenu}\n            onClick={ClickAway}\n            className={classNames(\n                {\n                    [classes.root]: viewMethod !== \"list\",\n                    [classes.rootTable]: viewMethod === \"list\",\n                    [classes.rootShare]: share,\n                },\n                classes.button,\n            )}\n        >\n            <GlobalHotKeys handlers={handlers} allowChanges keyMap={keyMap} />\n            <ContextMenu share={share} />\n            <ImgPreivew />\n            {navigatorError && (\n                <Paper elevation={1} className={classes.errorBox}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        {t(\"listError\")}\n                    </Typography>\n                    <Typography\n                        color={\"textSecondary\"}\n                        className={classes.errorMsg}\n                    >\n                        {navigatorErrorMsg.message}\n                    </Typography>\n                </Paper>\n            )}\n\n            {loading && !navigatorError && (\n                <div className={classes.loading}>\n                    <CircularProgress />\n                </div>\n            )}\n\n            {!search &&\n                isHomePage &&\n                dirList.length === 0 &&\n                fileList.length === 0 &&\n                !loading &&\n                !navigatorError && (\n                    <Nothing\n                        primary={t(\"dropFileHere\")}\n                        secondary={t(\"orClickUploadButton\")}\n                    />\n                )}\n            {((search &&\n                dirList.length === 0 &&\n                fileList.length === 0 &&\n                !loading &&\n                !navigatorError) ||\n                (dirList.length === 0 &&\n                    fileList.length === 0 &&\n                    !loading &&\n                    !navigatorError &&\n                    !isHomePage)) && <Nothing primary={t(\"nothingFound\")} />}\n            {showView && view}\n        </div>\n    );\n}\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst paginate = (array, page_size, page_number) =>\n    page_size === -1\n        ? array\n        : array.slice((page_number - 1) * page_size, page_number * page_size);\n\nexport function usePagination() {\n    const files = useSelector((state) => state.explorer.fileList);\n    const folders = useSelector((state) => state.explorer.dirList);\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\n\n    const { dirList, fileList, startIndex } = useMemo(() => {\n        const all = paginate(\n            [...folders, ...files],\n            pagination.size,\n            pagination.page,\n        );\n        const dirList = [];\n        const fileList = [];\n        all.forEach((v) =>\n            v.type === \"dir\" ? dirList.push(v) : fileList.push(v),\n        );\n        const startIndex = pagination.size * (pagination.page - 1);\n        return { dirList, fileList, startIndex };\n    }, [folders, files, pagination]);\n    return { dirList, fileList, startIndex };\n}\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    button: {\n        textTransform: \"none\",\n    },\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder,\n                    },\n                };\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive,\n                    },\n                    classes.button,\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light,\n    },\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder,\n                },\n            });\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive,\n            })}\n            onClick={(e) => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach((element) => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport explorer, {\n    drawerToggleAction,\n    navigateTo,\n    navigateUp,\n    openCompressDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openShareDialog,\n    refreshFileList,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n} from \"../../../redux/explorer\";\nimport { fixUrlHash, setGetParameter } from \"../../../utils/index\";\nimport {\n    Divider,\n    ListItemIcon,\n    Menu,\n    MenuItem,\n    withStyles,\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport SubActions from \"./SubActions\";\nimport { setCurrentPolicy } from \"../../../redux/explorer/action\";\nimport { list } from \"../../../services/navigate\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        search: state.explorer.search,\n        sortMethod: state.viewUpdate.sortMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: (list) => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: (target) => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        setCurrentPolicy: (policy) => {\n            dispatch(setCurrentPolicy(policy));\n        },\n    };\n};\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst styles = (theme) => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\",\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\",\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\",\n    },\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\",\n    },\n});\n\nclass NavigatorComponent extends Component {\n    search = undefined;\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\"),\n        });\n        const newPath = path !== null ? path : this.props.path;\n        list(\n            newPath,\n            this.props.share,\n            this.search ? this.search.keywords : \"\",\n            this.search ? this.search.searchPath : \"\",\n        )\n            .then((response) => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                if (!this.search) {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n                if (response.data.policy) {\n                    this.props.setCurrentPolicy({\n                        id: response.data.policy.id,\n                        name: response.data.policy.name,\n                        type: response.data.policy.type,\n                        maxSize: response.data.policy.max_size,\n                        allowedSuffix: response.data.policy.file_type,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = (path) => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.search !== nextProps.search) {\n            this.search = nextProps.search;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = (force) => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\"),\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = (e) => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    performAction = (e) => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\n            },\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    {t(\"fileManager.refresh\")}\n                </MenuItem>\n                {!this.props.search && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            {t(\"fileManager.share\")}\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                {t(\"fileManager.compress\")}\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            {t(\"fileManager.newFolder\")}\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            {t(\"fileManager.newFile\")}\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare,\n                    },\n                    classes.container,\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={(e) => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title={t(\"fileManager.showFullPath\")}\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1,\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={(e) =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1,\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={(e) =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        <SubActions isSmall />\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(NavigatorComponent))));\n\nexport default Navigator;\n","import React from \"react\";\nimport { BulletList } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"100%\",\n        // padding: 40,\n        // [theme.breakpoints.down(\"md\")]: {\n        //     width: \"100%\",\n        //     padding: 10\n        // }\n    },\n}));\n\nconst MyLoader = (props) => (\n    <BulletList\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction ListLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default ListLoading;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Clear, Folder } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { setSideBar } from \"../../../redux/explorer/action\";\nimport TypeIcon from \"../TypeIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../../middleware/Api\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TimeAgo from \"timeago-react\";\nimport ListLoading from \"../../Placeholder/ListLoading\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { navigateTo, toggleSnackbar } from \"../../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxShadow:\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    header: {\n        display: \"flex\",\n        padding: theme.spacing(3),\n        placeContent: \"space-between\",\n    },\n    fileIcon: { width: 33, height: 33 },\n    fileIconSVG: { fontSize: 20 },\n    folderIcon: {\n        color: theme.palette.text.secondary,\n        width: 33,\n        height: 33,\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        wordBreak: \"break-all\",\n        flexGrow: 2,\n    },\n    closeIcon: {\n        placeSelf: \"flex-start\",\n        marginTop: 2,\n    },\n    propsContainer: {\n        padding: theme.spacing(3),\n    },\n    propsLabel: {\n        color: theme.palette.text.secondary,\n        padding: theme.spacing(1),\n    },\n    propsTime: {\n        color: theme.palette.text.disabled,\n        padding: theme.spacing(1),\n    },\n    propsValue: {\n        padding: theme.spacing(1),\n        wordBreak: \"break-all\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SideDrawer() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\n    const selected = useSelector((state) => state.explorer.selected);\n    const SetSideBar = useCallback(\n        (open) => dispatch(setSideBar(open)),\n        [dispatch],\n    );\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const search = useSelector((state) => state.explorer.search);\n    const [target, setTarget] = useState(null);\n    const [details, setDetails] = useState(null);\n    const loadProps = (object) => {\n        API.get(\n            \"/object/property/\" +\n                object.id +\n                \"?trace_root=\" +\n                (search ? \"true\" : \"false\") +\n                \"&is_folder=\" +\n                (object.type === \"dir\").toString(),\n        )\n            .then((response) => {\n                setDetails(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        setDetails(null);\n        if (sideBarOpen) {\n            if (selected.length !== 1) {\n                SetSideBar(false);\n            } else {\n                setTarget(selected[0]);\n                loadProps(selected[0]);\n            }\n        }\n    }, [selected, sideBarOpen]);\n\n    const classes = useStyles();\n    const propsItem = [\n        {\n            label: t(\"fileManager.size\"),\n            value: (d, target) =>\n                sizeToString(d.size) +\n                t(\"fileManager.bytes\", { bytes: d.size.toLocaleString() }),\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.storagePolicy\"),\n            value: (d, target) => d.policy,\n            show: (d) => d.type === \"file\",\n        },\n        {\n            label: t(\"fileManager.childFolders\"),\n            value: (d, target) =>\n                t(\"fileManager.childCount\", {\n                    num: d.child_folder_num.toLocaleString(),\n                }),\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: t(\"fileManager.childFiles\"),\n            value: (d, target) =>\n                t(\"fileManager.childCount\", {\n                    num: d.child_file_num.toLocaleString(),\n                }),\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: t(\"fileManager.parentFolder\"),\n            // eslint-disable-next-line react/display-name\n            value: (d, target) => {\n                const path = d.path === \"\" ? target.path : d.path;\n                const name = filename(path);\n                return (\n                    <Tooltip title={path}>\n                        <Link\n                            href={\"javascript:void\"}\n                            onClick={() => NavigateTo(path)}\n                        >\n                            {name === \"\" ? t(\"fileManager.rootFolder\") : name}\n                        </Link>\n                    </Tooltip>\n                );\n            },\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.modifiedAt\"),\n            value: (d, target) => formatLocalTime(d.updated_at),\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.createdAt\"),\n            value: (d) => formatLocalTime(d.created_at),\n            show: (d) => true,\n        },\n    ];\n    const content = (\n        <Grid container className={classes.propsContainer}>\n            {!details && <ListLoading />}\n            {details && (\n                <>\n                    {propsItem.map((item) => {\n                        if (item.show(target)) {\n                            return (\n                                <>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.propsLabel}\n                                    >\n                                        {item.label}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.propsValue}\n                                    >\n                                        {item.value(details, target)}\n                                    </Grid>\n                                </>\n                            );\n                        }\n                    })}\n                    {target.type === \"dir\" && (\n                        <Grid item xs={12} className={classes.propsTime}>\n                            <Trans\n                                i18nKey=\"fileManager.statisticAt\"\n                                components={[\n                                    <span key={0} />,\n                                    <TimeAgo\n                                        key={1}\n                                        datetime={details.query_date}\n                                        locale={t(\"timeAgoLocaleCode\", {\n                                            ns: \"common\",\n                                        })}\n                                    />,\n                                    <span key={2} />,\n                                ]}\n                            />\n                        </Grid>\n                    )}\n                </>\n            )}\n        </Grid>\n    );\n    return (\n        <>\n            <Hidden smUp>\n                <Dialog\n                    fullScreen\n                    open={sideBarOpen}\n                    TransitionComponent={Transition}\n                >\n                    {target && (\n                        <>\n                            <AppBar className={classes.appBar}>\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => SetSideBar(false)}\n                                        aria-label=\"close\"\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        {target.name}\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            {content}\n                        </>\n                    )}\n                </Dialog>\n            </Hidden>\n            <Hidden xsDown>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    open={sideBarOpen}\n                    anchor=\"right\"\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        {target && (\n                            <>\n                                <div className={classes.header}>\n                                    {target.type === \"dir\" && (\n                                        <Folder\n                                            className={classes.folderIcon}\n                                        />\n                                    )}\n                                    {target.type !== \"dir\" && (\n                                        <TypeIcon\n                                            isUpload\n                                            className={classes.fileIcon}\n                                            iconClassName={classes.fileIconSVG}\n                                            fileName={target.name}\n                                        />\n                                    )}\n                                    <div className={classes.fileName}>\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            {target.name}\n                                        </Typography>\n                                    </div>\n                                    <IconButton\n                                        onClick={() => SetSideBar(false)}\n                                        className={classes.closeIcon}\n                                        aria-label=\"close\"\n                                        size={\"small\"}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                </div>\n                            </>\n                        )}\n                        <Divider />\n                        {content}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </>\n    );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { PaginationItem } from \"@material-ui/lab\";\n\nexport default function CustomPaginationItem(props) {\n    const inputRef = useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (\n            isActive &&\n            props.onClick &&\n            props.type !== \"start-ellipsis\" &&\n            props.type !== \"end-ellipsis\"\n        ) {\n            console.log(\"ss\");\n            props.onClick();\n        }\n    }, [isActive, inputRef]);\n\n    if (\n        props.isMobile &&\n        (props.type === \"start-ellipsis\" ||\n            props.type === \"end-ellipsis\" ||\n            props.type === \"page\")\n    ) {\n        if (props.selected) {\n            return (\n                <div>\n                    {props.page} / {props.count}\n                </div>\n            );\n        }\n        return <></>;\n    }\n    return (\n        <div ref={inputRef}>\n            <PaginationItem ref={drop} {...props} />\n        </div>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Pagination } from \"@material-ui/lab\";\nimport CustomPaginationItem from \"./PaginationItem\";\nimport { setPagination } from \"../../redux/viewUpdate/action\";\nimport AutoHidden from \"../Dial/AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"fixed\",\n        bottom: 23,\n        /* left: 8px; */\n        background: theme.palette.background.paper,\n        borderRadius: 24,\n        boxShadow:\n            \" 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%)\",\n        padding: \"8px 4px 8px 4px\",\n        marginLeft: 20,\n    },\n    placeholder: {\n        marginTop: 80,\n    },\n}));\n\nexport default function PaginationFooter() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const files = useSelector((state) => state.explorer.fileList);\n    const folders = useSelector((state) => state.explorer.dirList);\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\n    const location = useLocation();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const SetPagination = useCallback(\n        (p) => dispatch(setPagination(p)),\n        [dispatch],\n    );\n\n    const handleChange = (event, value) => {\n        SetPagination({ ...pagination, page: value });\n    };\n\n    const count = useMemo(\n        () => Math.ceil((files.length + folders.length) / pagination.size),\n        [files, folders, pagination.size],\n    );\n\n    const isMobile = statusHelper.isMobile();\n    const isSharePage = statusHelper.isSharePage(location.pathname);\n    // const keywords=pagination.page\n    const [keywords, setKeywords] = useState(undefined);\n    const jumpPage = () => {\n        // console.log(count)\n        if (!keywords) {\n            ToggleSnackbar(\"top\", \"center\", `what are you doing here!`, \"info\");\n            return;\n        }\n        if (+keywords < 1) {\n            ToggleSnackbar(\"top\", \"center\", `what are you doing here!`, \"info\");\n            return;\n        }\n        if (+keywords > count) {\n            ToggleSnackbar(\"top\", \"center\", `what are you doing here!`, \"info\");\n            return;\n        }\n        if (+keywords === pagination.page) {\n            ToggleSnackbar(\"top\", \"center\", `You are alreadly here!`, \"info\");\n            return;\n        }\n        handleChange(undefined, +keywords);\n    };\n    const jumpToFirst = () => {\n        if (pagination.page === 1) {\n            ToggleSnackbar(\"top\", \"center\", `You are alreadly here!`, \"info\");\n            return;\n        }\n        handleChange(undefined, 1);\n    };\n    const jumpToLast = () => {\n        if (pagination.page === count) {\n            ToggleSnackbar(\"top\", \"center\", `You are alreadly here!`, \"info\");\n            return;\n        }\n        handleChange(undefined, count);\n    };\n\n    if (count > 1 && !loading) {\n        return (\n            <>\n                {!isMobile && !isSharePage && (\n                    <div className={classes.placeholder} />\n                )}\n                <AutoHidden\n                    enable\n                    element={\n                        isMobile || isSharePage\n                            ? null\n                            : document.querySelector(\"#explorer-container\")\n                    }\n                >\n                    <div className={classes.root}>\n                        <Pagination\n                            renderItem={(item) => (\n                                <CustomPaginationItem\n                                    count={count}\n                                    isMobile={isMobile}\n                                    {...item}\n                                />\n                            )}\n                            color=\"secondary\"\n                            count={count}\n                            page={pagination.page}\n                            onChange={handleChange}\n                        />\n                        <Button onClick={jumpToFirst} color=\"default\">\n                            First\n                        </Button>\n                        <Button onClick={jumpToLast} color=\"default\">\n                            Last\n                        </Button>\n                        <Button onClick={jumpPage} color=\"default\">\n                            GoTo\n                        </Button>\n                        <TextField\n                            style={{ width: \"5rem\" }}\n                            value={keywords}\n                            onChange={(e) => setKeywords(e.target.value)}\n                        />\n                    </div>\n                </AutoHidden>\n            </>\n        );\n    }\n    return <div></div>;\n}\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\nimport SideDrawer from \"./Sidebar/SideDrawer\";\nimport classNames from \"classnames\";\nimport {\n    closeAllModals,\n    navigateTo,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport PaginationFooter from \"./Pagination\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"calc(100vh - 64px)\",\n        [theme.breakpoints.down(\"xs\")]: {\n            height: \"100%\",\n        },\n    },\n    rootShare: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        minHeight: 500,\n    },\n    explorer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflowY: \"auto\",\n    },\n});\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSubTitle: (text) => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                className={classNames({\n                    [classes.rootShare]: this.props.share,\n                    [classes.root]: !this.props.share,\n                })}\n            >\n                <DndProvider backend={HTML5Backend}>\n                    <Modals share={this.props.share} />\n                    <Navigator\n                        isShare={this.props.isShare}\n                        share={this.props.share}\n                    />\n                    <div className={classes.explorer} id={\"explorer-container\"}>\n                        <Explorer share={this.props.share} />\n                        <PaginationFooter />\n                    </div>\n\n                    <DragLayer />\n                </DndProvider>\n                <SideDrawer />\n            </div>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(FileManager)));\n","import React from \"react\";\nimport {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function SelectMenu({\n    options,\n    anchorEl,\n    handleClose,\n    callback,\n    selected,\n    showIcon = true,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            {options.map((item) => (\n                <>\n                    <MenuItem\n                        style={{ whiteSpace: \"normal\" }}\n                        dense\n                        onClick={() => callback(item)}\n                    >\n                        {showIcon && (\n                            <ListItemIcon className={classes.icon}>\n                                {item.name !== selected ? (\n                                    <Icon />\n                                ) : (\n                                    <CheckIcon />\n                                )}\n                            </ListItemIcon>\n                        )}\n\n                        {item.name}\n                    </MenuItem>\n                </>\n            ))}\n        </Menu>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport { useHistory } from \"react-router-dom\";\nimport { basename, fileNameNoExt, isMobileSafari } from \"../../utils\";\nimport { list } from \"../../services/navigate\";\nimport { getViewerURL } from \"../../redux/explorer/action\";\nimport { subtitleSuffix, videoPreviewSuffix } from \"../../config\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport { Launch, PlaylistPlay, Subtitles } from \"@material-ui/icons\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport SelectMenu from \"./SelectMenu\";\nimport { getDownloadURL } from \"../../services/file\";\nimport { sortMethodFuncs } from \"../FileManager/Sort\";\nimport { useTranslation } from \"react-i18next\";\nimport { baseURL } from \"../../middleware/Api\";\nimport TypeIcon from \"./../FileManager/TypeIcon\";\n\n\nconst Artplayer = React.lazy(() =>\n    import(\n        /* webpackChunkName: \"artplayer\" */ \"artplayer/examples/react/Artplayer\"\n    )\n);\n\n\nconst externalPlayers = [\n    {\n        name: \"PotPlayer\",\n        url: (source, title) => `potplayer://${source}`,\n    },\n    {\n        name: \"VLC\",\n        url: (source, title) => `vlc://${source}`,\n    },\n    {\n        name: \"IINA\",\n        url: (source, title) => `iina://weblink?url=${source}`,\n    },\n    {\n        name: \"nPlayer\",\n        url: (source, title) => `nplayer-${source}`,\n    },\n    {\n        name: \"MXPlayer (Free)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.ad;S.title=${title};end`,\n    },\n    {\n        name: \"MXPlayer (Pro)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.pro;S.title=${title};end`,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 20,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    player: {\n        height: \"100vh\",\n        maxHeight: \"calc(100vh - 180px)\",\n    },\n    actions: {\n        marginTop: theme.spacing(2),\n    },\n    actionButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    \"@global\": {\n        \"video,.art-video-player,.art-bottom\": {\n            borderRadius: theme.shape.borderRadius,\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const { t } = useTranslation();\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const { title, path } = UseFileSubTitle(query, math, location);\n    const theme = useTheme();\n    const [art, setArt] = useState(null);\n    const history = useHistory();\n    const [files, setFiles] = useState([]);\n    const [subtitles, setSubtitles] = useState([]);\n    const [playlist, setPlaylist] = useState([]);\n    const [subtitleOpen, setSubtitleOpen] = useState(null);\n    const [subtitleSelected, setSubtitleSelected] = useState(\"\");\n    const [playlistOpen, setPlaylistOpen] = useState(null);\n    const [externalPlayerOpen, setExternalPlayerOpen] = useState(null);\n    const isShare = pathHelper.isSharePage(location.pathname);\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\n    const sortFunc = sortMethodFuncs[sortMethod];\n\n    const pageSize = 10;\n    const [selectedIndex, setSelectedIndex] = useState(\n        playlist.findIndex((obj) => obj.name === title),\n    );\n    const [totalPage, setTotalPage] = useState(\n        Math.floor(playlist.length / pageSize) + 1,\n    );\n    const [page, setPage] = useState(Math.floor(selectedIndex / pageSize) + 1);\n    const [pageArray, setPageArray] = useState([]);\n\n    useEffect(() => {\n        setSelectedIndex(playlist.findIndex((obj) => obj.name === title));\n        setTotalPage(Math.floor(playlist.length / pageSize) + 1);\n    }, [playlist, title]);\n\n    useEffect(() => {\n        setPage(Math.floor(selectedIndex / pageSize) + 1);\n    }, [selectedIndex]);\n\n    useEffect(() => {\n        const startIndex = (page - 1) * pageSize;\n        const endIndex = startIndex + pageSize;\n        setPageArray(playlist.slice(startIndex, endIndex));\n    }, [page]); // 依赖数组：当 page 或 playlist 变化时触发\n\n    const imageStyle = {\n        width: \"150px\", // 固定图片宽度\n        height: \"auto\", // 自动调整高度\n        borderRadius: \"8px\", // 圆角\n        boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", // 图片阴影\n    };\n\n    const detailsStyle = {\n        flex: 1, // 右侧内容占据剩余空间\n    };\n\n    useEffect(() => {\n        art &&\n            art.on(\"ready\", () => {\n                art.autoHeight = true;\n            });\n        return () => {\n            if (\n                art !== null &&\n                !isMobileSafari() &&\n                document.pictureInPictureEnabled &&\n                art.playing\n            ) {\n                art.pip = true;\n                art.query(\".art-video\").addEventListener(\n                    \"leavepictureinpicture\",\n                    () => {\n                        art.pause();\n                    },\n                    false,\n                );\n            }\n        };\n    }, [art]);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (art !== null) {\n            const newURL = getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\"),\n            );\n            if (newURL !== art.url) {\n                if (art.subtitle) {\n                    art.subtitle.show = false;\n                }\n                art.switchUrl(newURL);\n                if (path && path !== \"\") {\n                    list(\n                        basename(path),\n                        isShare ? { key: id } : null,\n                        \"\",\n                        \"\",\n                    ).then((res) => {\n                        setFiles(\n                            res.data.objects\n                                .sort(sortFunc)\n                                .filter((o) => o.type === \"file\"),\n                        );\n                        setPlaylist(\n                            res.data.objects.filter(\n                                (o) =>\n                                    o.type === \"file\" &&\n                                    videoPreviewSuffix.indexOf(\n                                        o.name.split(\".\").pop().toLowerCase(),\n                                    ) !== -1,\n                            ),\n                        );\n                    });\n                }\n            }\n        }\n    }, [art, id, location, path]);\n\n    const switchSubtitle = (f) => {\n        if (art !== null) {\n            const fileType = f.name.split(\".\").pop().toLowerCase();\n            art.subtitle.switch(\n                getPreviewURL(\n                    isShare,\n                    id,\n                    f.id,\n                    pathJoin([basename(query.get(\"share_path\")), f.name]),\n                ),\n                {\n                    type: fileType,\n                },\n            );\n            art.subtitle.show = true;\n            setSubtitleSelected(f.name);\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"fileManager.subtitleSwitchTo\", {\n                    subtitle: f.name,\n                }),\n                \"info\",\n            );\n        }\n    };\n\n    useEffect(() => {\n        if (files.length > 0) {\n            const fileNameMatch = fileNameNoExt(title) + \".\";\n            const options = files\n                .filter((f) => {\n                    const fileType = f.name.split(\".\").pop().toLowerCase();\n                    return subtitleSuffix.indexOf(fileType) !== -1;\n                })\n                .sort((a, b) => {\n                    return a.name.startsWith(fileNameMatch) &&\n                        !b.name.startsWith(fileNameMatch)\n                        ? -1\n                        : 0;\n                });\n            if (\n                options.length > 0 &&\n                options[0].name.startsWith(fileNameMatch)\n            ) {\n                switchSubtitle(options[0]);\n            }\n            setSubtitles(options);\n        }\n    }, [files]);\n\n    const switchVideo = (file) => {\n        setSubtitleSelected(null);\n        if (isShare) {\n            file.key = id;\n        }\n        if (isMobileSafari()) {\n            window.location.href = getViewerURL(\"video\", file, isShare);\n        } else {\n            history.push(getViewerURL(\"video\", file, isShare));\n        }\n    };\n\n    const setSubtitle = (sub) => {\n        setSubtitleOpen(null);\n        switchSubtitle(sub);\n    };\n\n    const startSelectSubTitle = (e) => {\n        if (subtitles.length === 0) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"fileManager.noSubtitleAvailable\"),\n                \"warning\",\n            );\n            return;\n        }\n        setSubtitleOpen(e.currentTarget);\n    };\n\n    const openInExternalPlayer = (player) => {\n        const current = { name: title };\n        current.id = query.get(\"id\");\n        current.path = basename(path);\n        if (isShare) {\n            current.key = id;\n        }\n\n        setExternalPlayerOpen(null);\n        getDownloadURL(current)\n            .then((response) => {\n                window.location.assign(player.url(response.data, title));\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const gotoPreVideo = () => {\n        const index = playlist.findIndex((obj) => obj.name === title);\n        if (index <= 0) {\n            ToggleSnackbar(\"top\", \"center\", `前面没有更多了`, \"info\");\n            return;\n        }\n        switchVideo(playlist[index - 1]);\n    };\n    const gotoNextVideo = () => {\n        const index = playlist.findIndex((obj) => obj.name === title);\n        if (index >= playlist.length - 1) {\n            ToggleSnackbar(\"top\", \"center\", `后面没有更多了`, \"info\");\n            return;\n        }\n        switchVideo(playlist[index + 1]);\n    };\n\n    const nextPage = () => {\n        if (page < totalPage) {\n            setPage(page + 1);\n        }\n    };\n\n    const prePage = () => {\n        if (page > 1) {\n            setPage(page - 1);\n        }\n    };\n\n    const jumpTo = (item) => {\n        const index = playlist.findIndex((obj) => obj.name === item.name);\n        switchVideo(playlist[index]);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <Suspense fallback={<TextLoading />}>\n                    <Artplayer\n                        option={{\n                            title: title,\n                            theme: theme.palette.secondary.main,\n                            flip: true,\n                            setting: true,\n                            playbackRate: true,\n                            aspectRatio: true,\n                            hotkey: true,\n                            pip: true,\n                            fullscreen: true,\n                            fullscreenWeb: true,\n                            autoHeight: true,\n                            whitelist: [\"*\"],\n                            moreVideoAttr: {\n                                \"webkit-playsinline\": true,\n                                playsInline: true,\n                            },\n                            lang: t(\"artPlayerLocaleCode\", { ns: \"common\" }),\n                        }}\n                        className={classes.player}\n                        getInstance={(a) => setArt(a)}\n                    />\n                </Suspense>\n            </Paper>\n            <div className={classes.actions}>\n                <Button\n                    onClick={startSelectSubTitle}\n                    className={classes.actionButton}\n                    startIcon={<Subtitles />}\n                    variant=\"outlined\"\n                >\n                    {t(\"fileManager.subtitle\")}\n                </Button>\n                {playlist.length >= 2 && (\n                    <Button\n                        onClick={(e) => setPlaylistOpen(e.currentTarget)}\n                        className={classes.actionButton}\n                        startIcon={<PlaylistPlay />}\n                        variant=\"outlined\"\n                    >\n                        {t(\"fileManager.playlist\")}\n                    </Button>\n                )}\n                <Button\n                    onClick={(e) => setExternalPlayerOpen(e.currentTarget)}\n                    className={classes.actionButton}\n                    startIcon={<Launch />}\n                    variant=\"outlined\"\n                >\n                    {t(\"fileManager.openInExternalPlayer\")}\n                </Button>\n                <Button\n                    className={classes.actionButton}\n                    onClick={() => {\n                        gotoPreVideo();\n                    }}\n                    variant=\"outlined\"\n                >\n                    上一个\n                </Button>\n                <Button\n                    className={classes.actionButton}\n                    onClick={() => {\n                        gotoNextVideo();\n                    }}\n                    variant=\"outlined\"\n                >\n                    下一个\n                </Button>\n            </div>\n            <SelectMenu\n                selected={subtitleSelected}\n                options={subtitles}\n                callback={setSubtitle}\n                anchorEl={subtitleOpen}\n                handleClose={() => setSubtitleOpen(null)}\n            />\n            <SelectMenu\n                selected={title}\n                options={playlist}\n                callback={switchVideo}\n                anchorEl={playlistOpen}\n                handleClose={() => setPlaylistOpen(null)}\n            />\n            <SelectMenu\n                showIcon={false}\n                options={externalPlayers}\n                callback={openInExternalPlayer}\n                anchorEl={externalPlayerOpen}\n                handleClose={() => setExternalPlayerOpen(null)}\n            />\n            <div\n                style={{\n                    width: \"70%\",\n                    border: \"1px solid #000\",\n                    borderRadius: \"5px\",\n                    margin: \"4px auto\",\n                }}\n            >\n                <Button\n                    className={classes.actionButton}\n                    onClick={() => {\n                        prePage();\n                    }}\n                    variant=\"outlined\"\n                >\n                    上一页\n                </Button>\n                <Button\n                    className={classes.actionButton}\n                    onClick={() => {\n                        nextPage();\n                    }}\n                    variant=\"outlined\"\n                >\n                    下一页\n                </Button>\n                <Button className={classes.actionButton} variant=\"outlined\">\n                    {page}/{totalPage}页\n                </Button>\n\n                <div style={{ overflowY: \"auto\", height: 512 }}>\n                    {pageArray.map((item) => (\n                        <div\n                            onClick={() => {\n                                if (item.name === title) {\n                                    return;\n                                }\n                                jumpTo(item);\n                            }}\n                            style={{\n                                display: \"flex\", // 使用 flexbox 布局\n                                alignItems: \"flex-start\", // 左对齐\n                                gap: \"20px\", // 左右间距\n                                padding: \"8px\", // 内边距\n                                border:\n                                    item.name === title\n                                        ? \"1px solid red\"\n                                        : \"1px solid #ddd\", // 边框\n                                borderRadius: \"8px\", // 圆角\n                                maxWidth: \"600px\", // 最大宽度\n                                margin: \"20px auto\", // 居中\n                                backgroundColor: \"#f9f9f9\", // 背景色\n                                cursor: \"pointer\",\n                            }}\n                            key={item.id}\n                        >\n                            {/* 左边图片 */}\n                            <div>\n                                {item.thumb && (\n                                    <div className={classes.preview}>\n                                        <img\n                                            src={\n                                                baseURL +\n                                                \"/file/thumb/\" +\n                                                item.id\n                                            }\n                                            style={imageStyle}\n                                        />\n                                    </div>\n                                )}\n                                {!item.thumb && (\n                                    <div className={classes.previewIcon}>\n                                        <TypeIcon\n                                            className={classes.iconBig}\n                                            fileName={item.name}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                            {/* 右边详细信息 */}\n                            <div style={detailsStyle}>\n                                <h4>{item.name}</h4>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Avatar,\n    Card,\n    CardHeader,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n    cardAction: {\n        marginTop: 0,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const { t: tGlobal } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords),\n        )\n            .then((response) => {\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"listLoadingError\"), \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", t(\"enterKeywords\"), \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = (event) => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        {t(\"searchResult\")}\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                {t(\"createdAtDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                {t(\"createdAtAsc\")}\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                {t(\"downloadsDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                {t(\"downloadsAsc\")}\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                {t(\"viewsDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                {t(\"viewsAsc\")}\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.length === 0 && <Nothing primary={t(\"noRecords\")} />}\n                {shareList.map((value) => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                classes={{\n                                    action: classes.cardAction,\n                                }}\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={tGlobal(\"fileManager.open\")}\n                                    >\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : t(\"sourceNotFound\")\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : t(\"sourceNotFound\")}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        <Trans\n                                            i18nKey=\"share.sharedAt\"\n                                            components={[\n                                                <TimeAgo\n                                                    key={0}\n                                                    datetime={value.create_date}\n                                                    locale={tGlobal(\n                                                        \"timeAgoLocaleCode\",\n                                                        {\n                                                            ns: \"common\",\n                                                        },\n                                                    )}\n                                                />,\n                                            ]}\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\",\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = (pwd) => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = (id) => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter((value) => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1,\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.shareCanceled\"),\n                    \"success\",\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    changePermission = (id) => {\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\n        })\n            .then((response) => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    changePreviewOption = (id) => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\n        })\n            .then((response) => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1],\n        )\n            .then((response) => {\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.listLoadingError\"),\n                    \"error\",\n                );\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value,\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = (event) => {\n        this.setState({\n            orderBy: event.target.value,\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = (share) => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            {t(\"share.sharedFiles\")}\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    {t(\"share.createdAtDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    {t(\"share.createdAtAsc\")}\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    {t(\"share.downloadsDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    {t(\"share.downloadsAsc\")}\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    {t(\"share.viewsDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    {t(\"share.viewsAsc\")}\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} className={classes.gird}>\n                    {this.state.shareList.length === 0 && (\n                        <Nothing primary={t(\"share.noRecords\")} />\n                    )}\n                    {this.state.shareList.map((value) => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={6}\n                            md={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : t(\"share.sourceNotFound\")\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : t(\"share.sourceNotFound\")}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {formatLocalTime(value.create_date)}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label={t(\"share.expired\")}\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\",\n                                    }}\n                                >\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={t(\"fileManager.open\")}\n                                    >\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password),\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={t(\n                                                    \"share.changeToPublic\",\n                                                )}\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key,\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={t(\"share.viewPassword\")}\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={t(\"share.changeToPrivate\")}\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon\n                                                    fontSize={\"small\"}\n                                                />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? t(\"share.disablePreview\")\n                                                : t(\"share.enablePreview\")\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <ToggleIcon\n                                                on={value.preview}\n                                                onIcon={\n                                                    <EyeIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                                offIcon={\n                                                    <VisibilityOff\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={t(\"share.cancelShare\")}\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> {t(\"share.sharePassword\")} </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(MyShareCompoment))));\n\nexport default MyShare;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    content: {\n        padding: 0,\n    },\n    scroll: {\n        maxHeight: \"calc(100vh - 200px)\",\n    },\n}));\n\nexport default function SelectFileDialog(props) {\n    const { t } = useTranslation();\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = (index) => (event) => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\",\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map((v) => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"download.selectDownloadingFile\")}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                <Virtuoso\n                    style={{ height: 54 * files.length }}\n                    className={classes.scroll}\n                    data={files}\n                    itemContent={(index, v) => (\n                        <MenuItem key={index}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    )}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nimport { TableVirtuoso } from \"react-virtuoso\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFile: {\n        width: \"100%\",\n        minWidth: 300,\n        wordBreak: \"break-all\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    subFileSize: {\n        minWidth: 120,\n    },\n    subFilePercent: {\n        minWidth: 105,\n    },\n    scroll: {\n        overflow: \"auto\",\n        maxHeight: \"300px\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n        textAlign: \"left\",\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        textAlign: \"left\",\n        paddingLeft: theme.spacing(1),\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\nexport default function DownloadingCard(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\n    const { t: tGlobal } = useTranslation();\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter((v) => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = (index) => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map((v) => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\",\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\",\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex,\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles,\n                    },\n                });\n                ToggleSnackbar(\"top\", \"right\", t(\"taskFileDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? t(\"unknownTaskName\") : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"taskCanceled\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = (fileIndex) => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"operationSubmitted\"),\n                    \"success\",\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const subFileList = useMemo(() => {\n        const processStyle = (value) => ({\n            background:\n                \"linear-gradient(to right, \" +\n                (theme.palette.type === \"dark\"\n                    ? darken(theme.palette.primary.main, 0.4)\n                    : lighten(theme.palette.primary.main, 0.85)) +\n                \" 0%,\" +\n                (theme.palette.type === \"dark\"\n                    ? darken(theme.palette.primary.main, 0.4)\n                    : lighten(theme.palette.primary.main, 0.85)) +\n                \" \" +\n                getPercent(value.completedLength, value.length).toFixed(0) +\n                \"%,\" +\n                theme.palette.background.paper +\n                \" \" +\n                getPercent(value.completedLength, value.length).toFixed(0) +\n                \"%,\" +\n                theme.palette.background.paper +\n                \" 100%)\",\n        });\n\n        const subFileCell = (value) => (\n            <>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFile}\n                >\n                    <Typography className={classes.subFileName}>\n                        <TypeIcon\n                            className={classes.subFileIcon}\n                            fileName={value.path}\n                        />\n                        {value.path}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFileSize}\n                >\n                    <Typography noWrap>\n                        {\" \"}\n                        {sizeToString(value.length)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFilePercent}\n                >\n                    <Typography noWrap>\n                        {getPercent(\n                            value.completedLength,\n                            value.length,\n                        ).toFixed(2)}\n                        %\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Tooltip title={t(\"deleteThisFile\")}>\n                        <IconButton\n                            onClick={() => deleteFile(value.index)}\n                            disabled={loading}\n                            size={\"small\"}\n                        >\n                            <HighlightOff />\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>\n            </>\n        );\n\n        return activeFiles().length > 5 ? (\n            <TableVirtuoso\n                style={{ height: 43 * activeFiles().length }}\n                className={classes.scroll}\n                components={{\n                    // eslint-disable-next-line react/display-name\n                    Table: (props) => <Table {...props} size={\"small\"} />,\n                    // eslint-disable-next-line react/display-name\n                    TableRow: (props) => {\n                        const index = props[\"data-index\"];\n                        const value = activeFiles()[index];\n                        return (\n                            <TableRow\n                                {...props}\n                                key={index}\n                                style={processStyle(value)}\n                            />\n                        );\n                    },\n                }}\n                data={activeFiles()}\n                itemContent={(index, value) => subFileCell(value)}\n            />\n        ) : (\n            <div className={classes.scroll}>\n                <Table size=\"small\">\n                    <TableBody>\n                        {activeFiles().map((value) => {\n                            return (\n                                <TableRow\n                                    key={value.index}\n                                    style={processStyle(value)}\n                                >\n                                    {subFileCell(value)}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }, [classes, theme, activeFiles]);\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total,\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid,\n                                    },\n                                    classes.expand,\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && subFileList}\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/home?path=\" +\n                                        encodeURIComponent(task.dst),\n                                )\n                            }\n                        >\n                            {t(\"openDstFolder\")}\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files,\n                                    ]);\n                                }}\n                            >\n                                {t(\"selectDownloadingFile\")}\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            {t(\"cancelTask\")}\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"updatedAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={task.update}\n                                        locale={tGlobal(\"timeAgoLocaleCode\", {\n                                            ns: \"common\",\n                                        })}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"uploaded\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"uploadSpeed\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"InfoHash\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\",\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={5}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"seederCount\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={5}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"seeding\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? t(\"isSeeding\")\n                                                : t(\"notSeeding\")}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"chunkSize\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"chunkNumbers\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                            {props.task.node && (\n                                <Grid container xs={12} sm={4}>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.infoTitle}\n                                    >\n                                        {t(\"downloadNode\")}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.infoValue}\n                                    >\n                                        {props.task.node}\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { TableVirtuoso } from \"react-virtuoso\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n        textAlign: \"left\",\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFile: {\n        width: \"100%\",\n        minWidth: 300,\n        wordBreak: \"break-all\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    subFileSize: {\n        minWidth: 115,\n    },\n    subFilePercent: {\n        minWidth: 100,\n    },\n    scroll: {\n        overflow: \"auto\",\n        maxHeight: \"300px\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n        textAlign: \"left\",\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        textAlign: \"left\",\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\nexport default function FinishedCard(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? t(\"unknownTaskName\") : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter((v) => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = (error) => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return t(\"transferFailed\");\n        }\n    };\n\n    const subFileList = useMemo(() => {\n        const subFileCell = (value) => (\n            <>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFile}\n                >\n                    <Typography className={classes.subFileName}>\n                        <TypeIcon\n                            className={classes.subFileIcon}\n                            fileName={value.path}\n                        />\n                        {value.path}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFileSize}\n                >\n                    <Typography noWrap>\n                        {\" \"}\n                        {sizeToString(value.length)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFilePercent}\n                >\n                    <Typography noWrap>\n                        {getPercent(\n                            value.completedLength,\n                            value.length,\n                        ).toFixed(2)}\n                        %\n                    </Typography>\n                </TableCell>\n            </>\n        );\n\n        return activeFiles().length > 5 ? (\n            <TableVirtuoso\n                style={{ height: 57 * activeFiles().length }}\n                className={classes.scroll}\n                components={{\n                    // eslint-disable-next-line react/display-name\n                    Table: (props) => <Table {...props} />,\n                }}\n                data={activeFiles()}\n                itemContent={(index, value) => subFileCell(value)}\n            />\n        ) : (\n            <div className={classes.scroll}>\n                <Table>\n                    <TableBody>\n                        {activeFiles().map((value) => {\n                            return (\n                                <TableRow key={value.index}>\n                                    {subFileCell(value)}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }, [classes, activeFiles]);\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    {t(\"downloadFailed\", {\n                                        msg: props.task.error,\n                                    })}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                {t(\"canceledStatus\")}\n                                {props.task.error !== \"\" && (\n                                    <span>({props.task.error})</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 4 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.main,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"finishedStatus\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 0 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"pending\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 1 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"transferring\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 2 && (\n                                <Tooltip\n                                    title={getTaskError(props.task.task_error)}\n                                >\n                                    <Typography\n                                        variant=\"body2\"\n                                        color={\"error\"}\n                                        noWrap\n                                    >\n                                        {getTaskError(props.task.task_error)}\n                                    </Typography>\n                                </Tooltip>\n                            )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded,\n                                    },\n                                    classes.expand,\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && subFileList}\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/home?path=\" +\n                                        encodeURIComponent(props.task.dst),\n                                )\n                            }\n                        >\n                            {t(\"openDstFolder\")}\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            {t(\"deleteRecord\")}\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"createdAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {formatLocalTime(props.task.create)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"updatedAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {formatLocalTime(props.task.update)}\n                                </Grid>\n                            </Grid>\n                            {props.task.node && (\n                                <Grid container xs={12} sm={6}>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.infoTitle}\n                                    >\n                                        {t(\"downloadNode\")}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.infoValue}\n                                    >\n                                        {props.task.node}\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\nimport { openRemoteDownloadDialog } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch],\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    actions: {\n        display: \"flex\",\n    },\n    title: {\n        marginTop: \"20px\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n    },\n    margin: {\n        marginTop: theme.spacing(2),\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n    previousDownloading = -1;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true,\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/downloading\")\n            .then((response) => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false,\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 *\n                            response.data.reduce(function (prev, current) {\n                                return prev.interval < current.interval\n                                    ? prev\n                                    : current;\n                            }).interval,\n                    );\n                }\n\n                // 下载中条目变更时刷新已完成列表\n                if (response.data.length !== this.previousDownloading) {\n                    this.page = 0;\n                    this.setState({\n                        finishedList: [],\n                        continue: true,\n                    });\n                    this.loadMore();\n                }\n                this.previousDownloading = response.data.length;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then((response) => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data,\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"download.failedToLoad\"),\n                    \"error\",\n                );\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    {t(\"download.active\")}\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.length === 0 && (\n                    <Nothing primary={t(\"download.activeEmpty\")} />\n                )}\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    {t(\"download.finished\")}\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.length === 0 && (\n                        <Nothing primary={t(\"download.finishedEmpty\")} />\n                    )}\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        {t(\"download.loadMore\")}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withTranslation()(DownloadComponent)));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\",\n        },\n\n        marginTop: 30,\n    },\n}));\n\nconst MyLoader = (props) => {\n    return (\n        <Facebook\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n            className={props.className}\n        />\n    );\n};\n\nfunction PageLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n            }}\n        >\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Divider,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\"),\n        };\n    }\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={t(\"share.privateShareTitle\", {\n                            nick: this.props.share.creator.nick,\n                        })}\n                        subheader={formatLocalTime(\n                            this.props.share.create_date,\n                        )}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label={t(\"share.enterPassword\")}\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            {t(\"share.continue\")}\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(LockedFileCompoment))));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24,\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\",\n    },\n    shareDes: {\n        marginTop: 12,\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n}));\n\nexport default function Creator(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return t(\"expireInXDays\", {\n                    num: Math.round(props.share.expire / (24 * 3600)),\n                });\n            }\n\n            return t(\"expireInXHours\", {\n                num: Math.round(props.share.expire / 3600),\n            });\n        }\n        return formatLocalTime(props.share.create_date);\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <Trans\n                        i18nKey=\"share.createdBy\"\n                        values={{\n                            nick: props.share.creator.nick,\n                        }}\n                        components={[\n                            <Link\n                                key={0}\n                                onClick={() => userProfile()}\n                                href={\"javascript:void(0)\"}\n                                color=\"inherit\"\n                            />,\n                        ]}\n                    />\n                )}\n                {!props.isFolder && (\n                    <Trans\n                        i18nKey=\"share.sharedBy\"\n                        values={{\n                            num: 1,\n                            nick: props.share.creator.nick,\n                        }}\n                        components={[\n                            <Link\n                                key={0}\n                                onClick={() => userProfile()}\n                                href={\"javascript:void(0)\"}\n                                color=\"inherit\"\n                            />,\n                        ]}\n                    />\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {t(\"statistics\", {\n                    views: props.share.views,\n                    downloads: props.share.downloads,\n                    time: getSecondDes(),\n                })}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport { isPreviewable } from \"../../config\";\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    showAudioPreview,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { startDownload } from \"../../redux/explorer/action\";\nimport { withTranslation } from \"react-i18next\";\n\nvhCheck();\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n        },\n        justifyContent: \"center\",\n        display: \"flex\",\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\",\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2,\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000,\n        },\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\",\n    },\n    fileName: {\n        marginLeft: 20,\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\",\n    },\n    downloadButton: {\n        marginLeft: 8,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: (first) => {\n            dispatch(showAudioPreview(first));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false,\n    };\n\n    downloaded = false;\n\n    // TODO merge into react thunk\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.pleaseLogin\"),\n                    \"warning\",\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name),\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                    type: \"share\",\n                });\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name),\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name),\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name),\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name),\n                );\n                return;\n            case \"epub\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/epub?name=\" +\n                        encodeURIComponent(this.props.share.source.name),\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.cannotShare\"),\n                    \"warning\",\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = (callback) => (event) => {\n        callback(event);\n    };\n\n    download = () => {\n        this.props.startDownload(this.props.share, null);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    {t(\"share.preview\")}\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.download}\n                                disabled={this.state.loading}\n                            >\n                                {t(\"fileManager.download\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(SharedFileCompoment))));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    setShareUserPopover,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { setShareInfo } from \"../../redux/viewUpdate/action\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n    },\n    managerContainer: {\n        overflowY: \"auto\",\n    },\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: (e) => {\n            dispatch(setShareUserPopover(e));\n        },\n        setShareInfo: (s) => {\n            dispatch(setShareInfo(s));\n        },\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        this.props.setShareInfo(this.props.share);\n    }\n\n    componentWillUnmount() {\n        this.props.setShareInfo(null);\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = (e) => {\n        const ignore = e && e.clientY && e.clientY <= 64;\n        if (!pathHelper.isMobile() && !ignore) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map((value) => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\",\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function SharePreload() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch],\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(\n                    t(\"privateShareTitle\", { nick: share.creator.nick }),\n                );\n                if (password !== \"\") {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"incorrectPassword\"),\n                        \"warning\",\n                    );\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then((response) => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={t(\"shareNotExist\")} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    closeAllModals,\n    openShareDialog,\n    setModalsLoading,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport i18n from \"i18next\";\nimport CreatShare from \"../Modals/CreateShare\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n    },\n    \"@global\": {\n        iframe: {\n            border: \"none\",\n            width: \"100%\",\n            height: \"calc(100vh - 64px)\",\n            marginBottom: -10,\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [session, setSession] = useState(null);\n    const [file, setFile] = useState(null);\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n    const { title } = UseFileSubTitle(query, math, location);\n\n    const shareOpened = useSelector((state) => state.viewUpdate.modals.share);\n    const modalLoading = useSelector((state) => state.viewUpdate.modalsLoading);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const CloseAllModals = useCallback(\n        () => dispatch(closeAllModals()),\n        [dispatch],\n    );\n    const OpenShareDialog = useCallback(\n        () => dispatch(openShareDialog()),\n        [dispatch],\n    );\n    const SetModalsLoading = useCallback(\n        (status) => dispatch(setModalsLoading(status)),\n        [dispatch],\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then((response) => {\n                if (response.data.access_token) {\n                    response.data.url = response.data.url.replaceAll(\n                        \"lng\",\n                        i18n.resolvedLanguage.toLowerCase(),\n                    );\n                    response.data.url = response.data.url.replaceAll(\n                        \"darkmode\",\n                        theme.palette.type === \"dark\" ? \"2\" : \"1\",\n                    );\n                }\n\n                setSession(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n\n    const handlePostMessage = (e) => {\n        console.log(\"Received PostMessage from \" + e.origin, e.data);\n        let msg;\n        try {\n            msg = JSON.parse(e.data);\n        } catch (e) {\n            return;\n        }\n\n        if (msg.MessageId === \"UI_Sharing\") {\n            setFile([\n                {\n                    name: title,\n                    id: query.get(\"id\"),\n                    type: \"file\",\n                },\n            ]);\n            OpenShareDialog();\n        }\n    };\n\n    useEffect(() => {\n        const frameholder = document.getElementById(\"frameholder\");\n        const office_frame = document.createElement(\"iframe\");\n        if (session && session.access_token && frameholder) {\n            office_frame.name = \"office_frame\";\n            office_frame.id = \"office_frame\";\n\n            // The title should be set for accessibility\n            office_frame.title = \"Office Frame\";\n\n            // This attribute allows true fullscreen mode in slideshow view\n            // when using PowerPoint's 'view' action.\n            office_frame.setAttribute(\"allowfullscreen\", \"true\");\n\n            // The sandbox attribute is needed to allow automatic redirection to the O365 sign-in page in the business user flow\n            office_frame.setAttribute(\n                \"sandbox\",\n                \"allow-scripts allow-same-origin allow-forms allow-popups allow-top-navigation allow-popups-to-escape-sandbox\",\n            );\n            frameholder.appendChild(office_frame);\n            document.getElementById(\"office_form\").submit();\n            window.addEventListener(\"message\", handlePostMessage, false);\n\n            return () => {\n                window.removeEventListener(\"message\", handlePostMessage, false);\n            };\n        }\n    }, [session]);\n\n    return (\n        <div className={classes.layout}>\n            <CreatShare\n                open={shareOpened}\n                onClose={() => CloseAllModals()}\n                modalsLoading={modalLoading}\n                setModalsLoading={SetModalsLoading}\n                selected={file}\n            />\n            {session && !session.access_token && (\n                <iframe title={\"ms\"} src={session.url} />\n            )}\n            {session && session.access_token && (\n                <>\n                    <form\n                        id=\"office_form\"\n                        name=\"office_form\"\n                        target=\"office_frame\"\n                        action={session.url}\n                        method=\"post\"\n                    >\n                        <input\n                            name=\"access_token\"\n                            value={session.access_token}\n                            type=\"hidden\"\n                        />\n                        <input\n                            name=\"access_token_ttl\"\n                            value={session.access_token_ttl}\n                            type=\"hidden\"\n                        />\n                    </form>\n                    <span id=\"frameholder\"></span>\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Dialog, makeStyles } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1),\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: 250,\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24,\n    },\n    button: {\n        marginTop: 8,\n    },\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const { t } = useTranslation();\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\",\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = (name) => (e) => {\n        setValue({\n            ...value,\n            [name]: e.target.value,\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"navbar.addTagDialog.selectFolder\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label={t(\"setting.annotation\")}\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label={t(\"setting.rootFolder\")}\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                {t(\"navbar.addTagDialog.selectFolder\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    {t(\"ok\", { ns: \"common\" })}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport { randomStr } from \"../../utils\";\nimport classNames from \"classnames\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    blur: {\n        filter: \"blur(8px)\",\n    },\n    container: {\n        position: \"relative\",\n        width: 128,\n    },\n    progress: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginLeft: -12,\n        marginTop: -12,\n        zIndex: 1,\n    },\n    qrcode: {\n        transition: \"all .3s ease-in\",\n    },\n}));\n\nexport default function AppQRCode() {\n    const [content, setContent] = useState(randomStr(32));\n    const [loading, setLoading] = useState(true);\n    const { t } = useTranslation(\"application\", { keyPrefix: \"setting\" });\n    const theme = useTheme();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const refresh = () => {\n        setLoading(true);\n        API.get(\"/user/session\")\n            .then((response) => {\n                setContent(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        refresh();\n        const interval = window.setInterval(refresh, 1000 * 45);\n        return () => {\n            window.clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <Box className={classes.container}>\n            {loading && (\n                <CircularProgress size={24} className={classes.progress} />\n            )}\n            <QRCodeSVG\n                className={classNames(classes.qrcode, {\n                    [classes.blur]: loading,\n                })}\n                value={content}\n            />\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useTheme, fade } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { useSelector } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport AppQRCode from \"./AppQRCode\";\n\nconst PhoneSkeleton = () => {\n    const theme = useTheme();\n\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x={0}\n            y={0}\n            enableBackground=\"new 0 0 444 908\"\n            viewBox=\"0 0 444 908\"\n        >\n            <path\n                fill={theme.palette.background.paper}\n                stroke={theme.palette.divider}\n                strokeMiterlimit=\"10\"\n                d=\"M378.8.5H65.6C29.6.5.5 29.6.5 65.6V843c0 35.9 29.1 65.1 65.1 65.1h313.2c35.9 0 65.1-29.1 65.1-65.1V65.6c0-36-29.2-65.1-65.1-65.1zm46.5 838.8c0 28-21.8 50.7-48.8 50.7H67.9c-26.9 0-48.8-22.7-48.8-50.7V74.1c0-28 21.8-50.7 48.8-50.7h35.3c4 0 7.2 3.4 7.2 7.5 0 14.9 11.6 27 26 27h171.5c14.4.1 26-12 26-27 0-4.1 3.2-7.5 7.2-7.5h35.4c26.9 0 48.8 22.7 48.8 50.7v765.2z\"\n            ></path>\n            <path\n                fill=\"none\"\n                stroke={theme.palette.divider}\n                strokeMiterlimit=\"10\"\n                strokeWidth=\"4\"\n                d=\"M243.3 37.3h-46.4c-2 0-3.6-1.6-3.6-3.6h0c0-2 1.6-3.6 3.6-3.6h46.4c2 0 3.6 1.6 3.6 3.6h0c0 2-1.6 3.6-3.6 3.6z\"\n            ></path>\n            <circle\n                cx=\"270\"\n                cy=\"33.7\"\n                r=\"5.5\"\n                fill=\"none\"\n                stroke={theme.palette.divider}\n                strokeMiterlimit=\"10\"\n                strokeWidth=\"4\"\n            ></circle>\n        </svg>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    phoneContainer: {\n        maxWidth: 450,\n        position: \"relative\",\n        marginX: \"auto\",\n        perspective: 1500,\n        transformStyle: \"preserve-3d\",\n        perspectiveOrigin: 0,\n    },\n    phoneFrame: {\n        position: \"relative\",\n        borderRadius: \"2.75rem\",\n        boxShadow: 1,\n        width: \"75% !important\",\n        marginX: \"auto\",\n        transform: \"rotateY(-35deg) rotateX(15deg) translateZ(0)\",\n    },\n    phoneImage: {\n        objectFit: \"cover\",\n        borderRadius: \"2.5rem\",\n        filter: theme.palette.type === \"dark\" ? \"brightness(0.7)\" : \"none\",\n    },\n    highlight: {\n        background: `linear-gradient(180deg, transparent 82%, ${fade(\n            theme.palette.secondary.main,\n            0.3,\n        )} 0%)`,\n    },\n    bold: {\n        fontWeight: 700,\n    },\n    frameContainer: {\n        verticalAlign: \"middle\",\n    },\n    grid: {\n        padding: theme.spacing(2),\n        paddingTop: 0,\n        paddingBottom: theme.spacing(4),\n    },\n    \"@global\": {\n        ol: {\n            paddingInlineStart: 24,\n        },\n        \"li::marker\": {\n            fontSize: \"1.25rem\",\n        },\n        li: {\n            marginBottom: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function AppPromotion() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"setting\" });\n    const theme = useTheme();\n    const title = useSelector((state) => state.siteConfig.title);\n\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.grid}>\n            <Grid item container alignItems={\"center\"} xs={12} md={7}>\n                <Box>\n                    <Box marginBottom={2}>\n                        <Typography\n                            variant=\"h4\"\n                            className={classes.bold}\n                            color=\"text.primary\"\n                        >\n                            <Trans\n                                i18nKey={\"setting.connectByiOS\"}\n                                values={{ title }}\n                                components={[\n                                    <Typography\n                                        key={0}\n                                        color={\"primary\"}\n                                        component={\"span\"}\n                                        variant={\"inherit\"}\n                                        className={classes.highlight}\n                                    />,\n                                ]}\n                            />\n                        </Typography>\n                    </Box>\n                    <Box color=\"text.secondary\">\n                        <ol>\n                            <li>\n                                <Typography variant=\"h6\" component=\"p\">\n                                    {t(\"downloadOurApp\")}\n                                </Typography>\n                                <Box marginTop={1}>\n                                    <Box\n                                        component={\"a\"}\n                                        href={\n                                            \"https://apps.apple.com/us/app/cloudreve/id1619480823\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        <Box\n                                            component={\"img\"}\n                                            src={\"/static/img/appstore.svg\"}\n                                        />\n                                    </Box>\n                                </Box>\n                            </li>\n                            <li>\n                                <Typography variant=\"h6\" component=\"p\">\n                                    {t(\"fillInEndpoint\")}\n                                </Typography>\n                                <Box marginTop={1}>\n                                    <AppQRCode />\n                                </Box>\n                            </li>\n                            <li>\n                                <Typography variant=\"h6\" component=\"p\">\n                                    {t(\"loginApp\")}\n                                </Typography>\n                            </li>\n                        </ol>\n                    </Box>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={5}>\n                <Box className={classes.phoneContainer}>\n                    <Box className={classes.phoneFrame}>\n                        <Box>\n                            <Box\n                                position={\"relative\"}\n                                zIndex={2}\n                                maxWidth={1}\n                                height={\"auto\"}\n                                className={classes.frameContainer}\n                            >\n                                <PhoneSkeleton />\n                            </Box>\n                            <Box\n                                position={\"absolute\"}\n                                top={\"2.4%\"}\n                                left={\"4%\"}\n                                width={\"92.4%\"}\n                                height={\"96%\"}\n                            >\n                                <Box\n                                    component={\"img\"}\n                                    src={\n                                        \"https://cloudreve.org/imgs/ios/\" +\n                                        (theme.palette.type === \"light\"\n                                            ? \"main.png\"\n                                            : \"main_dark.jpg\")\n                                    }\n                                    alt=\"Image Description\"\n                                    effect=\"blur\"\n                                    width={1}\n                                    height={1}\n                                    className={classes.phoneImage}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Cloud, CloudOff, Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\nimport Link from \"@material-ui/core/Link\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useTranslation } from \"react-i18next\";\nimport AppPromotion from \"./AppPromotion\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { Pencil, PencilOff } from \"mdi-material-ui\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    copy: {\n        marginLeft: 10,\n    },\n}));\n\nexport default function WebDAV() {\n    const { t } = useTranslation();\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const appPromotion = useSelector((state) => state.siteConfig.app_promotion);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const copyToClipboard = (text) => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(text);\n            ToggleSnackbar(\"top\", \"center\", t(\"setting.copied\"), \"success\");\n        } else {\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"setting.pleaseManuallyCopy\"),\n                \"warning\",\n            );\n        }\n    };\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then((response) => {\n                setAccounts(response.data.accounts);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = (id) => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const toggleAccountReadonly = (id) => {\n        const account = accounts[id];\n        API.patch(\"/webdav/accounts\", {\n            id: account.ID,\n            readonly: !account.Readonly,\n        })\n            .then((response) => {\n                account.Readonly = response.data.readonly;\n                const accountCopy = [...accounts];\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const toggleAccountUseProxy = (id) => {\n        const account = accounts[id];\n        API.patch(\"/webdav/accounts\", {\n            id: account.ID,\n            use_proxy: !account.UseProxy,\n        })\n            .then((response) => {\n                account.UseProxy = response.data.use_proxy;\n                const accountCopy = [...accounts];\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = (account) => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name,\n        })\n            .then((response) => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path,\n                        Readonly: account.Readonly,\n                    },\n                    ...accounts,\n                ]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                {t(\"navbar.connect\")}\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label={t(\"setting.webdavAccounts\")} />\n                    {appPromotion && <Tab label={t(\"setting.iOSApp\")} />}\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                {t(\"setting.webdavHint\", {\n                                    url: window.location.origin + \"/dav\",\n                                    name: user.user_name,\n                                })}\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>\n                                                {t(\"setting.annotation\")}\n                                            </TableCell>\n                                            <TableCell>\n                                                {t(\"login.password\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.rootFolder\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.createdAt\")}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {t(\"setting.action\")}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Password}\n                                                    <Link\n                                                        className={classes.copy}\n                                                        onClick={() =>\n                                                            copyToClipboard(\n                                                                row.Password,\n                                                            )\n                                                        }\n                                                        href={\"javascript:void\"}\n                                                    >\n                                                        {t(\"copyToClipboard\", {\n                                                            ns: \"common\",\n                                                        })}\n                                                    </Link>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale={t(\n                                                            \"timeAgoLocaleCode\",\n                                                            {\n                                                                ns: \"common\",\n                                                            },\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <Tooltip\n                                                        placement=\"top\"\n                                                        title={\n                                                            row.Readonly\n                                                                ? t(\n                                                                      \"setting.readonlyOff\",\n                                                                  )\n                                                                : t(\n                                                                      \"setting.readonlyOn\",\n                                                                  )\n                                                        }\n                                                        onClick={() =>\n                                                            toggleAccountReadonly(\n                                                                id,\n                                                            )\n                                                        }\n                                                    >\n                                                        <IconButton>\n                                                            <ToggleIcon\n                                                                on={\n                                                                    row.Readonly\n                                                                }\n                                                                onIcon={\n                                                                    <PencilOff\n                                                                        fontSize={\n                                                                            \"small\"\n                                                                        }\n                                                                    />\n                                                                }\n                                                                offIcon={\n                                                                    <Pencil\n                                                                        fontSize={\n                                                                            \"small\"\n                                                                        }\n                                                                    />\n                                                                }\n                                                            />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                    {user.group\n                                                        .allowWebDAVProxy && (\n                                                        <Tooltip\n                                                            placement=\"top\"\n                                                            title={\n                                                                row.UseProxy\n                                                                    ? t(\n                                                                          \"setting.useProxyOff\",\n                                                                      )\n                                                                    : t(\n                                                                          \"setting.useProxyOn\",\n                                                                      )\n                                                            }\n                                                            onClick={() =>\n                                                                toggleAccountUseProxy(\n                                                                    id,\n                                                                )\n                                                            }\n                                                        >\n                                                            <IconButton>\n                                                                <ToggleIcon\n                                                                    on={\n                                                                        row.UseProxy\n                                                                    }\n                                                                    onIcon={\n                                                                        <CloudOff\n                                                                            fontSize={\n                                                                                \"small\"\n                                                                            }\n                                                                        />\n                                                                    }\n                                                                    offIcon={\n                                                                        <Cloud\n                                                                            fontSize={\n                                                                                \"small\"\n                                                                            }\n                                                                        />\n                                                                    }\n                                                                />\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    )}\n                                                    <Tooltip\n                                                        placement=\"top\"\n                                                        title={t(\n                                                            \"setting.delete\",\n                                                        )}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <IconButton\n                                                            fontSize={\"small\"}\n                                                        >\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                {accounts.length === 0 && (\n                                    <Nothing primary={t(\"setting.listEmpty\")} />\n                                )}\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                {t(\"setting.createNewAccount\")}\n                            </Button>\n                        </div>\n                    )}\n                    {tab === 1 && <AppPromotion />}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\",\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    noWrap: {\n        wordBreak: \"keepAll\",\n    },\n    footer: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function Tasks() {\n    const { t } = useTranslation();\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const loadList = (page) => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then((response) => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return `${res.msg}: ${res.error}`;\n        } catch (e) {\n            return t(\"uploader.unknownStatus\");\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                {t(\"navbar.taskQueue\")}\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">\n                                {t(\"setting.createdAt\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.taskType\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.taskStatus\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.lastProgress\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">\n                                {t(\"setting.errorDetails\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    {formatLocalTime(row.create_date)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {tasks.length === 0 && (\n                    <Nothing primary={t(\"setting.listEmpty\")} />\n                )}\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    Avatar,\n    Grid,\n    Paper,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tabs,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    userNav: {\n        borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\",\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\",\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\",\n    },\n    th: {\n        minWidth: \"106px\",\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    tableLink: {\n        cursor: \"pointer\",\n    },\n    navigator: {\n        padding: theme.spacing(2),\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\",\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\",\n    },\n    infoContainer: {\n        marginTop: \"30px\",\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0,\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order,\n        )\n            .then((response) => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\",\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\",\n        );\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label={t(\"setting.allShares\")} />\n                            <Tab label={t(\"setting.trendingShares\")} />\n                            <Tab label={t(\"setting.profile\")} />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.uid\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.nickname\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.group\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.totalShares\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.regTime\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>\n                                                    {t(\"setting.fileName\")}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    {t(\"setting.shareDate\")}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    {t(\n                                                        \"setting.downloadNumber\",\n                                                    )}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    {t(\"setting.viewNumber\")}\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key,\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[\" +\n                                                                      t(\n                                                                          \"share.expired\",\n                                                                      ) +\n                                                                      \"]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {formatLocalTime(\n                                                                row.create_date,\n                                                            )}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                ),\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10,\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\",\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(ProfileCompoment))));\n\nexport default Profile;\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n}));\n\nexport default function Authn(props) {\n    const { t } = useTranslation();\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const deleteCredential = (id) => {\n        API.patch(\"/user/setting/authn\", {\n            id: id,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"setting.authenticatorRemoved\"),\n                    \"success\",\n                );\n                props.remove(id);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"setting.browserNotSupported\"),\n                \"warning\",\n            );\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then((response) => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge,\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id,\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id,\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey,\n                });\n            })\n            .then((credential) => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                        },\n                    }),\n                );\n            })\n            .then((response) => {\n                props.add(response.data);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"setting.authenticatorAdded\"),\n                    \"success\",\n                );\n                return;\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>{t(\"setting.removedAuthenticator\")}</DialogTitle>\n                <DialogContent>\n                    {t(\"setting.removedAuthenticatorConfirm\")}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                {t(\"setting.hardwareAuthenticator\")}\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map((v) => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60,\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={t(\"setting.addNewAuthenticator\")}\n                        />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n    refreshTimeZone,\n    timeZone,\n    validateTimeZone,\n} from \"../../utils/datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function TimeZoneDialog(props) {\n    const { t } = useTranslation();\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const saveZoneInfo = () => {\n        if (!validateTimeZone(timeZoneValue)) {\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\n            return;\n        }\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\n        refreshTimeZone();\n        props.onClose();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"setting.timeZone\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <FormControl>\n                    <TextField\n                        label={t(\"setting.timeZoneCode\")}\n                        value={timeZoneValue}\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={timeZoneValue === \"\"}\n                        onClick={() => saveZoneInfo()}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch,\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport {\n    Brightness3,\n    GitHub,\n    Home,\n    ListAlt,\n    PermContactCalendar,\n    Schedule,\n    Translate,\n} from \"@material-ui/icons\";\nimport Authn from \"./Authn\";\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\nimport TimeZoneDialog from \"../Modals/TimeZone\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, withTranslation } from \"react-i18next\";\nimport { selectLanguage } from \"../../redux/viewUpdate/action\";\nimport OptionSelector from \"../Modals/OptionSelector\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    infoText: {\n        marginRight: \"17px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            maxWidth: 100,\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n        },\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            maxWidth: 100,\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n        },\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\",\n        },\n    },\n    desText: {\n        marginTop: \"10px\",\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\",\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\",\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\",\n    },\n    paddingBottom: {\n        marginBottom: \"30px\",\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2),\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: (color) => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: (method) => {\n            dispatch(changeViewMethod(method));\n        },\n        selectLanguage: () => {\n            dispatch(selectLanguage());\n        },\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        changeTimeZone: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\",\n                },\n                options: [],\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: [],\n        },\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false,\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                  ? \"smallIcon\"\n                  : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then((response) => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\",\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.avatarUpdated\"),\n                    \"success\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\",\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.nickChanged\"),\n                    \"success\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\",\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.avatarUpdated\"),\n                    \"success\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.settingSaved\"),\n                    \"success\",\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage,\n                    },\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"login.passwordNotMatch\"),\n                \"warning\",\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\",\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.passwordReset\"),\n                    \"success\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\",\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.themeColorChanged\"),\n                    \"success\",\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\",\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd,\n            })\n            .then((response) => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\",\n                    );\n                    this.setState({\n                        loading: \"\",\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\",\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then((response) => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\",\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.settingSaved\"),\n                    \"success\",\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor,\n                    },\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\",\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = (current) => {\n        const newMode =\n            current === null ? \"light\" : current === \"light\" ? \"dark\" : null;\n        this.props.toggleDaylightMode();\n        Auth.SetPreference(\"theme_mode\", newMode);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.profile\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary={t(\"setting.avatar\")} />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.uid\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.nickname\")} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"login.email\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.group\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.regTime\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {formatLocalTime(user.created_at)}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.privacyAndSecurity\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.profilePage\")}\n                                />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.accountPassword\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.2fa\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? t(\"setting.disabled\")\n                                            : t(\"setting.enabled\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={(credential) => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential,\n                                    ],\n                                },\n                            });\n                        }}\n                        remove={(id) => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter((v) => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials,\n                                },\n                            });\n                        }}\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.appearance\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.themeColor\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor} />\n                                    <div className={classes.secondColor} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.darkMode\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? t(\"setting.enabled\")\n                                                : t(\"setting.disabled\"))}\n                                        {dark === null &&\n                                            t(\"setting.syncWithSystem\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.fileList\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            t(\"fileManager.gridViewLarge\")}\n                                        {this.props.viewMethod === \"list\" &&\n                                            t(\"fileManager.listView\")}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" &&\n                                            t(\"fileManager.gridViewSmall\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() =>\n                                    this.setState({ changeTimeZone: true })\n                                }\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Schedule />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.timeZone\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {timeZone}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() => this.props.selectLanguage()}\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Translate />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.language\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.webdavServer\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.userName\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.manageAccount\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.aboutCloudreve\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\",\n                                    )\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.githubRepo\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.homepage\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <div className={classes.paddingBottom} />\n                </div>\n                <TimeZoneDialog\n                    onClose={() => this.setState({ changeTimeZone: false })}\n                    open={this.state.changeTimeZone}\n                />\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.avatar\")}</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={t(\"setting.uploadImage\")} />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary={t(\"setting.useGravatar\")}\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>{t(\"setting.changeNick\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label={t(\"setting.nickname\")}\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"login.resetPassword\")}</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"setting.originalPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"login.newPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"login.repeatNewPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor\n                            ? t(\"setting.disable2FA\")\n                            : t(\"setting.enable2FA\")}\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCodeSVG\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        {t(\"setting.2faDescription\")}\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        {t(\"setting.inputCurrent2FACode\")}\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label={t(\"login.input2FACode\")}\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor\n                                ? t(\"setting.disable2FA\")\n                                : t(\"setting.enable2FA\")}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.themeColor\")}</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                ),\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.webdavServer\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.userName\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <OptionSelector />\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(UserSettingCompoment))));\n\nexport default UserSetting;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { EmailOutlined, VpnKeyOutlined } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3,\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nfunction Register() {\n    const { t } = useTranslation();\n\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n\n    const title = useSelector((state) => state.siteConfig.title);\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const history = useHistory();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const classes = useStyles();\n\n    const register = (e) => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.passwordNotMatch\"),\n                \"warning\",\n            );\n            return;\n        }\n\n        setLoading(true);\n        if (!isValidate.current.isValidate && regCaptcha) {\n            validate(() => register(e), setLoading);\n            return;\n        }\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"login.signUpSuccess\"),\n                        \"success\",\n                    );\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.sinUpTitle\", { title })}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <TextField\n                                    variant={\"outlined\"}\n                                    label={t(\"login.email\")}\n                                    inputProps={{\n                                        name: \"email\",\n                                        type: \"email\",\n                                        id: \"email\",\n                                    }}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <EmailOutlined />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <TextField\n                                    variant={\"outlined\"}\n                                    label={t(\"login.password\")}\n                                    inputProps={{\n                                        name: \"password\",\n                                        type: \"password\",\n                                        id: \"password\",\n                                    }}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <VpnKeyOutlined />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    onChange={handleInputChange(\"password\")}\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <TextField\n                                    label={t(\"login.repeatPassword\")}\n                                    variant={\"outlined\"}\n                                    inputProps={{\n                                        name: \"pwdRepeat\",\n                                        type: \"password\",\n                                        id: \"pwdRepeat\",\n                                    }}\n                                    onChange={handleInputChange(\n                                        \"password_repeat\",\n                                    )}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <VpnKeyOutlined />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && <CaptchaRender />}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={\n                                    loading ||\n                                    (regCaptcha ? captchaLoading : false)\n                                }\n                                className={classes.submit}\n                            >\n                                {t(\"login.signUp\")}\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link component={RouterLink} to={\"/login\"}>\n                                    {t(\"login.backToSingIn\")}\n                                </Link>\n                            </div>\n                            <div>\n                                <Link component={RouterLink} to={\"/forget\"}>\n                                    {t(\"login.forgetPassword\")}\n                                </Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.activateTitle\")}\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            {t(\"login.activateDescription\")}\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3,\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const { t } = useTranslation();\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\"),\n        )\n            .then((response) => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {t(\"login.activateSuccess\")}\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        {t(\"login.accountActivated\")}\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        {t(\"login.backToSingIn\")}\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { VpnKeyOutlined } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3,\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const { t } = useTranslation();\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled,\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const history = useHistory();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.passwordNotMatch\"),\n                \"warning\",\n            );\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.passwordReset\"),\n                    \"success\",\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {t(\"login.findMyPassword\")}\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <TextField\n                            variant={\"outlined\"}\n                            label={t(\"login.newPassword\")}\n                            inputProps={{\n                                type: \"password\",\n                                id: \"pwd\",\n                                name: \"pwd\",\n                            }}\n                            InputProps={{\n                                startAdornment: !isMobile && (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyOutlined />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <TextField\n                            variant={\"outlined\"}\n                            label={t(\"login.repeatNewPassword\")}\n                            inputProps={{\n                                type: \"password\",\n                                id: \"pwdRepeat\",\n                                name: \"pwdRepeat\",\n                            }}\n                            InputProps={{\n                                startAdornment: !isMobile && (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyOutlined />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {t(\"login.resetPassword\")}\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link component={RouterLink} to={\"/login\"}>\n                            {t(\"login.backToSingIn\")}\n                        </Link>\n                    </div>\n                    <div>\n                        {registerEnabled && (\n                            <Link component={RouterLink} to={\"/signup\"}>\n                                {t(\"login.signUpAccount\")}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { EmailOutlined } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3,\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction Reset() {\n    const { t } = useTranslation();\n\n    const [input, setInput] = useState({\n        email: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(\n        (state) => state.siteConfig.forgetCaptcha,\n    );\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled,\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && forgetCaptcha) {\n            validate(() => submit(e), setLoading);\n            return;\n        }\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            ...captchaParamsRef.current,\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.resetEmailSent\"),\n                    \"success\",\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {t(\"login.findMyPassword\")}\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <TextField\n                            variant={\"outlined\"}\n                            label={t(\"login.email\")}\n                            inputProps={{\n                                name: \"email\",\n                                id: \"email\",\n                                type: \"email\",\n                            }}\n                            InputProps={{\n                                startAdornment: !isMobile && (\n                                    <InputAdornment position=\"start\">\n                                        <EmailOutlined />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && <CaptchaRender />}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={\n                            loading || (forgetCaptcha ? captchaLoading : false)\n                        }\n                        className={classes.submit}\n                    >\n                        {t(\"login.sendMeAnEmail\")}\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link component={RouterLink} to={\"/login\"}>\n                            {t(\"login.backToSingIn\")}\n                        </Link>\n                    </div>\n                    <div>\n                        {registerEnabled && (\n                            <Link component={RouterLink} to={\"/signup\"}>\n                                {t(\"login.signUpAccount\")}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    List,\n    Slider,\n    withStyles,\n} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport PlayNext from \"@material-ui/icons/SkipNext\";\nimport PlayPrev from \"@material-ui/icons/SkipPrevious\";\nimport Pause from \"@material-ui/icons/Pause\";\nimport { Repeat, RepeatOne, Shuffle } from \"@material-ui/icons\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { audioPreviewSuffix } from \"../../config\";\nimport { baseURL } from \"../../middleware/Api\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    audioPreviewSetIsOpen,\n    audioPreviewSetPlaying,\n    showAudioPreview,\n} from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    list: {\n        //maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: \"relative\",\n        overflow: \"auto\",\n        maxHeight: 300,\n    },\n    slider_root: {\n        \"vertical-align\": \"middle\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.audioPreview.first,\n        other: state.explorer.audioPreview.other,\n        isOpen: state.explorer.audioPreview.isOpen,\n        playingName: state.explorer.audioPreview.playingName,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showAudioPreview: (first) => {\n            dispatch(showAudioPreview(first));\n        },\n        audioPreviewSetIsOpen: (first) => {\n            dispatch(audioPreviewSetIsOpen(first));\n        },\n        audioPreviewSetPlaying: (playingName, paused) => {\n            dispatch(audioPreviewSetPlaying(playingName, paused));\n        },\n    };\n};\n\nclass MusicPlayerComponent extends Component {\n    state = {\n        items: [],\n        currentIndex: 0,\n        //isOpen: false,\n        //isPlay:false,\n        currentTime: 0,\n        duration: 0,\n        progressText: \"00:00/00:00\",\n        looptype: 0,\n    };\n    myAudioRef = React.createRef();\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newItem = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newItem);\n                this.setState({\n                    currentIndex: firstOne,\n                    items: items,\n                    //isOpen: true,\n                });\n                this.props.audioPreviewSetIsOpen(true);\n                this.props.showAudioPreview(\n                    explorer.initState.audioPreview.first,\n                );\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (audioPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name,\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newItem = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newItem);\n                }\n            });\n            this.setState({\n                currentIndex: firstOne,\n                items: items,\n                //isOpen: true,\n            });\n            this.props.audioPreviewSetIsOpen(true);\n            this.props.showAudioPreview(explorer.initState.audioPreview.first);\n        }\n    };\n\n    handleItemClick = (currentIndex) => () => {\n        this.setState({\n            currentIndex: currentIndex,\n        });\n    };\n\n    handleClose = () => {\n        /*this.setState({\n            isOpen: false,\n        });*/\n        this.setState({\n            currentIndex: -1,\n        });\n        this.pause();\n        this.props.audioPreviewSetPlaying(null, false);\n        this.props.audioPreviewSetIsOpen(false);\n    };\n    backgroundPlay = () => {\n        this.props.audioPreviewSetIsOpen(false);\n    };\n\n    componentDidMount() {\n        if (this.myAudioRef.current) {\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentDidUpdate() {\n        if (this.myAudioRef.current) {\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentWillUnmount() {\n        this.unbindEvents(this.myAudioRef.current);\n    }\n\n    bindEvents = (ele) => {\n        if (ele) {\n            ele.addEventListener(\"canplay\", this.readyPlay);\n            ele.addEventListener(\"ended\", this.loopnext);\n            ele.addEventListener(\"timeupdate\", this.timeUpdate);\n        }\n    };\n\n    unbindEvents = (ele) => {\n        if (ele) {\n            ele.removeEventListener(\"canplay\", this.readyPlay);\n            ele.removeEventListener(\"ended\", this.loopnext);\n            ele.removeEventListener(\"timeupdate\", this.timeUpdate);\n        }\n    };\n\n    readyPlay = () => {\n        this.play();\n    };\n\n    formatTime = (s) => {\n        if (isNaN(s)) return \"00:00\";\n        const minute = Math.floor(s / 60);\n        const second = Math.floor(s % 60);\n        return (\n            `${minute}`.padStart(2, \"0\") + \":\" + `${second}`.padStart(2, \"0\")\n        );\n    };\n\n    timeUpdate = () => {\n        const currentTime = Math.floor(this.myAudioRef.current.currentTime); //this.myAudioRef.current.currentTime;//\n        this.setState({\n            currentTime: currentTime,\n            duration: this.myAudioRef.current.duration,\n            progressText:\n                this.formatTime(currentTime) +\n                \"/\" +\n                this.formatTime(this.myAudioRef.current.duration),\n        });\n    };\n\n    play = () => {\n        this.myAudioRef.current.play();\n        /*this.setState({\n            isPlay: true\n        });*/\n        this.props.audioPreviewSetPlaying(\n            this.state.items[this.state.currentIndex].intro,\n            false,\n        );\n    };\n\n    pause = () => {\n        if (this.myAudioRef.current) {\n            this.myAudioRef.current.pause();\n        }\n        /*this.setState({\n            isPlay: false\n        })*/\n        this.props.audioPreviewSetPlaying(\n            this.state.items[this.state.currentIndex]?.intro,\n            true,\n        );\n    };\n\n    playOrPaues = () => {\n        if (this.state.isPlay) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    };\n    changeLoopType = () => {\n        let lt = this.state.looptype + 1;\n        if (lt >= 3) {\n            lt = 0;\n        }\n        this.setState({\n            looptype: lt,\n        });\n    };\n    loopnext = () => {\n        let index = this.state.currentIndex;\n        if (this.state.looptype == 0) {\n            //all\n            index = index + 1;\n            if (index >= this.state.items.length) {\n                index = 0;\n            }\n        } else if (this.state.looptype == 1) {\n            //single\n            //index=index;\n        } else if (this.state.looptype == 2) {\n            //random\n            if (this.state.items.length <= 2) {\n                index = index + 1;\n                if (index >= this.state.items.length) {\n                    index = 0;\n                }\n            } else {\n                while (index == this.state.currentIndex) {\n                    index = Math.floor(Math.random() * this.state.items.length);\n                }\n            }\n        }\n        if (this.state.currentIndex == index) {\n            this.myAudioRef.current.currentTime = 0;\n            this.play();\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    prev = () => {\n        let index = this.state.currentIndex - 1;\n        if (index < 0) {\n            index = this.state.items.length - 1;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    next = () => {\n        let index = this.state.currentIndex + 1;\n        if (index >= this.state.items.length) {\n            index = 0;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    handleProgress = (e, newValue) => {\n        this.myAudioRef.current.currentTime = newValue;\n    };\n\n    render() {\n        const { currentIndex, items } = this.state;\n        const { isOpen, classes, t } = this.props;\n        return (\n            <Dialog\n                open={isOpen}\n                onClose={this.backgroundPlay}\n                aria-labelledby=\"form-dialog-title\"\n                maxWidth=\"xs\"\n                fullWidth\n                keepMounted\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"fileManager.musicPlayer\")}\n                </DialogTitle>\n                <DialogContent>\n                    <List className={classes.list} dense>\n                        {items.map((value, idx) => {\n                            const labelId = `label-${value.intro}`;\n                            return (\n                                <ListItem\n                                    key={value.src}\n                                    dense\n                                    button\n                                    onClick={this.handleItemClick(idx)}\n                                    selected={idx === currentIndex}\n                                >\n                                    <ListItemIcon>\n                                        {idx === currentIndex ? (\n                                            <PlayArrow />\n                                        ) : (\n                                            <MusicNote />\n                                        )}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        id={labelId}\n                                        primary={`${value.intro}`}\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                    <audio\n                        ref={this.myAudioRef}\n                        src={items[currentIndex]?.src}\n                    />\n                    <div style={{ \"padding-top\": 8 }} />\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs>\n                            <Slider\n                                classes={{ root: classes.slider_root }}\n                                value={this.state.currentTime}\n                                onChange={this.handleProgress}\n                                step={1}\n                                min={0}\n                                max={this.state.duration}\n                                aria-labelledby=\"continuous-slider\"\n                            />\n                        </Grid>\n                        <Grid item>{this.state.progressText}</Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        justifyContent=\"center\"\n                        justify=\"center\"\n                    >\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.changeLoopType}\n                            >\n                                {this.state.looptype === 0 ? (\n                                    <Repeat />\n                                ) : this.state.looptype === 1 ? (\n                                    <RepeatOne />\n                                ) : (\n                                    <Shuffle />\n                                )}\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.prev}\n                            >\n                                <PlayPrev />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.pause}\n                            >\n                                <Pause />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.play}\n                            >\n                                <PlayArrow />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.next}\n                            >\n                                <PlayNext />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose}>\n                        {t(\"fileManager.closeAndStop\")}\n                    </Button>\n                    <Button onClick={this.backgroundPlay}>\n                        {t(\"fileManager.playInBackground\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nMusicPlayerComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst MusicPlayer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withRouter(withTranslation()(MusicPlayerComponent))));\n\nexport default MusicPlayer;\n","import React, { Suspense, useCallback, useMemo, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\n\nconst ReactReader = React.lazy(() =>\n    import(/* webpackChunkName: \"ReactReader\" */ \"react-reader\").then((m) => ({\n        default: m.ReactReader,\n    })),\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        height: \"calc(100vh - 64px)\",\n    },\n    paper: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function EpubViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const { path } = UseFileSubTitle(query, math, location);\n    const isShare = pathHelper.isSharePage(location.pathname);\n\n    const [currentLocation, setLocation] = useState(null);\n    const locationChanged = (epubcifi) => {\n        setLocation(epubcifi);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch],\n    );\n\n    const fileUrl = useMemo(\n        () =>\n            getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\"),\n            ),\n        [id, location, path],\n    );\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Suspense fallback={<TextLoading />}>\n                <ReactReader\n                    location={currentLocation}\n                    locationChanged={locationChanged}\n                    epubInitOptions={{\n                        openAs: \"epub\",\n                    }}\n                    showToc={false}\n                    className={classes.container}\n                    url={fileUrl}\n                />\n            </Suspense>\n        </div>\n    );\n}\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport NoAuthRoute from \"./middleware/NoAuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nimport MusicPlayer from \"./component/FileManager/MusicPlayer\";\nimport EpubViewer from \"./component/Viewer/Epub\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PDFViewer = React.lazy(\n    () => import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\"),\n);\n\nexport default function App() {\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const { t } = useTranslation();\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main,\n                },\n            },\n            shape: {\n                ...themeConfig.shape,\n                borderRadius: 12,\n            },\n            overrides: {\n                MuiButton: {\n                    root: {\n                        textTransform: \"none\",\n                    },\n                },\n                MuiTab: {\n                    root: {\n                        textTransform: \"none\",\n                    },\n                },\n            },\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main,\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0,\n        },\n        toolbar: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\",\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}epub`} isLogin={isLogin}>\n                                <EpubViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <Route\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </Route>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <NoAuthRoute\n                                exact\n                                path={`${path}login`}\n                                isLogin={isLogin}\n                            >\n                                <LoginForm />\n                            </NoAuthRoute>\n\n                            <NoAuthRoute\n                                exact\n                                path={`${path}signup`}\n                                isLogin={isLogin}\n                            >\n                                <Register />\n                            </NoAuthRoute>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/epub(/)*`}>\n                                <EpubViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound\n                                    msg={t(\"pageNotFound\", { ns: \"common\" })}\n                                />\n                            </Route>\n                        </Switch>\n                    </main>\n                    <MusicPlayer />\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\nimport {\n    changeViewMethod,\n    setSiteConfig,\n    toggleSnackbar,\n} from \"../redux/explorer\";\nimport i18next from \"../i18n\";\nimport { msDocPreviewSuffix, setWopiExts } from \"../config\";\n\nconst initUserConfig = (siteConfig) => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = (rawStore) => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n\n    return rawStore;\n};\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function (response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data),\n            );\n\n            // 更新 office WOPI 预览后缀\n            if (response.data.wopi_exts) {\n                setWopiExts(response.data.wopi_exts);\n            }\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method),\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method),\n                    );\n                }\n            }\n        })\n        .catch(function (error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"errLoadingSiteConfig\", { ns: \"common\" }) +\n                        error.message,\n                    \"error\",\n                ),\n            );\n        });\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { CloudreveFile, SortMethod } from \"../../types\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod: SortMethod;\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        remoteDownloadTorrent: CloudreveFile | null;\n        getSource: string;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n        directoryDownloading: boolean;\n        directoryDownloadLog: string;\n        directoryDownloadDone: boolean;\n        option?: {\n            options: {\n                open: boolean;\n                key: string;\n                name: string;\n                description?: string;\n            }[];\n            title: string;\n            callback: any;\n            onClose: any;\n        };\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n    pagination: {\n        page: number;\n        size: number;\n    };\n    openFileSelector: number;\n    openFolderSelector: number;\n    shareInfo: any;\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: Auth.GetPreferenceWithDefault(\"sort\", \"timePos\"),\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        remoteDownloadTorrent: null,\n        getSource: \"\",\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\",\n        directoryDownloading: false,\n        directoryDownloadLog: \"\",\n        directoryDownloadDone: false,\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\",\n    },\n    pagination: {\n        page: 1,\n        size: Auth.GetPreferenceWithDefault(\"pagination\", 100),\n    },\n    openFileSelector: 0,\n    openFolderSelector: 0,\n    shareInfo: null,\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open,\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method,\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status,\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg,\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true,\n                }),\n                contextOpen: false,\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor,\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor,\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                    remoteDownloadTorrent: action.selected,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: action.source,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DIRECTORY_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    directoryDownloading: action.downloading,\n                    directoryDownloadLog: action.log,\n                    directoryDownloadDone: action.done,\n                }),\n                contextOpen: false,\n            });\n        case \"CLOSE_CONTEXT_MENU\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    remoteDownloadTorrent: null,\n                    getSource: \"\",\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false,\n                    option: undefined,\n                    directoryDownloading: false,\n                    directoryDownloadLog: \"\",\n                    directoryDownloadDone: false,\n                }),\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color,\n                },\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status,\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status,\n            };\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh,\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true,\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType,\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title,\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading,\n            };\n        case \"SET_OPTION_MODAL\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    option: action.option,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_FILE_SELECTOR\":\n            return {\n                ...state,\n                openFileSelector: state.openFileSelector + 1,\n                contextOpen: false,\n            };\n        case \"OPEN_FOLDER_SELECTOR\":\n            return {\n                ...state,\n                openFolderSelector: state.openFolderSelector + 1,\n                contextOpen: false,\n            };\n        case \"SET_PAGINATION\":\n            return {\n                ...state,\n                pagination: action.pagination,\n            };\n        case \"SET_SHARE_INFO\":\n            return {\n                ...state,\n                shareInfo: action.shareInfo,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\nimport { connectRouter } from \"connected-react-router\";\nimport i18next from \"../i18n\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path,\n        }),\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\",\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\",\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\",\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\",\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\",\n                },\n            },\n        },\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_type: \"normal\",\n        tcaptcha_captcha_app_id: \"\",\n        wopi_exts: [],\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true,\n    },\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\",\n                            },\n                        },\n                    },\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\",\n                        },\n                    },\n                },\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme],\n                    }),\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config,\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh,\n                }),\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/\" + i18next.t(\"fileManager.searchResult\"),\n                    refresh: !state.explorer.search\n                        ? state.navigator.refresh\n                        : !state.navigator.refresh,\n                }),\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (history) => (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({\n        viewUpdate,\n        explorer,\n        router: connectRouter(history),\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\n    return {\n        ...appState,\n        ...combinedState,\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\",\n    },\n    h2: {\n        margin: \"15px 0px\",\n    },\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        if (this.state.hasError) {\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>{t(\"renderError\")}</h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>{t(\"errorDetails\")}</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withTranslation([\"common\"])(withStyles(styles)(ErrorBoundary));\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nimport { createBrowserHistory } from \"history\";\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\nimport i18next from \"./i18n\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport { removeI18nCache } from \"./utils\";\n\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\nserviceWorker.register({\n    onUpdate: (registration) => {\n        removeI18nCache();\n        alert(i18next.t(\"newVersionRefresh\", { ns: \"common\" }));\n        if (registration && registration.waiting) {\n            registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\n        }\n        window.location.reload();\n    },\n});\n\nexport const history = createBrowserHistory();\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nconst store = createStore(cloureveApp(history), reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <Suspense fallback={<PageLoading />}>\n        <ErrorBoundary>\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <Switch>\n                        <Route path=\"/admin\">\n                            <Admin />\n                        </Route>\n                        <Route exact path=\"\">\n                            <App />\n                        </Route>\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        </ErrorBoundary>\n    </Suspense>,\n    document.getElementById(\"root\"),\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction,\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import React from \"react\";\nimport { PackageVariant } from \"mdi-material-ui\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    emptyContainer: {\n        bottom: \"0\",\n\n        color: theme.palette.action.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.action.disabled,\n    },\n    emptyInfoSmall: {\n        color: theme.palette.action.disabled,\n    },\n}));\n\nexport default function Nothing({ primary, secondary, top = 20, size = 1 }) {\n    const classes = useStyles();\n    return (\n        <div\n            style={{\n                margin: `${50 * size}px auto`,\n                paddingTop: top,\n            }}\n            className={classes.emptyContainer}\n        >\n            <PackageVariant\n                style={{\n                    fontSize: 160 * size,\n                }}\n            />\n            <div\n                style={{\n                    fontSize: 25 * size,\n                }}\n                className={classes.emptyInfoBig}\n            >\n                {primary}\n            </div>\n            {secondary !== \"\" && (\n                <div className={classes.emptyInfoSmall}>{secondary}</div>\n            )}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport {\n    IconButton,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MenuList,\n    withStyles,\n} from \"@material-ui/core\";\nimport Sort, { sortMethodFuncs } from \"./Sort\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconWhite: {\n        color: theme.palette.common.white,\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white,\n        },\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\",\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\",\n    },\n    sortWrapper: {\n        textAlign: \"right\",\n        paddingRight: \"30px\",\n    },\n    sortButton: {\n        padding: \"0\",\n    },\n});\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        sortBy: \"\",\n        dirList: [],\n        selectedTarget: null,\n    };\n    /**\n     * the source dir list from api `/directory`\n     *\n     * `state.dirList` is a sorted copy of it\n     */\n    sourceDirList = [];\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(!this.props.search ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = (toBeLoad) => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad),\n        )\n            .then((response) => {\n                const dirList = response.data.objects.filter((x) => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex((value) => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                dirList.forEach((value) => {\n                    value.displayName = value.name;\n                });\n                this.sourceDirList = dirList;\n                this.setState(\n                    {\n                        presentPath: toBeLoad,\n                        selectedTarget: null,\n                    },\n                    this.updateDirList,\n                );\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\",\n                );\n            });\n    };\n\n    handleSelect = (index) => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    /**\n     * change sort type\n     * @param {Event} event\n     */\n    onChangeSort = (sortBy) => {\n        this.setState({ sortBy }, this.updateDirList);\n    };\n\n    /**\n     * sort dir list, and handle parent dirs\n     */\n    updateDirList = () => {\n        const { state, sourceDirList } = this;\n        const { sortBy, presentPath } = state;\n\n        // copy\n        const dirList = [...sourceDirList];\n        // sort\n        const sortMethod = sortMethodFuncs[sortBy];\n        if (sortMethod) dirList.sort(sortMethod);\n\n        // add root/parent dirs to top\n        if (presentPath === \"/\") {\n            dirList.unshift({ name: \"/\", path: \"\", displayName: \"/\" });\n        } else {\n            let path = presentPath;\n            let name = presentPath;\n            const displayNames = [\n                \"fileManager.currentFolder\",\n                \"fileManager.backToParentFolder\",\n            ];\n            for (let i = 0; i < 2; i++) {\n                const paths = path.split(\"/\");\n                name = paths.pop();\n                name = name === \"\" ? \"/\" : name;\n                path = paths.join(\"/\");\n                dirList.unshift({\n                    name: name,\n                    path: path,\n                    displayName: this.props.t(displayNames[i]),\n                });\n            }\n        }\n        this.setState({ dirList });\n    };\n    render() {\n        const { classes, t } = this.props;\n\n        const showActionIcon = (index) => {\n            if (this.state.presentPath === \"/\") {\n                return index !== 0;\n            }\n            return index !== 1;\n        };\n\n        const actionIcon = (index) => {\n            if (this.state.presentPath === \"/\") {\n                return <RightIcon />;\n            }\n\n            if (index === 0) {\n                return <UpIcon />;\n            }\n            return <RightIcon />;\n        };\n\n        return (\n            <div className={classes.container}>\n                <div className={classes.sortWrapper}>\n                    <Sort\n                        value={this.state.sortBy}\n                        isSmall\n                        className={classes.sortButton}\n                        onChange={this.onChangeSort}\n                    />\n                </div>\n                <MenuList className={classes.selector}>\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected,\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.displayName}\n                                primaryTypographyProps={{\n                                    style: { whiteSpace: \"normal\" },\n                                }}\n                            />\n                            {showActionIcon(index) && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index,\n                                        })}\n                                        onClick={() =>\n                                            index === 0\n                                                ? this.back()\n                                                : this.enterFolder(\n                                                      value.path === \"/\"\n                                                          ? value.path +\n                                                                value.name\n                                                          : value.path +\n                                                                \"/\" +\n                                                                value.name,\n                                                  )\n                                        }\n                                    >\n                                        {actionIcon(index)}\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withStyles(styles)(withTranslation()(PathSelectorCompoment)));\n"],"sourceRoot":""}